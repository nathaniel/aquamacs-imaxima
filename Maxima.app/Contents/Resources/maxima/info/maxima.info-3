This is maxima.info, produced by makeinfo version 4.8 from maxima.texi.

   This is a Texinfo Maxima Manual

   Copyright 1994,2001 William F. Schelter

INFO-DIR-SECTION Math
START-INFO-DIR-ENTRY
* Maxima: (maxima).     A computer algebra system.
END-INFO-DIR-ENTRY


File: maxima.info,  Node: Functions and Variables for solve_rec,  Prev: Introduction to solve_rec,  Up: solve_rec

75.2 Functions and Variables for solve_rec
==========================================

 -- Function: reduce_order (<rec>, <sol>, <var>)
     Reduces the order of linear recurrence <rec> when a particular
     solution <sol> is known. The reduced reccurence can be used to get
     other solutions.

     Example:

          (%i3) rec: x[n+2] = x[n+1] + x[n]/n;
                                                x
                                                 n
          (%o3)               x      = x      + --
                               n + 2    n + 1   n
          (%i4) solve_rec(rec, x[n]);
          WARNING: found some hypergeometrical solutions!
          (%o4)                    x  = %k  n
                                    n     1
          (%i5) reduce_order(rec, n, x[n]);
          (%t5)                    x  = n %z
                                    n       n

                                     n - 1
                                     ====
                                     \
          (%t6)                %z  =  >     %u
                                 n   /        %j
                                     ====
                                     %j = 0

          (%o6)             (- n - 2) %u     - %u
                                        n + 1     n
          (%i6) solve_rec((n+2)*%u[n+1] + %u[n], %u[n]);
                                               n
                                      %k  (- 1)
                                        1
          (%o6)                 %u  = ----------
                                  n    (n + 1)!

          So the general solution is

                       n - 1
                       ====        j
                       \      (- 1)
                 %k  n  >    -------- + %k  n
                   2   /     (j + 1)!     1
                       ====
                       j = 0


 -- Option variable: simplify_products
     Default value: `true'

     If `simplify_products' is `true', `solve_rec' will try to simplify
     products in result.

     See also: `solve_rec'.


 -- Function: simplify_sum (<expr>)
     Tries to simplify all sums appearing in <expr> to a closed form.

     To use this function first load the `simplify_sum' package with
     `load(simplify_sum)'.

     Example:

          (%i1) load("simplify_sum")$
          (%i2) sum(binomial(n+k,k)/2^k,k,1,n)+sum(binomial(2*n,2*k),k,1,n);
                  n                          n
                 ====                       ====
                 \     binomial(n + k, k)   \
          (%o2)   >    ------------------ +  >    binomial(2 n, 2 k)
                 /              k           /
                 ====          2            ====
                 k = 1                      k = 1
          (%i3) simplify_sum(%);

                                   2 n - 1    n
          (%o3)                   2        + 2  - 2


 -- Function: solve_rec (<eqn>, <var>, [<init>])
     Solves for hypergeometrical solutions to linear recurrence <eqn>
     with polynomials coefficient in variable <var>. Optional arguments
     <init> are initial conditions.

     `solve_rec' can solve linear recurrences with constant
     coefficients, finds hypergeometrical solutions to homogeneous
     linear recurrences with polynomial coefficients, rational
     solutions to linear recurrences with polynomial coefficients and
     can solve Ricatti type recurrences.

     Note that the running time of the algorithm used to find
     hypergeometrical solutions is exponential in the degree of the
     leading and trailing coefficient.

     To use this function first load the `solve_rec' package with
     `load(solve_rec);'.

     Example of linear recurrence with constant coefficients:

          (%i2) solve_rec(a[n]=a[n-1]+a[n-2]+n/2^n, a[n]);
                                  n          n
                     (sqrt(5) - 1)  %k  (- 1)
                                      1           n
          (%o2) a  = ------------------------- - ----
                 n               n                  n
                                2                5 2
                                                          n
                                             (sqrt(5) + 1)  %k
                                                              2    2
                                           + ------------------ - ----
                                                      n              n
                                                     2            5 2

     Example of linear recurrence with polynomial coefficients:

          (%i7) 2*x*(x+1)*y[x] - (x^2+3*x-2)*y[x+1] + (x-1)*y[x+2];
                                   2
          (%o7) (x - 1) y      - (x  + 3 x - 2) y      + 2 x (x + 1) y
                         x + 2                   x + 1                x
          (%i8) solve_rec(%, y[x], y[1]=1, y[3]=3);
                                        x
                                     3 2    x!
          (%o9)                 y  = ---- - --
                                 x    4     2

     Example of Ricatti type recurrence:

          (%i2) x*y[x+1]*y[x] - y[x+1]/(x+2) + y[x]/(x-1) = 0;
                                      y         y
                                       x + 1     x
          (%o2)         x y  y      - ------ + ----- = 0
                           x  x + 1   x + 2    x - 1
          (%i3) solve_rec(%, y[x], y[3]=5)$
          (%i4) ratsimp(minfactorial(factcomb(%)));
                                             3
                                         30 x  - 30 x
          (%o4) y  = - -------------------------------------------------
                 x        6      5       4       3       2
                       5 x  - 3 x  - 25 x  + 15 x  + 20 x  - 12 x - 1584

     See also: `solve_rec_rat', `simplify_products', and
     `product_use_gamma'.


 -- Function: solve_rec_rat (<eqn>, <var>, [<init>])
     Solves for rational solutions to linear recurrences. See solve_rec
     for description of arguments.

     To use this function first load the `solve_rec' package with
     `load(solve_rec);'.

     Example:

          (%i1) (x+4)*a[x+3] + (x+3)*a[x+2] - x*a[x+1] + (x^2-1)*a[x];
          (%o1)  (x + 4) a      + (x + 3) a      - x a
                          x + 3            x + 2      x + 1
                                                             2
                                                         + (x  - 1) a
                                                                      x
          (%i2) solve_rec_rat(% = (x+2)/(x+1), a[x]);
                                 1
          (%o2)      a  = ---------------
                      x   (x - 1) (x + 1)

     See also: `solve_rec'.


 -- Option variable: product_use_gamma
     Default value: `true'

     When simplifying products, `solve_rec' introduces gamma function
     into the expression if `product_use_gamma' is `true'.

     See also: `simplify_products', `solve_rec'.


 -- Function: summand_to_rec (<summand>, <k>, <n>)
 -- Function: summand_to_rec (<summand>, [<k>, <lo>, <hi>], <n>)
     Returns the recurrence sattisfied by the sum

               hi
              ====
              \
               >     summand
              /
              ====
            k = lo

     where summand is hypergeometrical in <k> and <n>. If <lo> and <hi>
     are omited, they are assumed to be `lo = -inf' and `hi = inf'.

     To use this function first load the `simplify_sum' package with
     `load(simplify_sum)'.

     Example:

          (%i1) load("simplify_sum")$
          (%i2) summand: binom(n,k);
          (%o2)                           binomial(n, k)
          (%i3) summand_to_rec(summand,k,n);
          (%o3)                      2 sm  - sm      = 0
                                         n     n + 1
          (%i7) summand: binom(n, k)/(k+1);
                                          binomial(n, k)
          (%o7)                           --------------
                                              k + 1
          (%i8) summand_to_rec(summand, [k, 0, n], n);
          (%o8)               2 (n + 1) sm  - (n + 2) sm      = - 1
                                          n             n + 1



File: maxima.info,  Node: stats,  Next: stirling,  Prev: solve_rec,  Up: Top

76 stats
********

* Menu:

* Introduction to stats::
* Functions and Variables for inference_result::
* Functions and Variables for stats::
* Functions and Variables for special distributions::


File: maxima.info,  Node: Introduction to stats,  Next: Functions and Variables for inference_result,  Prev: Top,  Up: Top

76.1 Introduction to stats
==========================

Package `stats' contains a set of classical statistical inference and
hypothesis testing procedures.

   All these functions return an `inference_result' Maxima object which
contains the necessary results for population inferences and decision
making.

   Global variable `stats_numer' controls whether results are given in
floating point or symbolic and rational format; its default value is
`true' and results are returned in floating point format.

   Package `descriptive' contains some utilities to manipulate data
structures (lists and matrices); for example, to extract subsamples. It
also contains some examples on how to use package `numericalio' to read
data from plain text files. See `descriptive' and `numericalio' for
more details.

   Package `stats' loads packages `descriptive', `distrib' and
`inference_result'.

   For comments, bugs or suggestions, please contact the author at

   <'mario AT edu DOT xunta DOT es'>.


File: maxima.info,  Node: Functions and Variables for inference_result,  Next: Functions and Variables for stats,  Prev: Introduction to stats,  Up: Top

76.2 Functions and Variables for inference_result
=================================================

 -- Function: inference_result (<title>, <values>, <numbers>)
     Constructs an `inference_result' object of the type returned by the
     stats functions. Argument <title> is a string with the name of the
     procedure; <values> is a list with elements of the form `symbol =
     value' and <numbers> is a list with positive integer numbers
     ranging from one to `length(<values>)', indicating which values
     will be shown by default.

     Example:

     This is a simple example showing results concerning a rectangle.
     The title of this object is the string `"Rectangle"', it stores
     five results, named `'base', `'height', `'diagonal', `'area', and
     `'perimeter', but only the first, second, fifth, and fourth will
     be displayed. The `'diagonal' is stored in this object, but it is
     not displayed; to access its value, make use of function
     `take_inference'.

          (%i1) load(inference_result)$
          (%i2) b: 3$ h: 2$
          (%i3) inference_result("Rectangle",
                                  ['base=b,
                                   'height=h,
                                   'diagonal=sqrt(b^2+h^2),
                                   'area=b*h,
                                   'perimeter=2*(b+h)],
                                  [1,2,5,4] );
                                  |   Rectangle
                                  |
                                  |    base = 3
                                  |
          (%o3)                   |   height = 2
                                  |
                                  | perimeter = 10
                                  |
                                  |    area = 6
          (%i4) take_inference('diagonal,%);
          (%o4)                        sqrt(13)

     See also `take_inference'.


 -- Function: inferencep (<obj>)
     Returns `true' or `false', depending on whether <obj> is an
     `inference_result' object or not.


 -- Function: items_inference (<obj>)
     Returns a list with the names of the items stored in <obj>, which
     must be an `inference_result' object.

     Example:

     The `inference_result' object stores two values, named `'pi' and
     `'e', but only the second is displayed. The `items_inference'
     function returns the names of all items, no matter they are
     displayed or not.

          (%i1) load(inference_result)$
          (%i2) inference_result("Hi", ['pi=%pi,'e=%e],[2]);
                                      |   Hi
          (%o2)                       |
                                      | e = %e
          (%i3) items_inference(%);
          (%o3)                        [pi, e]


 -- Function: take_inference (<n>, <obj>)
 -- Function: take_inference (<name>, <obj>)
 -- Function: take_inference (<list>, <obj>)
     Returns the <n>-th value stored in <obj> if <n> is a positive
     integer, or the item named <name> if this is the name of an item.
     If the first argument is a list of numbers and/or symbols,
     function `take_inference' returns a list with the corresponding
     results.

     Example:

     Given an `inference_result' object, function `take_inference' is
     called in order to extract some information stored in it.

          (%i1) load(inference_result)$
          (%i2) b: 3$ h: 2$
          (%i3) sol: inference_result("Rectangle",
                                      ['base=b,
                                       'height=h,
                                       'diagonal=sqrt(b^2+h^2),
                                       'area=b*h,
                                       'perimeter=2*(b+h)],
                                      [1,2,5,4] );
                                  |   Rectangle
                                  |
                                  |    base = 3
                                  |
          (%o3)                   |   height = 2
                                  |
                                  | perimeter = 10
                                  |
                                  |    area = 6
          (%i4) take_inference('base,sol);
          (%o4)                           3
          (%i5) take_inference(5,sol);
          (%o5)                          10
          (%i6) take_inference([1,'diagonal],sol);
          (%o6)                     [3, sqrt(13)]
          (%i7) take_inference(items_inference(sol),sol);
          (%o7)                [3, 2, sqrt(13), 6, 10]

     See also `inference_result' and `take_inference'.



File: maxima.info,  Node: Functions and Variables for stats,  Next: Functions and Variables for special distributions,  Prev: Functions and Variables for inference_result,  Up: Top

76.3 Functions and Variables for stats
======================================

 -- Option variable: stats_numer
     Default value: `true'

     If `stats_numer' is `true', inference statistical functions return
     their results in floating point numbers. If it is `false', results
     are given in symbolic and rational format.


 -- Function: test_mean (<x>)
 -- Function: test_mean (<x>, <options> ...)
     This is the mean <t>-test. Argument <x> is a list or a column
     matrix containing a one dimensional sample. It also performs an
     asymptotic test based on the Central Limit Theorem if option
     `'asymptotic' is `true'.

     Options:

        * `'mean', default `0', is the mean value to be checked.

        * `'alternative', default `'twosided', is the alternative
          hypothesis; valid values are: `'twosided', `'greater' and
          `'less'.

        * `'dev', default `'unknown', this is the value of the standard
          deviation when it is known; valid values are: `'unknown' or a
          positive expression.

        * `'conflevel', default `95/100', confidence level for the
          confidence interval; it must be an expression which takes a
          value in (0,1).

        * `'asymptotic', default `false', indicates whether it performs
          an exact <t>-test or an asymptotic one based on the Central
          Limit Theorem; valid values are `true' and `false'.


     The output of function `test_mean' is an `inference_result' Maxima
     object showing the following results:

       1. `'mean_estimate': the sample mean.

       2. `'conf_level': confidence level selected by the user.

       3. `'conf_interval': confidence interval for the population mean.

       4. `'method': inference procedure.

       5. `'hypotheses': null and alternative hypotheses to be tested.

       6. `'statistic': value of the sample statistic used for testing
          the null hypothesis.

       7. `'distribution': distribution of the sample statistic,
          together with its parameter(s).

       8. `'p_value': p-value of the test.


     Examples:

     Performs an exact <t>-test with unknown variance. The null
     hypothesis is H_0: mean=50 against the one sided alternative H_1:
     mean<50; according to the results, the p-value is too great, there
     are no evidence for rejecting H_0.

          (%i1) load("stats")$
          (%i2) data: [78,64,35,45,45,75,43,74,42,42]$
          (%i3) test_mean(data,'conflevel=0.9,'alternative='less,'mean=50);
                    |                 MEAN TEST
                    |
                    |            mean_estimate = 54.3
                    |
                    |              conf_level = 0.9
                    |
                    | conf_interval = [minf, 61.51314273502712]
                    |
          (%o3)     |  method = Exact t-test. Unknown variance.
                    |
                    | hypotheses = H0: mean = 50 , H1: mean < 50
                    |
                    |       statistic = .8244705235071678
                    |
                    |       distribution = [student_t, 9]
                    |
                    |        p_value = .7845100411786889

     This time Maxima performs an asymptotic test, based on the Central
     Limit Theorem.  The null hypothesis is H_0: equal(mean, 50)
     against the two sided alternative H_1: not equal(mean, 50);
     according to the results, the p-value is very small, H_0 should be
     rejected in favor of the alternative H_1. Note that, as indicated
     by the `Method' component, this procedure should be applied to
     large samples.

          (%i1) load("stats")$
          (%i2) test_mean([36,118,52,87,35,256,56,178,57,57,89,34,25,98,35,
                        98,41,45,198,54,79,63,35,45,44,75,42,75,45,45,
                        45,51,123,54,151],
                        'asymptotic=true,'mean=50);
                    |                       MEAN TEST
                    |
                    |           mean_estimate = 74.88571428571429
                    |
                    |                   conf_level = 0.95
                    |
                    | conf_interval = [57.72848600856194, 92.04294256286663]
                    |
          (%o2)     |    method = Large sample z-test. Unknown variance.
                    |
                    |       hypotheses = H0: mean = 50 , H1: mean # 50
                    |
                    |             statistic = 2.842831192874313
                    |
                    |             distribution = [normal, 0, 1]
                    |
                    |             p_value = .004471474652002261


 -- Function: test_means_difference (<x1>, <x2>)
 -- Function: test_means_difference (<x1>, <x2>, <options> ...)
     This is the difference of means <t>-test for two samples.
     Arguments <x1> and <x2> are lists or column matrices containing
     two independent samples. In case of different unknown variances
     (see options `'dev1', `'dev2' and `'varequal' bellow), the degrees
     of freedom are computed by means of the Welch approximation.  It
     also performs an asymptotic test based on the Central Limit
     Theorem if option `'asymptotic' is set to `true'.

     Options:

        *        * `'alternative', default `'twosided', is the alternative
          hypothesis; valid values are: `'twosided', `'greater' and
          `'less'.

        * `'dev1', default `'unknown', this is the value of the
          standard deviation of the <x1> sample when it is known; valid
          values are: `'unknown' or a positive expression.

        * `'dev2', default `'unknown', this is the value of the
          standard deviation of the <x2> sample when it is known; valid
          values are: `'unknown' or a positive expression.

        * `'varequal', default `false', whether variances should be
          considered to be equal or not; this option takes effect only
          when `'dev1' and/or `'dev2' are  `'unknown'.

        * `'conflevel', default `95/100', confidence level for the
          confidence interval; it must be an expression which takes a
          value in (0,1).

        * `'asymptotic', default `false', indicates whether it performs
          an exact <t>-test or an asymptotic one based on the Central
          Limit Theorem; valid values are `true' and `false'.


     The output of function `test_means_difference' is an
     `inference_result' Maxima object showing the following results:

       1. `'diff_estimate': the difference of means estimate.

       2. `'conf_level': confidence level selected by the user.

       3. `'conf_interval': confidence interval for the difference of
          means.

       4. `'method': inference procedure.

       5. `'hypotheses': null and alternative hypotheses to be tested.

       6. `'statistic': value of the sample statistic used for testing
          the null hypothesis.

       7. `'distribution': distribution of the sample statistic,
          together with its parameter(s).

       8. `'p_value': p-value of the test.


     Examples:

     The equality of means is tested with two small samples <x> and <y>,
     against the alternative H_1: m_1>m_2, being m_1 and m_2 the
     populations means; variances are unknown and supposed to be
     different.

          (%i1) load("stats")$
          (%i2) x: [20.4,62.5,61.3,44.2,11.1,23.7]$
          (%i3) y: [1.2,6.9,38.7,20.4,17.2]$
          (%i4) test_means_difference(x,y,'alternative='greater);
                      |              DIFFERENCE OF MEANS TEST
                      |
                      |         diff_estimate = 20.31999999999999
                      |
                      |                 conf_level = 0.95
                      |
                      |    conf_interval = [- .04597417812882298, inf]
                      |
          (%o4)       |        method = Exact t-test. Welch approx.
                      |
                      | hypotheses = H0: mean1 = mean2 , H1: mean1 > mean2
                      |
                      |           statistic = 1.838004300728477
                      |
                      |    distribution = [student_t, 8.62758740184604]
                      |
                      |            p_value = .05032746527991905

     The same test as before, but now variances are supposed to be
     equal.

          (%i1) load("stats")$
          (%i2) x: [20.4,62.5,61.3,44.2,11.1,23.7]$
          (%i3) y: matrix([1.2],[6.9],[38.7],[20.4],[17.2])$
          (%i4) test_means_difference(x,y,'alternative='greater,
                                                           'varequal=true);
                      |              DIFFERENCE OF MEANS TEST
                      |
                      |         diff_estimate = 20.31999999999999
                      |
                      |                 conf_level = 0.95
                      |
                      |     conf_interval = [- .7722627696897568, inf]
                      |
          (%o4)       |   method = Exact t-test. Unknown equal variances
                      |
                      | hypotheses = H0: mean1 = mean2 , H1: mean1 > mean2
                      |
                      |           statistic = 1.765996124515009
                      |
                      |           distribution = [student_t, 9]
                      |
                      |            p_value = .05560320992529344


 -- Function: test_variance (<x>)
 -- Function: test_variance (<x>, <options>, ...)
     This is the variance <chi^2>-test. Argument <x> is a list or a
     column matrix containing a one dimensional sample taken from a
     normal population.

     Options:

        * `'mean', default `'unknown', is the population's mean, when
          it is known.

        * `'alternative', default `'twosided', is the alternative
          hypothesis; valid values are: `'twosided', `'greater' and
          `'less'.

        * `'variance', default `1', this is the variance value
          (positive) to be checked.

        * `'conflevel', default `95/100', confidence level for the
          confidence interval; it must be an expression which takes a
          value in (0,1).


     The output of function `test_variance' is an `inference_result'
     Maxima object showing the following results:

       1. `'var_estimate': the sample variance.

       2. `'conf_level': confidence level selected by the user.

       3. `'conf_interval': confidence interval for the population
          variance.

       4. `'method': inference procedure.

       5. `'hypotheses': null and alternative hypotheses to be tested.

       6. `'statistic': value of the sample statistic used for testing
          the null hypothesis.

       7. `'distribution': distribution of the sample statistic,
          together with its parameter.

       8. `'p_value': p-value of the test.


     Examples:

     It is tested whether the variance of a population with unknown mean
     is equal to or greater than 200.

          (%i1) load("stats")$
          (%i2) x: [203,229,215,220,223,233,208,228,209]$
          (%i3) test_variance(x,'alternative='greater,'variance=200);
                       |                  VARIANCE TEST
                       |
                       |              var_estimate = 110.75
                       |
                       |                conf_level = 0.95
                       |
                       |     conf_interval = [57.13433376937479, inf]
                       |
          (%o3)        | method = Variance Chi-square test. Unknown mean.
                       |
                       |    hypotheses = H0: var = 200 , H1: var > 200
                       |
                       |                 statistic = 4.43
                       |
                       |             distribution = [chi2, 8]
                       |
                       |           p_value = .8163948512777689


 -- Function: test_variance_ratio (<x1>, <x2>)
 -- Function: test_variance_ratio (<x1>, <x2>, <options> ...)
     This is the variance ratio <F>-test for two normal populations.
     Arguments <x1> and <x2> are lists or column matrices containing
     two independent samples.

     Options:

        * `'alternative', default `'twosided', is the alternative
          hypothesis; valid values are: `'twosided', `'greater' and
          `'less'.

        * `'mean1', default `'unknown', when it is known, this is the
          mean of the population from which <x1> was taken.

        * `'mean2', default `'unknown', when it is known, this is the
          mean of the population from which <x2> was taken.

        * `'conflevel', default `95/100', confidence level for the
          confidence interval of the ratio; it must be an expression
          which takes a value in (0,1).


     The output of function `test_variance_ratio' is an
     `inference_result' Maxima object showing the following results:

       1. `'ratio_estimate': the sample variance ratio.

       2. `'conf_level': confidence level selected by the user.

       3. `'conf_interval': confidence interval for the variance ratio.

       4. `'method': inference procedure.

       5. `'hypotheses': null and alternative hypotheses to be tested.

       6. `'statistic': value of the sample statistic used for testing
          the null hypothesis.

       7. `'distribution': distribution of the sample statistic,
          together with its parameters.

       8. `'p_value': p-value of the test.


     Examples:

     The equality of the variances of two normal populations is checked
     against the alternative that the first is greater than the second.

          (%i1) load("stats")$
          (%i2) x: [20.4,62.5,61.3,44.2,11.1,23.7]$
          (%i3) y: [1.2,6.9,38.7,20.4,17.2]$
          (%i4) test_variance_ratio(x,y,'alternative='greater);
                        |              VARIANCE RATIO TEST
                        |
                        |       ratio_estimate = 2.316933391522034
                        |
                        |               conf_level = 0.95
                        |
                        |    conf_interval = [.3703504689507268, inf]
                        |
          (%o4)         | method = Variance ratio F-test. Unknown means.
                        |
                        | hypotheses = H0: var1 = var2 , H1: var1 > var2
                        |
                        |         statistic = 2.316933391522034
                        |
                        |            distribution = [f, 5, 4]
                        |
                        |          p_value = .2179269692254457


 -- Function: test_proportion (<x>, <n>)
 -- Function: test_proportion (<x>, <n>, <options> ...)
     Inferences on a proportion. Argument <x> is the number of successes
     in <n> trials in a Bernoulli experiment with unknown probability.

     Options:

        * `'proportion', default `1/2', is the value of the proportion
          to be checked.

        * `'alternative', default `'twosided', is the alternative
          hypothesis; valid values are: `'twosided', `'greater' and
          `'less'.

        * `'conflevel', default `95/100', confidence level for the
          confidence interval; it must be an expression which takes a
          value in (0,1).

        * `'asymptotic', default `false', indicates whether it performs
          an exact test based on the binomial distribution, or an
          asymptotic one based on the Central Limit Theorem; valid
          values are `true' and `false'.

        * `'correct', default `true', indicates whether Yates
          correction is applied or not.


     The output of function `test_proportion' is an `inference_result'
     Maxima object showing the following results:

       1. `'sample_proportion': the sample proportion.

       2. `'conf_level': confidence level selected by the user.

       3. `'conf_interval': Wilson confidence interval for the
          proportion.

       4. `'method': inference procedure.

       5. `'hypotheses': null and alternative hypotheses to be tested.

       6. `'statistic': value of the sample statistic used for testing
          the null hypothesis.

       7. `'distribution': distribution of the sample statistic,
          together with its parameters.

       8. `'p_value': p-value of the test.


     Examples:

     Performs an exact test. The null hypothesis is H_0: p=1/2 against
     the one sided alternative H_1: p<1/2.

          (%i1) load("stats")$
          (%i2) test_proportion(45, 103, alternative = less);
                   |            PROPORTION TEST
                   |
                   | sample_proportion = .4368932038834951
                   |
                   |           conf_level = 0.95
                   |
                   | conf_interval = [0, 0.522714149150231]
                   |
          (%o2)    |     method = Exact binomial test.
                   |
                   | hypotheses = H0: p = 0.5 , H1: p < 0.5
                   |
                   |             statistic = 45
                   |
                   |  distribution = [binomial, 103, 0.5]
                   |
                   |      p_value = .1184509388901454

     A two sided asymptotic test. Confidence level is 99/100.

          (%i1) load("stats")$
          (%i2) fpprintprec:7$
          (%i3) test_proportion(45, 103,
                            conflevel = 99/100, asymptotic=true);
                |                 PROPORTION TEST
                |
                |           sample_proportion = .43689
                |
                |                conf_level = 0.99
                |
                |        conf_interval = [.31422, .56749]
                |
          (%o3) | method = Asympthotic test with Yates correction.
                |
                |     hypotheses = H0: p = 0.5 , H1: p # 0.5
                |
                |               statistic = .43689
                |
                |      distribution = [normal, 0.5, .048872]
                |
                |                p_value = .19662


 -- Function: test_proportions_difference (<x1>, <n1>, <x2>, <n2>)
 -- Function: test_proportions_difference (<x1>, <n1>, <x2>, <n2>,
          <options> ...)
     Inferences on the difference of two proportions. Argument <x1> is
     the number of successes in <n1> trials in a Bernoulli experiment
     in the first population, and <x2> and <n2> are the corresponding
     values in the second population. Samples are independent and the
     test is asymptotic.

     Options:

        * `'alternative', default `'twosided', is the alternative
          hypothesis; valid values are: `'twosided' (`p1 # p2'),
          `'greater' (`p1 > p2') and `'less' (`p1 < p2').

        * `'conflevel', default `95/100', confidence level for the
          confidence interval; it must be an expression which takes a
          value in (0,1).

        * `'correct', default `true', indicates whether Yates
          correction is applied or not.


     The output of function `test_proportions_difference' is an
     `inference_result' Maxima object showing the following results:

       1. `'proportions': list with the two sample proportions.

       2. `'conf_level': confidence level selected by the user.

       3. `'conf_interval': Confidence interval for the difference of
          proportions `p1 - p2'.

       4. `'method': inference procedure and warning message in case of
          any of the samples sizes is less than 10.

       5. `'hypotheses': null and alternative hypotheses to be tested.

       6. `'statistic': value of the sample statistic used for testing
          the null hypothesis.

       7. `'distribution': distribution of the sample statistic,
          together with its parameters.

       8. `'p_value': p-value of the test.


     Examples:

     A machine produced 10 defective articles in a batch of 250.  After
     some maintenance work, it produces 4 defective in a batch of 150.
     In order to know if the machine has improved, we test the null
     hypothesis `H0:p1=p2', against the alternative `H0:p1>p2', where
     `p1' and `p2' are the probabilities for one produced article to be
     defective before and after maintenance. According to the p value,
     there is not enough evidence to accept the alternative.

          (%i1) load("stats")$
          (%i2) fpprintprec:7$
          (%i3) test_proportions_difference(10, 250, 4, 150,
                                          alternative = greater);
                |       DIFFERENCE OF PROPORTIONS TEST
                |
                |       proportions = [0.04, .02666667]
                |
                |              conf_level = 0.95
                |
                |      conf_interval = [- .02172761, 1]
                |
          (%o3) | method = Asymptotic test. Yates correction.
                |
                |   hypotheses = H0: p1 = p2 , H1: p1 > p2
                |
                |            statistic = .01333333
                |
                |    distribution = [normal, 0, .01898069]
                |
                |             p_value = .2411936

     Exact standard deviation of the asymptotic normal distribution
     when the data are unknown.

          (%i1) load("stats")$
          (%i2) stats_numer: false$
          (%i3) sol: test_proportions_difference(x1,n1,x2,n2)$
          (%i4) last(take_inference('distribution,sol));
                         1    1                  x2 + x1
                        (-- + --) (x2 + x1) (1 - -------)
                         n2   n1                 n2 + n1
          (%o4)    sqrt(---------------------------------)
                                     n2 + n1


 -- Function: test_sign (<x>)
 -- Function: test_sign (<x>, <options> ...)
     This is the non parametric sign test for the median of a
     continuous population.  Argument <x> is a list or a column matrix
     containing a one dimensional sample.

     Options:

        * `'alternative', default `'twosided', is the alternative
          hypothesis; valid values are: `'twosided', `'greater' and
          `'less'.

        * `'median', default `0', is the median value to be checked.


     The output of function `test_sign' is an `inference_result' Maxima
     object showing the following results:

       1. `'med_estimate': the sample median.

       2. `'method': inference procedure.

       3. `'hypotheses': null and alternative hypotheses to be tested.

       4. `'statistic': value of the sample statistic used for testing
          the null hypothesis.

       5. `'distribution': distribution of the sample statistic,
          together with its parameter(s).

       6. `'p_value': p-value of the test.


     Examples:

     Checks whether the population from which the sample was taken has
     median 6, against the alternative H_1: median > 6.

          (%i1) load("stats")$
          (%i2) x: [2,0.1,7,1.8,4,2.3,5.6,7.4,5.1,6.1,6]$
          (%i3) test_sign(x,'median=6,'alternative='greater);
                         |                  SIGN TEST
                         |
                         |              med_estimate = 5.1
                         |
                         |      method = Non parametric sign test.
                         |
          (%o3)          | hypotheses = H0: median = 6 , H1: median > 6
                         |
                         |                statistic = 7
                         |
                         |      distribution = [binomial, 10, 0.5]
                         |
                         |         p_value = .05468749999999989


 -- Function: test_signed_rank (<x>)
 -- Function: test_signed_rank (<x>, <options> ...)
     This is the Wilcoxon signed rank test to make inferences about the
     median of a continuous population. Argument <x> is a list or a
     column matrix containing a one dimensional sample. Performs normal
     approximation if the sample size is greater than 20, or if there
     are zeroes or ties.

     See also `pdf_rank_test' and `cdf_rank_test'.

     Options:

        * `'median', default `0', is the median value to be checked.

        * `'alternative', default `'twosided', is the alternative
          hypothesis; valid values are: `'twosided', `'greater' and
          `'less'.


     The output of function `test_signed_rank' is an `inference_result'
     Maxima object with the following results:

       1. `'med_estimate': the sample median.

       2. `'method': inference procedure.

       3. `'hypotheses': null and alternative hypotheses to be tested.

       4. `'statistic': value of the sample statistic used for testing
          the null hypothesis.

       5. `'distribution': distribution of the sample statistic,
          together with its parameter(s).

       6. `'p_value': p-value of the test.


     Examples:

     Checks the null hypothesis H_0: median = 15 against the
     alternative H_1: median > 15. This is an exact test, since there
     are no ties.

          (%i1) load("stats")$
          (%i2) x: [17.1,15.9,13.7,13.4,15.5,17.6]$
          (%i3) test_signed_rank(x,median=15,alternative=greater);
                           |             SIGNED RANK TEST
                           |
                           |           med_estimate = 15.7
                           |
                           |           method = Exact test
                           |
          (%o3)            | hypotheses = H0: med = 15 , H1: med > 15
                           |
                           |              statistic = 14
                           |
                           |     distribution = [signed_rank, 6]
                           |
                           |            p_value = 0.28125

     Checks the null hypothesis H_0: equal(median, 2.5) against the
     alternative H_1: not equal(median, 2.5). This is an approximated
     test, since there are ties.

          (%i1) load("stats")$
          (%i2) y:[1.9,2.3,2.6,1.9,1.6,3.3,4.2,4,2.4,2.9,1.5,3,2.9,4.2,3.1]$
          (%i3) test_signed_rank(y,median=2.5);
                       |                 SIGNED RANK TEST
                       |
                       |                med_estimate = 2.9
                       |
                       |          method = Asymptotic test. Ties
                       |
          (%o3)        |    hypotheses = H0: med = 2.5 , H1: med # 2.5
                       |
                       |                 statistic = 76.5
                       |
                       | distribution = [normal, 60.5, 17.58195097251724]
                       |
                       |           p_value = .3628097734643669


 -- Function: test_rank_sum (<x1>, <x2>)
 -- Function: test_rank_sum (<x1>, <x2>, <option>)
     This is the Wilcoxon-Mann-Whitney test for comparing the medians
     of two continuous populations. The first two arguments <x1> and
     <x2> are lists or column matrices with the data of two independent
     samples. Performs normal approximation if any of the sample sizes
     is greater than 10, or if there are ties.

     Option:

        * `'alternative', default `'twosided', is the alternative
          hypothesis; valid values are: `'twosided', `'greater' and
          `'less'.


     The output of function `test_rank_sum' is an `inference_result'
     Maxima object with the following results:

       1. `'method': inference procedure.

       2. `'hypotheses': null and alternative hypotheses to be tested.

       3. `'statistic': value of the sample statistic used for testing
          the null hypothesis.

       4. `'distribution': distribution of the sample statistic,
          together with its parameters.

       5. `'p_value': p-value of the test.


     Examples:

     Checks whether populations have similar medians. Samples sizes are
     small and an exact test is made.

          (%i1) load("stats")$
          (%i2) x:[12,15,17,38,42,10,23,35,28]$
          (%i3) y:[21,18,25,14,52,65,40,43]$
          (%i4) test_rank_sum(x,y);
                        |                 RANK SUM TEST
                        |
                        |              method = Exact test
                        |
                        | hypotheses = H0: med1 = med2 , H1: med1 # med2
          (%o4)         |
                        |                 statistic = 22
                        |
                        |        distribution = [rank_sum, 9, 8]
                        |
                        |          p_value = .1995886466474702

     Now, with greater samples and ties, the procedure makes normal
     approximation. The alternative hypothesis is H_1: median1 <
     median2.

          (%i1) load("stats")$
          (%i2) x: [39,42,35,13,10,23,15,20,17,27]$
          (%i3) y: [20,52,66,19,41,32,44,25,14,39,43,35,19,56,27,15]$
          (%i4) test_rank_sum(x,y,'alternative='less);
                       |                  RANK SUM TEST
                       |
                       |          method = Asymptotic test. Ties
                       |
                       |  hypotheses = H0: med1 = med2 , H1: med1 < med2
          (%o4)        |
                       |                 statistic = 48.5
                       |
                       | distribution = [normal, 79.5, 18.95419580097078]
                       |
                       |           p_value = .05096985666598441


 -- Function: test_normality (<x>)
     Shapiro-Wilk test for normality. Argument <x> is a list of
     numbers, and sample size must be greater than 2 and less or equal
     than 5000, otherwise, function `test_normality' signals an error
     message.

     Reference:

     [1] Algorithm AS R94, Applied Statistics (1995), vol.44, no.4,
     547-551

     The output of function `test_normality' is an `inference_result'
     Maxima object with the following results:

       1. `'statistic': value of the <W> statistic.

       2. `'p_value': p-value under normal assumption.


     Examples:

     Checks for the normality of a population, based on a sample of
     size 9.

          (%i1) load("stats")$
          (%i2) x:[12,15,17,38,42,10,23,35,28]$
          (%i3) test_normality(x);
                                 |      SHAPIRO - WILK TEST
                                 |
          (%o3)                  | statistic = .9251055695162436
                                 |
                                 |  p_value = .4361763918860381


 -- Function: simple_linear_regression (<x>)
 -- Function: simple_linear_regression (<x> <option>)
     Simple linear regression, y_i=a+b x_i+e_i, where e_i are N(0,sigma)
     independent random variables. Argument <x> must be a two column
     matrix or a list of pairs.

     Options:

        * `'conflevel', default `95/100', confidence level for the
          confidence interval; it must be an expression which takes a
          value in (0,1).

        * `'regressor', default `'x', name of the independent variable.


     The output of function `simple_linear_regression' is an
     `inference_result' Maxima object with the following results:

       1. `'model': the fitted equation. Useful to make new
          predictions. See examples bellow.

       2. `'means': bivariate mean.

       3. `'variances': variances of both variables.

       4. `'correlation': correlation coefficient.

       5. `'adc': adjusted determination coefficient.

       6. `'a_estimation': estimation of parameter <a>.

       7. `'a_conf_int': confidence interval of parameter <a>.

       8. `'b_estimation': estimation of parameter <b>.

       9. `'b_conf_int': confidence interval of parameter <b>.

      10. `'hypotheses': null and alternative hypotheses about
          parameter <b>.

      11. `'statistic': value of the sample statistic used for testing
          the null hypothesis.

      12. `'distribution': distribution of the sample statistic,
          together with its parameter.

      13. `'p_value': p-value of the test about <b>.

      14. `'v_estimation': unbiased variance estimation, or residual
          variance.

      15. `'v_conf_int': variance confidence interval.

      16. `'cond_mean_conf_int': confidence interval for the
          conditioned mean. See examples bellow.

      17. `'new_pred_conf_int': confidence interval for a new
          prediction. See examples bellow.

      18. `'residuals': list of pairs (prediction, residual), ordered
          with respect to predictions.  This is useful for goodness of
          fit analysis. See examples bellow.


     Only items 1, 4, 14, 9, 10, 11, 12, and 13 above, in this order,
     are shown by default. The rest remain hidden until the user makes
     use of functions `items_inference' and `take_inference'.

     Example:

     Fitting a linear model to a bivariate sample. Input `%i4' plots
     the sample together with the regression line; input `%i5' computes
     `y' given `x=113'; the means and the confidence interval for a new
     prediction when `x=113' are also calculated.

          (%i1) load("stats")$
          (%i2) s:[[125,140.7], [130,155.1], [135,160.3], [140,167.2],
                                                          [145,169.8]]$
          (%i3) z:simple_linear_regression(s,conflevel=0.99);
                     |               SIMPLE LINEAR REGRESSION
                     |
                     |   model = 1.405999999999985 x - 31.18999999999804
                     |
                     |           correlation = .9611685255255155
                     |
                     |           v_estimation = 13.57966666666665
                     |
          (%o3)      | b_conf_int = [.04469633662525263, 2.767303663374718]
                     |
                     |          hypotheses = H0: b = 0 ,H1: b # 0
                     |
                     |            statistic = 6.032686683658114
                     |
                     |            distribution = [student_t, 3]
                     |
                     |             p_value = 0.0038059549413203
          (%i4) plot2d([[discrete, s], take_inference(model,z)],
                  [x,120,150],
                  [gnuplot_curve_styles, ["with points","with lines"]] )$
          (%i5) take_inference(model,z), x=133;
          (%o5)                         155.808
          (%i6) take_inference(means,z);
          (%o6)                     [135.0, 158.62]
          (%i7) take_inference(new_pred_conf_int,z), x=133;
          (%o7)              [132.0728595995113, 179.5431404004887]



File: maxima.info,  Node: Functions and Variables for special distributions,  Prev: Functions and Variables for stats,  Up: Top

76.4 Functions and Variables for special distributions
======================================================

 -- Function: pdf_signed_rank (<x>, <n>)
     Probability density function of the exact distribution of the
     signed rank statistic. Argument <x> is a real number and <n> a
     positive integer.

     See also `test_signed_rank'.


 -- Function: cdf_signed_rank (<x>, <n>)
     Cumulative density function of the exact distribution of the
     signed rank statistic. Argument <x> is a real number and <n> a
     positive integer.

     See also `test_signed_rank'.


 -- Function: pdf_rank_sum (<x>, <n>, <m>)
     Probability density function of the exact distribution of the rank
     sum statistic. Argument <x> is a real number and <n> and <m> are
     both positive integers.

     See also `test_rank_sum'.


 -- Function: cdf_rank_sum (<x>, <n>, <m>)
     Cumulative density function of the exact distribution of the rank
     sum statistic. Argument <x> is a real number and <n> and <m> are
     both positive integers.

     See also `test_rank_sum'.



File: maxima.info,  Node: stirling,  Next: stringproc,  Prev: stats,  Up: Top

77 stirling
***********

* Menu:

* Functions and Variables for stirling::


File: maxima.info,  Node: Functions and Variables for stirling,  Prev: stirling,  Up: stirling

77.1 Functions and Variables for stirling
=========================================

 -- Function: stirling (<z>,<n>)
 -- Function: stirling (<z>,<n>,<pred>)
     Replace `gamma(x)' with the O(1/x^(2n-1)) Stirling formula. when
     <n> isn't a nonnegative integer, signal an error. With the
     optional third argument `pred', the Stirling formula is applied
     only when `pred' is true.

     Reference: Abramowitz & Stegun, " Handbook of mathematical
     functions", 6.1.40.

     Examples:
          (%i1) load (stirling)$

          (%i2) stirling(gamma(%alpha+x)/gamma(x),1);
                 1/2 - x             x + %alpha - 1/2
          (%o2) x        (x + %alpha)
                                             1           1
                                      --------------- - ---- - %alpha
                                      12 (x + %alpha)   12 x
                                    %e
          (%i3) taylor(%,x,inf,1);
                              %alpha       2    %alpha
                    %alpha   x       %alpha  - x       %alpha
          (%o3)/T/ x       + -------------------------------- + . . .
                                           2 x
          (%i4) map('factor,%);
                                                 %alpha - 1
                   %alpha   (%alpha - 1) %alpha x
          (%o4)   x       + -------------------------------
                                            2

     The function `stirling' knows the difference between the variable
     'gamma' and the function gamma:

          (%i5) stirling(gamma + gamma(x),0);
                                              x - 1/2   - x
          (%o5)    gamma + sqrt(2) sqrt(%pi) x        %e
          (%i6) stirling(gamma(y) + gamma(x),0);
                                   y - 1/2   - y
          (%o6) sqrt(2) sqrt(%pi) y        %e
                                                        x - 1/2   - x
                                   + sqrt(2) sqrt(%pi) x        %e

     To apply the Stirling formula only to terms that involve the
     variable `k', use an optional third argument; for example
          (%i7) makegamma(pochhammer(a,k)/pochhammer(b,k));
          (%o7) (gamma(b)*gamma(k+a))/(gamma(a)*gamma(k+b))
          (%i8) stirling(%,1, lambda([s], not(freeof(k,s))));
          (%o8) (%e^(b-a)*gamma(b)*(k+a)^(k+a-1/2)*(k+b)^(-k-b+1/2))/gamma(a)
     The terms `gamma(a)' and `gamma(b)' are free of `k', so the
     Stirling formula was not applied to these two terms.

     To use this function write first `load("stirling")'.



File: maxima.info,  Node: stringproc,  Next: to_poly_solve,  Prev: stirling,  Up: Top

78 stringproc
*************

* Menu:

* Introduction to string processing::
* Functions and Variables for input and output::
* Functions and Variables for characters::
* Functions and Variables for strings::


File: maxima.info,  Node: Introduction to string processing,  Next: Functions and Variables for input and output,  Prev: stringproc,  Up: stringproc

78.1 Introduction to string processing
======================================

`stringproc.lisp' enlarges Maximas capabilities of working with strings
and adds some useful functions for file in/output.

   For questions and bugs please mail to van.nek at arcor.de .

   In Maxima a string is easily constructed by typing "text".
`stringp' tests for strings.

     (%i1) m: "text";
     (%o1)                         text
     (%i2) stringp(m);
     (%o2)                         true

   Characters are represented as strings of length 1.  These are not
Lisp characters.  Tests can be done with `charp' (respectively `lcharp'
and conversion from Lisp to Maxima characters with `cunlisp').

     (%i1) c: "e";
     (%o1)                           e
     (%i2) [charp(c),lcharp(c)];
     (%o2)                     [true, false]
     (%i3) supcase(c);
     (%o3)                           E
     (%i4) charp(%);
     (%o4)                         true

   All functions in `stringproc.lisp' that return characters, return
Maxima-characters.  Due to the fact, that the introduced characters are
strings of length 1, you can use a lot of string functions also for
characters.  As seen, `supcase' is one example.

   It is important to know, that the first character in a Maxima-string
is at position 1.  This is designed due to the fact that the first
element in a Maxima-list is at position 1 too.  See definitions of
`charat' and `charlist' for examples.

   In applications string-functions are often used when working with
files.  You will find some useful stream- and print-functions in
`stringproc.lisp'.  The following example shows some of the here
introduced functions at work.

   Example:

   `openw' returns an output stream to a file, `printf' then allows
formatted writing to this file. See `printf' for details.

     (%i1) s: openw("E:/file.txt");
     (%o1)                    #<output stream E:/file.txt>
     (%i2) for n:0 thru 10 do printf( s, "~d ", fib(n) );
     (%o2)                                done
     (%i3) printf( s, "~%~d ~f ~a ~a ~f ~e ~a~%",
                   42,1.234,sqrt(2),%pi,1.0e-2,1.0e-2,1.0b-2 );
     (%o3)                                false
     (%i4) close(s);
     (%o4)                                true

   After closing the stream you can open it again, this time with input
direction.  `readline' returns the entire line as one string. The
`stringproc' package now offers a lot of functions for manipulating
strings. Tokenizing can be done by `split' or `tokens'.

     (%i5) s: openr("E:/file.txt");
     (%o5)                     #<input stream E:/file.txt>
     (%i6) readline(s);
     (%o6)                     0 1 1 2 3 5 8 13 21 34 55
     (%i7) line: readline(s);
     (%o7)               42 1.234 sqrt(2) %pi 0.01 1.0E-2 1.0b-2
     (%i8) list: tokens(line);
     (%o8)           [42, 1.234, sqrt(2), %pi, 0.01, 1.0E-2, 1.0b-2]
     (%i9) map( parse_string, list );
     (%o9)            [42, 1.234, sqrt(2), %pi, 0.01, 0.01, 1.0b-2]
     (%i10) float(%);
     (%o10) [42.0, 1.234, 1.414213562373095, 3.141592653589793, 0.01,
                                                          0.01, 0.01]
     (%i11) readline(s);
     (%o11)                               false
     (%i12) close(s)$

   `readline' returns `false' when the end of file occurs.


File: maxima.info,  Node: Functions and Variables for input and output,  Next: Functions and Variables for characters,  Prev: Introduction to string processing,  Up: stringproc

78.2 Functions and Variables for input and output
=================================================

Example:

     (%i1) s: openw("E:/file.txt");
     (%o1)                     #<output stream E:/file.txt>
     (%i2) control:
     "~2tAn atom: ~20t~a~%~2tand a list: ~20t~{~r ~}~%~2t\
     and an integer: ~20t~d~%"$
     (%i3) printf( s,control, 'true,[1,2,3],42 )$
     (%o3)                                false
     (%i4) close(s);
     (%o4)                                true
     (%i5) s: openr("E:/file.txt");
     (%o5)                     #<input stream E:/file.txt>
     (%i6) while stringp( tmp:readline(s) ) do print(tmp)$
       An atom:          true
       and a list:       one two three
       and an integer:   42
     (%i7) close(s)$

 -- Function: close (<stream>)
     Closes <stream> and returns `true' if <stream> had been open.


 -- Function: flength (<stream>)
     Returns the number of elements in <stream>.


 -- Function: fposition (<stream>)
 -- Function: fposition (<stream>, <pos>)
     Returns the current position in <stream>, if <pos> is not used.
     If <pos> is used, `fposition' sets the position in <stream>.
     <pos> has to be a positive number, the first element in <stream>
     is in position 1.


 -- Function: freshline ()
 -- Function: freshline (<stream>)
     Writes a new line (to <stream>), if the position is not at the
     beginning of a line.  See also `newline'.


 -- Function: newline ()
 -- Function: newline (<stream>)
     Writes a new line (to <stream>).  See `sprint' for an example of
     using `newline()'.  Note that there are some cases, where
     `newline()' does not work as expected.


 -- Function: opena (<file>)
     Returns an output stream to <file>.  If an existing file is
     opened, `opena' appends elements at the end of file.


 -- Function: openr (<file>)
     Returns an input stream to <file>.  If <file> does not exist, it
     will be created.


 -- Function: openw (<file>)
     Returns an output stream to <file>.  If <file> does not exist, it
     will be created.  If an existing file is opened, `openw'
     destructively modifies <file>.


 -- Function: printf (<dest>, <string>)
 -- Function: printf (<dest>, <string>, <expr_1>, ..., <expr_n>)
     Makes the Common Lisp function FORMAT available in Maxima.  (From
     gcl.info: "format produces formatted output by outputting the
     characters of control-string string and observing that a tilde
     introduces a directive.  The character after the tilde, possibly
     preceded by prefix parameters and modifiers, specifies what kind
     of formatting is desired.  Most directives use one or more
     elements of args to create their output.")

     The following description and the examples may give an idea of
     using `printf'.  See a Lisp reference for more information.

             ~%       new line
             ~&       fresh line
             ~t       tab
             ~$       monetary
             ~d       decimal integer
             ~b       binary integer
             ~o       octal integer
             ~x       hexadecimal integer
             ~br      base-b integer
             ~r       spell an integer
             ~p       plural
             ~f       floating point
             ~e       scientific notation
             ~g       ~f or ~e, depending upon magnitude
             ~h       bigfloat
             ~a       uses Maxima function string
             ~s       like ~a, but output enclosed in "double quotes"
             ~~       ~
             ~<       justification, ~> terminates
             ~(       case conversion, ~) terminates
             ~[       selection, ~] terminates
             ~{       iteration, ~} terminates

     Note that the selection directive `~[' is zero-indexed.  Also note
     that the directive ~* is not supported.

          (%i1) printf( false, "~a ~a ~4f ~a ~@r",
                        "String",sym,bound,sqrt(12),144), bound = 1.234;
          (%o1)                 String sym 1.23 2*sqrt(3) CXLIV
          (%i2) printf( false,"~{~a ~}",["one",2,"THREE"] );
          (%o2)                          one 2 THREE
          (%i3) printf(true,"~{~{~9,1f ~}~%~}",mat ),
                    mat = args(matrix([1.1,2,3.33],[4,5,6],[7,8.88,9]))$
                1.1       2.0       3.3
                4.0       5.0       6.0
                7.0       8.9       9.0
          (%i4) control: "~:(~r~) bird~p ~[is~;are~] singing."$
          (%i5) printf( false,control, n,n,if n=1 then 0 else 1 ), n=2;
          (%o5)                    Two birds are singing.

     If <dest> is a stream or `true', then `printf' returns `false'.
     Otherwise, `printf' returns a string containing the output.


 -- Function: readline (<stream>)
     Returns a string containing the characters from the current
     position in <stream> up to the end of the line or <false> if the
     end of the file is encountered.


 -- Function: sprint (<expr_1>, ..., <expr_n>)
     Evaluates and displays its arguments one after the other `on a
     line' starting at the leftmost position.  The numbers are printed
     with the '-' right next to the number, and it disregards line
     length.  `newline()', which will be autoloaded from
     `stringproc.lisp' might be useful, if you whish to place
     intermediate line breaking.

     Example:

          (%i1) for n:0 thru 19 do sprint( fib(n) )$
          0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181
          (%i2) for n:0 thru 22 do (
                   sprint(fib(n)), if mod(n,10)=9 then newline() )$
          0 1 1 2 3 5 8 13 21 34
          55 89 144 233 377 610 987 1597 2584 4181
          6765 10946 17711



File: maxima.info,  Node: Functions and Variables for characters,  Next: Functions and Variables for strings,  Prev: Functions and Variables for input and output,  Up: stringproc

78.3 Functions and Variables for characters
===========================================

 -- Function: alphacharp (<char>)
     Returns `true' if <char> is an alphabetic character.


 -- Function: alphanumericp (<char>)
     Returns `true' if <char> is an alphabetic character or a digit.


 -- Function: ascii (<int>)
     Returns the character corresponding to the ASCII number <int>.  (
     -1 < int < 256 )

          (%i1) for n from 0 thru 255 do (
             tmp: ascii(n), if alphacharp(tmp) then sprint(tmp),
                if n=96 then newline() )$
          A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
          a b c d e f g h i j k l m n o p q r s t u v w x y z


 -- Function: cequal (<char_1>, <char_2>)
     Returns `true' if <char_1> and <char_2> are the same.


 -- Function: cequalignore (<char_1>, <char_2>)
     Like `cequal' but ignores case.


 -- Function: cgreaterp (<char_1>, <char_2>)
     Returns `true' if the ASCII number of <char_1> is greater than the
     number of <char_2>.


 -- Function: cgreaterpignore (<char_1>, <char_2>)
     Like `cgreaterp' but ignores case.


 -- Function: charp (<obj>)
     Returns `true' if <obj> is a Maxima-character.  See introduction
     for example.


 -- Function: cint (<char>)
     Returns the ASCII number of <char>.


 -- Function: clessp (<char_1>, <char_2>)
     Returns `true' if the ASCII number of <char_1> is less than the
     number of <char_2>.


 -- Function: clesspignore (<char_1>, <char_2>)
     Like `clessp' but ignores case.


 -- Function: constituent (<char>)
     Returns `true' if <char> is a graphic character and not the space
     character.  A graphic character is a character one can see, plus
     the space character.  (`constituent' is defined by Paul Graham,
     ANSI Common Lisp, 1996, page 67.)

          (%i1) for n from 0 thru 255 do (
          tmp: ascii(n), if constituent(tmp) then sprint(tmp) )$
          ! " #  %  ' ( ) * + , - . / 0 1 2 3 4 5 6 7 8 9 : ; < = > ? @ A B
          C D E F G H I J K L M N O P Q R S T U V W X Y Z [ \ ] ^ _ ` a b c
          d e f g h i j k l m n o p q r s t u v w x y z { | } ~


 -- Function: cunlisp (<lisp_char>)
     Converts a Lisp-character into a Maxima-character.  (You won't
     need it.)


 -- Function: digitcharp (<char>)
     Returns `true' if <char> is a digit.


 -- Function: lcharp (<obj>)
     Returns `true' if <obj> is a Lisp-character.  (You won't need it.)


 -- Function: lowercasep (<char>)
     Returns `true' if <char> is a lowercase character.


 -- Variable: newline
     The newline character.


 -- Variable: space
     The space character.


 -- Variable: tab
     The tab character.


 -- Function: uppercasep (<char>)
     Returns `true' if <char> is an uppercase character.



File: maxima.info,  Node: Functions and Variables for strings,  Prev: Functions and Variables for characters,  Up: stringproc

78.4 Functions and Variables for strings
========================================

 -- Function: stringp (<obj>)
     Returns `true' if <obj> is a string.  See introduction for example.


 -- Function: charat (<string>, <n>)
     Returns the <n>-th character of <string>.  The first character in
     <string> is returned with <n> = 1.

          (%i1) charat("Lisp",1);
          (%o1)                           L


 -- Function: charlist (<string>)
     Returns the list of all characters in <string>.

          (%i1) charlist("Lisp");
          (%o1)                     [L, i, s, p]
          (%i2) %[1];
          (%o2)                           L


 -- Function: eval_string (<str>)
     Parse the string <str> as a Maxima expression and evaluate it.
     The string <str> may or may not have a terminator (dollar sign `$'
     or semicolon `;').  Only the first expression is parsed and
     evaluated, if there is more than one.

     Complain if <str> is not a string.

     Examples:

          (%i1) eval_string ("foo: 42; bar: foo^2 + baz");
          (%o1)                       42
          (%i2) eval_string ("(foo: 42, bar: foo^2 + baz)");
          (%o2)                   baz + 1764

     See also `parse_string'.


 -- Function: parse_string (<str>)
     Parse the string <str> as a Maxima expression (do not evaluate it).
     The string <str> may or may not have a terminator (dollar sign `$'
     or semicolon `;').  Only the first expression is parsed, if there
     is more than one.

     Complain if <str> is not a string.

     Examples:

          (%i1) parse_string ("foo: 42; bar: foo^2 + baz");
          (%o1)                    foo : 42
          (%i2) parse_string ("(foo: 42, bar: foo^2 + baz)");
                                             2
          (%o2)          (foo : 42, bar : foo  + baz)

     See also `eval_string'.


 -- Function: scopy (<string>)
     Returns a copy of <string> as a new string.


 -- Function: sdowncase (<string>)
 -- Function: sdowncase (<string>, <start>)
 -- Function: sdowncase (<string>, <start>, <end>)
     Like `supcase', but uppercase characters are converted to
     lowercase.


 -- Function: sequal (<string_1>, <string_2>)
     Returns `true' if <string_1> and <string_2> are the same length
     and contain the same characters.


 -- Function: sequalignore (<string_1>, <string_2>)
     Like `sequal' but ignores case.


 -- Function: sexplode (<string>)
     `sexplode' is an alias for function `charlist'.


 -- Function: simplode (<list>)
 -- Function: simplode (<list>, <delim>)
     `simplode' takes a list of expressions and concatenates them into
     a string.  If no delimiter <delim> is specified, `simplode' uses
     no delimiter.  <delim> can be any string.

          (%i1) simplode(["xx[",3,"]:",expand((x+y)^3)]);
          (%o1)             xx[3]:y^3+3*x*y^2+3*x^2*y+x^3
          (%i2) simplode( sexplode("stars")," * " );
          (%o2)                   s * t * a * r * s
          (%i3) simplode( ["One","more","coffee."]," " );
          (%o3)                   One more coffee.


 -- Function: sinsert (<seq>, <string>, <pos>)
     Returns a string that is a concatenation of `substring (<string>,
     1, <pos> - 1)', the string <seq> and `substring (<string>, <pos>)'.
     Note that the first character in <string> is in position 1.

          (%i1) s: "A submarine."$
          (%i2) concat( substring(s,1,3),"yellow ",substring(s,3) );
          (%o2)                  A yellow submarine.
          (%i3) sinsert("hollow ",s,3);
          (%o3)                  A hollow submarine.


 -- Function: sinvertcase (<string>)
 -- Function: sinvertcase (<string>, <start>)
 -- Function: sinvertcase (<string>, <start>, <end>)
     Returns <string> except that each character from position <start>
     to <end> is inverted.  If <end> is not given, all characters from
     <start> to the end of <string> are replaced.

          (%i1) sinvertcase("sInvertCase");
          (%o1)                      SiNVERTcASE


 -- Function: slength (<string>)
     Returns the number of characters in <string>.


 -- Function: smake (<num>, <char>)
     Returns a new string with a number of <num> characters <char>.

          (%i1) smake(3,"w");
          (%o1)                          www


 -- Function: smismatch (<string_1>, <string_2>)
 -- Function: smismatch (<string_1>, <string_2>, <test>)
     Returns the position of the first character of <string_1> at which
     <string_1> and <string_2> differ or `false'.  Default test
     function for matching is `sequal'.  If `smismatch' should ignore
     case, use `sequalignore' as test.

          (%i1) smismatch("seven","seventh");
          (%o1)                           6


 -- Function: split (<string>)
 -- Function: split (<string>, <delim>)
 -- Function: split (<string>, <delim>, <multiple>)
     Returns the list of all tokens in <string>.  Each token is an
     unparsed string.  `split' uses <delim> as delimiter.  If <delim>
     is not given, the space character is the default delimiter.
     <multiple> is a boolean variable with `true' by default.  Multiple
     delimiters are read as one.  This is useful if tabs are saved as
     multiple space characters.  If <multiple> is set to `false', each
     delimiter is noted.

          (%i1) split("1.2   2.3   3.4   4.5");
          (%o1)                 [1.2, 2.3, 3.4, 4.5]
          (%i2) split("first;;third;fourth",";",false);
          (%o2)               [first, , third, fourth]


 -- Function: sposition (<char>, <string>)
     Returns the position of the first character in <string> which
     matches <char>.  The first character in <string> is in position 1.
     For matching characters ignoring case see `ssearch'.


 -- Function: sremove (<seq>, <string>)
 -- Function: sremove (<seq>, <string>, <test>)
 -- Function: sremove (<seq>, <string>, <test>, <start>)
 -- Function: sremove (<seq>, <string>, <test>, <start>, <end>)
     Returns a string like <string> but without all substrings matching
     <seq>.  Default test function for matching is `sequal'.  If
     `sremove' should ignore case while searching for <seq>, use
     `sequalignore' as test.  Use <start> and <end> to limit searching.
     Note that the first character in <string> is in position 1.

          (%i1) sremove("n't","I don't like coffee.");
          (%o1)                   I do like coffee.
          (%i2) sremove ("DO ",%,'sequalignore);
          (%o2)                    I like coffee.


 -- Function: sremovefirst (<seq>, <string>)
 -- Function: sremovefirst (<seq>, <string>, <test>)
 -- Function: sremovefirst (<seq>, <string>, <test>, <start>)
 -- Function: sremovefirst (<seq>, <string>, <test>, <start>, <end>)
     Like `sremove' except that only the first substring that matches
     `seq' is removed.


 -- Function: sreverse (<string>)
     Returns a string with all the characters of <string> in reverse
     order.


 -- Function: ssearch (<seq>, <string>)
 -- Function: ssearch (<seq>, <string>, <test>)
 -- Function: ssearch (<seq>, <string>, <test>, <start>)
 -- Function: ssearch (<seq>, <string>, <test>, <start>, <end>)
     Returns the position of the first substring of <string> that
     matches the string <seq>.  Default test function for matching is
     `sequal'.  If `ssearch' should ignore case, use `sequalignore' as
     test.  Use <start> and <end> to limit searching.  Note that the
     first character in <string> is in position 1.

          (%i1) ssearch("~s","~{~S ~}~%",'sequalignore);
          (%o1)                                  4


 -- Function: ssort (<string>)
 -- Function: ssort (<string>, <test>)
     Returns a string that contains all characters from <string> in an
     order such there are no two successive characters <c> and <d> such
     that `test (<c>, <d>)' is `false' and `test (<d>, <c>)' is `true'.
     Default test function for sorting is <clessp>.  The set of test
     functions is `{clessp, clesspignore, cgreaterp, cgreaterpignore,
     cequal, cequalignore}'.

          (%i1) ssort("I don't like Mondays.");
          (%o1)                    '.IMaddeiklnnoosty
          (%i2) ssort("I don't like Mondays.",'cgreaterpignore);
          (%o2)                 ytsoonnMlkIiedda.'


 -- Function: ssubst (<new>, <old>, <string>)
 -- Function: ssubst (<new>, <old>, <string>, <test>)
 -- Function: ssubst (<new>, <old>, <string>, <test>, <start>)
 -- Function: ssubst (<new>, <old>, <string>, <test>, <start>, <end>)
     Returns a string like <string> except that all substrings matching
     <old> are replaced by <new>.  <old> and <new> need not to be of
     the same length.  Default test function for matching is `sequal'.
     If `ssubst' should ignore case while searching for old, use
     `sequalignore' as test.  Use <start> and <end> to limit searching.
     Note that the first character in <string> is in position 1.

          (%i1) ssubst("like","hate","I hate Thai food. I hate green tea.");
          (%o1)          I like Thai food. I like green tea.
          (%i2) ssubst("Indian","thai",%,'sequalignore,8,12);
          (%o2)         I like Indian food. I like green tea.


 -- Function: ssubstfirst (<new>, <old>, <string>)
 -- Function: ssubstfirst (<new>, <old>, <string>, <test>)
 -- Function: ssubstfirst (<new>, <old>, <string>, <test>, <start>)
 -- Function: ssubstfirst (<new>, <old>, <string>, <test>, <start>,
          <end>)
     Like `subst' except that only the first substring that matches
     <old> is replaced.


 -- Function: strim (<seq>,<string>)
     Returns a string like <string>, but with all characters that
     appear in <seq> removed from both ends.

          (%i1) "/* comment */"$
          (%i2) strim(" /*",%);
          (%o2)                        comment
          (%i3) slength(%);
          (%o3)                           7


 -- Function: striml (<seq>, <string>)
     Like `strim' except that only the left end of <string> is trimmed.


 -- Function: strimr (<seq>, <string>)
     Like `strim' except that only the right end of string is trimmed.


 -- Function: substring (<string>, <start>)
 -- Function: substring (<string>, <start>, <end>)
     Returns the substring of <string> beginning at position <start>
     and ending at position <end>.  The character at position <end> is
     not included.  If <end> is not given, the substring contains the
     rest of the string.  Note that the first character in <string> is
     in position 1.

          (%i1) substring("substring",4);
          (%o1)                        string
          (%i2) substring(%,4,6);
          (%o2)                          in


 -- Function: supcase (<string>)
 -- Function: supcase (<string>, <start>)
 -- Function: supcase (<string>, <start>, <end>)
     Returns <string> except that lowercase characters from position
     <start> to <end> are replaced by the corresponding uppercase ones.
     If <end> is not given, all lowercase characters from <start> to
     the end of <string> are replaced.

          (%i1) supcase("english",1,2);
          (%o1)                        English


 -- Function: tokens (<string>)
 -- Function: tokens (<string>, <test>)
     Returns a list of tokens, which have been extracted from <string>.
     The tokens are substrings whose characters satisfy a certain test
     function.  If test is not given, <constituent> is used as the
     default test.  `{constituent, alphacharp, digitcharp, lowercasep,
     uppercasep, charp, characterp, alphanumericp}' is the set of test
     functions.  (The Lisp-version of `tokens' is written by Paul
     Graham. ANSI Common Lisp, 1996, page 67.)

          (%i1) tokens("24 October 2005");
          (%o1)                  [24, October, 2005]
          (%i2) tokens("05-10-24",'digitcharp);
          (%o2)                     [05, 10, 24]
          (%i3) map(parse_string,%);
          (%o3)                      [5, 10, 24]



File: maxima.info,  Node: to_poly_solve,  Next: unit,  Prev: stringproc,  Up: Top

79 to_poly_solve
****************

* Menu:

* Functions and Variables for to_poly_solve::


File: maxima.info,  Node: Functions and Variables for to_poly_solve,  Prev: to_poly_solve,  Up: to_poly_solve

79.1 Functions and Variables for to_poly_solve
==============================================

The packages `to_poly' and `to_poly_solve' are experimental; the
specifications of the functions in these packages might change or the
some of the functions in these packages might be merged into other
Maxima functions.

   Barton Willis (Professor of Mathematics, University of Nebraska at
Kearney) wrote the `to_poly' and `to_poly_solve' packages and the
English language user documentation for these packages.

 -- Operator: %and
     The operator `%and' is a simplifying nonshort-circuited logical
     conjunction.  Maxima simplifies an `%and' expression to either
     true, false, or a logically equivalent, but simplified,
     expression.  The operator `%and' is associative, commutative, and
     idempotent.  Thus when `%and' returns a noun form, the arguments
     of `%and' form a non-redundant sorted list; for example

          (%i1) a %and (a %and b);
          (%o1)                       a %and b

     If one argument to a conjunction is the explicit the negation of
     another argument, `%and' returns false:

          (%i2) a %and (not a);
          (%o2)                         false

     If any member of the conjunction is false, the conjunction
     simplifies to false even if other members are manifestly
     non-boolean; for example

          (%i3) 42 %and false;
          (%o3)                         false

     Any argument of an `%and' expression that is an inequation (that
     is, an inequality or equation), is simplified using the Fourier
     elimination package.  The Fourier elimination simplifier has a
     pre-processor that converts some, but not all, nonlinear
     inequations into linear inequations; for example the Fourier
     elimination code simplifies `abs(x) + 1 > 0' to true, so

          (%i4) (x < 1) %and (abs(x) + 1 > 0);
          (%o4)                         x < 1

     Notes
        * The option variable `prederror' does not alter the
          simplification `%and' expressions.

        * To avoid operator precedence errors, compound expressions
          involving the operators `%and, %or', and `not' should be
          fully parenthesized.

        * The Maxima operators `and' and `or' are both short-circuited.
          Thus `and' isn't associative or commutative.


     Limitations The conjunction `%and' simplifies inequations locally,
     not globally.  This means that conjunctions such as

          (%i5) (x < 1) %and (x > 1);
          (%o5)                 (x > 1) %and (x < 1)

     do not simplify to false.  Also, the Fourier elimination code
     ignores the fact database;

          (%i6) assume(x > 5);
          (%o6)                        [x > 5]
          (%i7) (x > 1) %and (x > 2);
          (%o7)                 (x > 1) %and (x > 2)

     Finally, nonlinear inequations that aren't easily converted into an
     equivalent linear inequation aren't simplified.

     There is no support for distributing `%and' over `%or'; neither is
     there support for distributing a logical negation over `%and'.

     To use `load(to_poly_solve)'

     Related functions `%or, %if, and, or, not'

     Status The operator `%and' is experimental; the specifications of
     this function might change and its functionality might be merged
     into other Maxima functions.


 -- Operator: %if (<bool>, <a>, <b>)
     The operator `%if' is a simplifying conditional.  The conditional
     <bool> should be boolean-valued.  When the conditional is true,
     return the second argument; when the conditional is false, return
     the third; in all other cases, return a noun form.

     Maxima inequations (either an inequality or an equality) are not
     boolean-valued; for example, Maxima does not simplify 5 < 6 to
     true, and it does not simplify 5 = 6 to false; however, in the
     context of a conditional to an `%if' statement, Maxima
     automatically attempts to determine the truth value of an
     inequation.  Examples:

          (%i1) f : %if(x # 1, 2, 8);
          (%o1)                 %if(x - 1 # 0, 2, 8)
          (%i2) [subst(x = -1,f), subst(x=1,f)];
          (%o2)                        [2, 8]

     If the conditional involves an inequation, Maxima simplifies it
     using the Fourier elimination package.

     Notes

        * If the conditional is manifestly non-boolean, Maxima returns
          a noun form:

          (%i3) %if(42,1,2);
          (%o3)                     %if(42, 1, 2)

        * The Maxima operator `if' is nary, the operator `%if' isn't
          nary.

     Limitations The Fourier elimination code only simplifies nonlinear
     inequations that are readily convertible to an equivalent linear
     inequation.

     To use: `load(to_poly_solve)'

     Status: The operator `%if' is experimental; its specifications
     might change and its functionality might be merged into other
     Maxima functions.


 -- Operator: %or
     The operator `%or' is a simplifying nonshort-circuited logical
     disjunction.  Maxima simplifies an `%or' expression to either
     true, false, or a logically equivalent, but simplified,
     expression.  The operator `%or' is associative, commutative, and
     idempotent.  Thus when `%or' returns a noun form, the arguments of
     `%or' form a non-redundant sorted list; for example

          (%i1) a %or (a %or b);
          (%o1)                        a %or b

     If one member of the disjunction is the explicit the negation of
     another member, `%or' returns true:

          (%i2) a %or (not a);
          (%o2)                         true

     If any member of the disjunction is true, the disjunction
     simplifies to true even if other members of the disjunction are
     manifestly non-boolean; for example

          (%i3) 42 %or true;
          (%o3)                         true

     Any argument of an `%or' expression that is an inequation (that
     is, an inequality or equation), is simplified using the Fourier
     elimination package.  The Fourier elimination code simplifies
     `abs(x) + 1 > 0' to true, so we have

          (%i4) (x < 1) %or (abs(x) + 1 > 0);
          (%o4)                         true

     Notes
        * The option variable `prederror' does not alter the
          simplification of `%or' expressions.

        * You should parenthesize compound expressions involving the
          operators `%and, %or', and `not'; the binding powers of these
          operators might not match your expectations.

        * The Maxima operators `and' and `or' are both short-circuited.
          Thus `or' isn't associative or commutative.


     Limitations The conjunction `%or' simplifies inequations locally,
     not globally.  This means that conjunctions such as

          (%i1) (x < 1) %or (x >= 1);
          (%o1) (x > 1) %or (x >= 1)

     do not simplify to true.  Further, the Fourier elimination code
     ignores the fact database;

          (%i2) assume(x > 5);
          (%o2)                        [x > 5]
          (%i3) (x > 1) %and (x > 2);
          (%o3)                 (x > 1) %and (x > 2)

     Finally, nonlinear inequations that aren't easily converted into an
     equivalent linear inequation aren't simplified.

     The algorithm that looks for terms that cannot both be false is
     weak; also there is no support for distributing `%or' over `%and';
     neither is there support for distributing a logical negation over
     `%or'.

     To use `load(to_poly_solve)'

     Related functions `%or, %if, and, or, not'

     Status The operator `%or' is experimental; the specifications of
     this function might change and its functionality might be merged
     into other Maxima functions.


 -- Function: complex_number_p (<x>)
     The predicate `complex_number_p' returns true if its argument is
     either `a + %i * b', `a', `%i b', or `%i', where `a' and `b' are
     either rational or floating point numbers (including big floating
     point); for all other inputs, `complex_number_p' returns false;
     for example

          (%i1) map('complex_number_p,[2/3, 2 + 1.5 * %i, %i]);
          (%o1)                  [true, true, true]
          (%i2) complex_number_p((2+%i)/(5-%i));
          (%o2)                         false
          (%i3) complex_number_p(cos(5 - 2 * %i));
          (%o3)                         false

     Related functions `isreal_p'

     To use `load(to_poly_solve)'

     Status The operator `complex_number_p' is experimental; its
     specifications might change and its functionality might be merged
     into other Maxima functions.


 -- Function: compose_functions (<l>)
     The function call `compose_functions(l)' returns a lambda form
     that is the composition of the functions in the list <l>.  The
     functions are applied from right to left; for example

          (%i1) compose_functions([cos, exp]);
                                                  %g151
          (%o1)             lambda([%g151], cos(%e     ))
          (%i2) %(x);
                                            x
          (%o2)                       cos(%e )

     When the function list is empty, return the identity function:

          (%i3) compose_functions([]);
          (%o3)                lambda([%g152], %g152)
          (%i4)  %(x);
          (%o4)                           x

     Notes
        * When Maxima determines that a list member isn't a symbol or a
          lambda form, `funmake' (not `compose_functions') signals an
          error:

          (%i5) compose_functions([a < b]);

          funmake: first argument must be a symbol, subscripted symbol,
          string, or lambda expression; found: a < b
          #0: compose_functions(l=[a < b])(to_poly_solve.mac line 40)
           -- an error. To debug this try: debugmode(true);

        * To avoid name conflicts, the independent variable is
          determined by the function `new_variable'.

          (%i6) compose_functions([%g0]);
          (%o6)              lambda([%g154], %g0(%g154))
          (%i7) compose_functions([%g0]);
          (%o7)              lambda([%g155], %g0(%g155))

          Although the independent variables are different, Maxima is
          able to to deduce that these lambda forms are semantically
          equal:

          (%i8) is(equal(%o6,%o7));
          (%o8)                         true

     To use `load(to_poly_solve)'

     Status  The function `compose_functions' is experimental; its
     specifications might change and its functionality might be merged
     into other Maxima functions.

 -- Function: dfloat (<x>)
     The function `dfloat' is a similar to `float', but the function
     `dfloat' applies `rectform' when `float' fails to evaluate to an
     IEEE double floating point number; thus

          (%i1) float(4.5^(1 + %i));
                                         %i + 1
          (%o1)                       4.5
          (%i2) dfloat(4.5^(1 + %i));
          (%o2)        4.48998802962884 %i + .3000124893895671

     Notes

        * The rectangular form of an expression might be poorly suited
          for numerical evaluation-for example, the rectangular form
          might needlessly involve the difference of floating point
          numbers (subtractive cancellation).

        * The identifier `float' is both an option variable (default
          value false) and a function name.


     Related functions `float, bfloat'

     To use `load(to_poly_solve)'

     Status The function `dfloat' is experimental; its specifications
     might change and its functionality might be merged into other
     Maxima functions.


 -- Function: elim (<l>, <x>)
     The function `elim' eliminates the variables in the set or list
     `x' from the equations in the set or list `l'.  Each member of `x'
     must be a symbol; the members of `l' can either be equations, or
     expressions that are assumed to equal zero.

     The function `elim' returns a list of two lists; the first is the
     list of expressions with the variables eliminated; the second is
     the list of pivots; thus, the second list is a list of expressions
     that `elim' used to eliminate the variables.

     Here is a example of eliminating between linear equations:

          (%i1) elim(set(x + y + z = 1, x - y  - z = 8, x - z = 1),
                     set(x,y));
          (%o1)            [[2 z - 7], [y + 7, z - x + 1]]

     Eliminating `x' and `y' yields the single equation `2 z - 7 = 0';
     the equations `y + 7 = 0' and `z - z + 1 = 1' were used as pivots.
     Eliminating all three variables from these equations,
     triangularizes the linear system:

          (%i2) elim(set(x + y + z = 1, x - y  - z = 8, x - z = 1),
                     set(x,y,z));
          (%o2)           [[], [2 z - 7, y + 7, z - x + 1]]

     Of course, the equations needn't be linear:

          (%i3) elim(set(x^2 - 2 * y^3 = 1,  x - y = 5), [x,y]);
                               3    2
          (%o3)       [[], [2 y  - y  - 10 y - 24, y - x + 5]]

     The user doesn't control the order the variables are eliminated.
     Instead, the algorithm uses a heuristic to attempt to choose the
     best pivot and the best elimination order.

     Notes

        * Unlike the related function `eliminate', the function `elim'
          does not invoke `solve' when the number of equations equals
          the number of variables.

        * The function `elim' works by applying resultants; the option
          variable `resultant' determines which algorithm Maxima uses.
          Using `sqfr', Maxima factors each resultant and suppresses
          multiple zeros.

        * The `elim' will triangularize a nonlinear set of polynomial
          equations; the solution set of the triangularized set can be
          larger than that solution set of the untriangularized set.
          Thus, the triangularized equations can have spurious
          solutions.

     Related functions elim_allbut, eliminate_using, eliminate

     Option variables resultant

     To use `load(to_poly)'

     Status The function `elim' is experimental; its specifications
     might change and its functionality might be merged into other
     Maxima functions.


 -- Function: elim_allbut (<l>, <x>)
     This function is similar to `elim', except that it eliminates all
     the variables in the list of equations `l' except for those
     variables that in in the list `x'

          (%i1) elim_allbut([x+y = 1, x - 5*y = 1],[]);
          (%o1)                 [[], [y, y + x - 1]]
          (%i2) elim_allbut([x+y = 1, x - 5*y = 1],[x]);
          (%o2)                [[x - 1], [y + x - 1]]

     To use `load(to_poly)'

     Option variables resultant

     Related functions elim, eliminate_using, eliminate

     Status The function `elim_allbut' is experimental; its
     specifications might change and its functionality might be merged
     into other Maxima functions.


 -- Function: eliminate_using (<l>, <e>, <x>)
     Using `e' as the pivot, eliminate the symbol `x' from the list or
     set of equations in `l'.  The function `eliminate_using' returns a
     set.

          (%i1) eq : [x^2 - y^2 - z^3 , x*y - z^2 - 5, x - y + z];
                         3    2    2     2
          (%o1)      [- z  - y  + x , - z  + x y - 5, z - y + x]
          (%i2) eliminate_using(eq,first(eq),z);
                  3              2      2      3    2
          (%o2) {y  + (1 - 3 x) y  + 3 x  y - x  - x ,
                                  4    3  3       2  2             4
                                 y  - x  y  + 13 x  y  - 75 x y + x  + 125}
          (%i3) eliminate_using(eq,second(eq),z);
                  2            2       4    3  3       2  2             4
          (%o3) {y  - 3 x y + x  + 5, y  - x  y  + 13 x  y  - 75 x y + x
                                                                     + 125}
          (%i4) eliminate_using(eq, third(eq),z);
                  2            2       3              2      2      3    2
          (%o4) {y  - 3 x y + x  + 5, y  + (1 - 3 x) y  + 3 x  y - x  - x }

     Option variables resultant

     Related functions elim, eliminate, elim_allbut

     To use `load(to_poly)'

     Status The function `eliminate_using' is experimental; its
     specifications might change and its functionality might be merged
     into other Maxima functions.


 -- Function: fourier_elim ([<eq1>, <eq2>, ...], [<var1>, <var>, ...])
     Fourier elimination is the analog of Gauss elimination for linear
     inequations (equations or inequalities).  The function call
     `fourier_elim([eq1, eq2, ...], [var1, var2, ...]' does Fourier
     elimination on a list of linear inequations `[eq1, eq2, ...]' with
     respect to the variables `[var1, var2, ...]'; for example

          (%i1) fourier_elim([y-x < 5, x - y < 7, 10 < y],[x,y]);
          (%o1)            [y - 5 < x, x < y + 7, 10 < y]
          (%i2) fourier_elim([y-x < 5, x - y < 7, 10 < y],[y,x]);
          (%o2)        [max(10, x - 7) < y, y < x + 5, 5 < x]

     Eliminating first with respect to x and second with respect to y
     yields lower and upper bounds for x that depend on y, and lower
     and upper bounds for y that are numbers.  Eliminating in the other
     order gives x dependent lower and upper bounds for y, and
     numerical lower and upper bounds for x.

     When necessary, `fourier_elim' returns a _disjunction_ of lists of
     inequations:

          (%i3) fourier_elim([x # 6],[x]);
          (%o3)                  [x < 6] or [6 < x]

     When the solution set is empty,  `fourier_elim' returns `emptyset',
     and when the solution set is all reals, `fourier_elim' returns
     `universalset'; for example

          (%i4) fourier_elim([x < 1, x > 1],[x]);
          (%o4)                       emptyset
          (%i5) fourier_elim([minf < x, x < inf],[x]);
          (%o5)                     universalset

     For nonlinear inequations, `fourier_elim' returns a (somewhat)
     simplified list of inequations:

          (%i6) fourier_elim([x^3 - 1 > 0],[x]);
                         2                             2
          (%o6) [1 < x, x  + x + 1 > 0] or [x < 1, - (x  + x + 1) > 0]
          (%i7) fourier_elim([cos(x) < 1/2],[x]);
          (%o7)                  [1 - 2 cos(x) > 0]

     Instead of a list of inequations, the first argument to
     `fourier_elim' may be a logical disjunction or conjunction:

          (%i8) fourier_elim((x + y < 5) and (x - y >8),[x,y]);
                                                        3
          (%o8)            [y + 8 < x, x < 5 - y, y < - -]
                                                        2
          (%i9) fourier_elim(((x + y < 5) and x < 1) or  (x - y >8),[x,y]);
          (%o9)          [y + 8 < x] or [x < min(1, 5 - y)]

     The function `fourier_elim' supports the inequation operators `<,
     <=, >, >=, #', and `='.

     The Fourier elimination code has a preprocessor that converts some
     nonlinear inequations that involve the absolute value, minimum, and
     maximum functions into linear in equations.  Additionally, the
     preprocessor handles some expressions that are the product or
     quotient of linear terms:

          (%i10) fourier_elim([max(x,y) > 6, x # 8, abs(y-1) > 12],[x,y]);
          (%o10) [6 < x, x < 8, y < - 11] or [8 < x, y < - 11]
           or [x < 8, 13 < y] or [x = y, 13 < y] or [8 < x, x < y, 13 < y]
           or [y < x, 13 < y]
          (%i11) fourier_elim([(x+6)/(x-9) <= 6],[x]);
          (%o11)           [x = 12] or [12 < x] or [x < 9]
          (%i12) fourier_elim([x^2 - 1 # 0],[x]);
          (%o12)      [- 1 < x, x < 1] or [1 < x] or [x < - 1]

     To use `load(fourier_elim)'


 -- Function: isreal_p (<e>)
     The predicate `isreal_p' returns true when Maxima is able to
     determine that `e' is real-valued on the entire real line; it
     returns false when Maxima is able to determine that `e' isn't
     real-valued on some nonempty subset of the real line; and it
     returns a noun form for all other cases.

          (%i1) map('isreal_p, [-1, 0, %i, %pi]);
          (%o1)               [true, true, false, true]

     Maxima variables are assumed to be real; thus

          (%i2) isreal_p(x);
          (%o2)                         true

     The function `isreal_p' examines the fact database:

          (%i3) declare(z,complex)$

          (%i4) isreal_p(z);
          (%o4)                      isreal_p(z)

     Limitations Too often, `isreal_p' returns a noun form when it
     should be able to return false; a simple example: the logarithm
     function isn't real-valued on the entire real line, so
     `isreal_p(log(x))' should return false; however

          (%i5) isreal_p(log(x));
          (%o5)                   isreal_p(log(x))

     To use `load(to_poly_solve)'

     Related functions complex_number_p

     Status The function `real_p' is experimental; its specifications
     might change and its functionality might be merged into other
     Maxima functions.

 -- Function: new_variable (type)
     Return a unique symbol of the form `%[z,n,r,c,g]k', where `k' is
     an integer.  The allowed values for type are integer,
     natural_number, real, natural_number, and general.  (By natural
     number, we mean the nonnegative integers; thus zero is a natural
     number.  Some, but not all,definitions of natural number exclude
     zero.)

     When type isn't one of the allowed values, type defaults to
     general.  For integers, natural numbers, and complex numbers,
     Maxima automatically appends this information to the fact database.

          (%i1) map('new_variable,
                    ['integer, 'natural_number, 'real, 'complex, 'general]);
          (%o1)          [%z144, %n145, %r146, %c147, %g148]
          (%i2) nicedummies(%);
          (%o2)               [%z0, %n0, %r0, %c0, %g0]
          (%i3) featurep(%z0, 'integer);
          (%o3)                         true
          (%i4) featurep(%n0, 'integer);
          (%o4)                         true
          (%i5) is(%n0 >= 0);
          (%o5)                         true
          (%i6) featurep(%c0, 'complex);
          (%o6)                         true

     Note Generally, the argument to `new_variable' should be quoted.
     The quote will protect against errors similar to

          (%i7) integer : 12$

          (%i8) new_variable(integer);
          (%o8)                         %g149
          (%i9) new_variable('integer);
          (%o9)                         %z150

     Related functions nicedummies

     To use `load(to_poly_solve)'

     Status The function `new_variable' is experimental; its
     specifications might change and its functionality might be merged
     into other Maxima functions.


 -- Function: nicedummies
     Starting with zero, the function `nicedummies' re-indexes the
     variables in an expression that were introduced by `new_variable';

          (%i1) new_variable('integer) + 52 * new_variable('integer);
          (%o1)                   52 %z136 + %z135
          (%i2) new_variable('integer) - new_variable('integer);
          (%o2)                     %z137 - %z138
          (%i3) nicedummies(%);
          (%o3)                       %z0 - %z1

     Related functions new_variable

     To use `load(to_poly_solve)'

     Status The function `nicedummies' is experimental; its
     specifications might change and its functionality might be merged
     into other Maxima functions.


 -- Function: parg (<x>)
     The function `parg' is a simplifying version of the complex
     argument function `carg'; thus

          (%i1) map('parg,[1,1+%i,%i, -1 + %i, -1]);
                                  %pi  %pi  3 %pi
          (%o1)               [0, ---, ---, -----, %pi]
                                   4    2     4

     Generally, for a non-constant input, `parg' returns a noun form;
     thus

          (%i2) parg(x + %i * sqrt(x));
          (%o2)                 parg(x + %i sqrt(x))

     When `sign' can determine that the input is a positive or negative
     real number, `parg' will return a non-noun form for a non-constant
     input.  Here are two examples:

          (%i3) parg(abs(x));
          (%o3) 0
          (%i4) parg(-x^2-1);
          (%o4)                          %pi

     Note The `sign' function mostly ignores the variables that are
     declared to be complex (`declare(x,complex)'); for variables that
     are declared to be complex, the `parg' can return incorrect
     values; for example

          (%i1) declare(x,complex)$

          (%i2) parg(x^2 + 1);
          (%o2) 0

     Related function carg, isreal_p

     To use `load(to_poly_solve)'

     Status The function `parg' is experimental; its specifications
     might change and its functionality might be merged into other
     Maxima functions.


 -- Function: real_imagpart_to_conjugate (<e>)
     The function `real_imagpart_to_conjugate' replaces all occurrences
     of `realpart' and `imagpart' to algebraically equivalent
     expressions involving the `conjugate'.

          (%i1) declare(x, complex)$

          (%i2) real_imagpart_to_conjugate(realpart(x) +  imagpart(x) = 3);
                    conjugate(x) + x   %i (x - conjugate(x))
          (%o2)     ---------------- - --------------------- = 3
                           2                     2

     To use `load(to_poly_solve)'

     Status The function `real_imagpart_to_conjugate' is experimental;
     its specifications might change and its functionality might be
     merged into other Maxima functions.


 -- Function: rectform_log_if_constant (<e>)
     The function `rectform_if_constant' converts all terms of the form
     ` log(c)' to  `rectform(log(c))', where `c' is either a declared
     constant expression or explicitly declared constant

          (%i1) rectform_log_if_constant(log(1-%i) - log(x - %i));
                                           log(2)   %i %pi
          (%o1)            - log(x - %i) + ------ - ------
                                             2        4
          (%i2) declare(a,constant, b,constant)$

          (%i3) rectform_log_if_constant(log(a + %i*b));
                                 2    2
                            log(b  + a )
          (%o3)             ------------ + %i atan2(b, a)
                                 2

     To use `load(to_poly_solve)'

     Status The function `rectform_log_if_constant' is experimental;
     the specifications of this function might change might change and
     its functionality might be merged into other Maxima functions.


 -- Function: simp_inequality (<e>)
     The function `simp_inequality' applies some simplifications to
     conjunctions and disjunctions of inequations.

     Limitations The function `simp_inequality' is limited in at least
     two ways; first, the simplifications are local; thus

          (%i1) simp_inequality((x > minf) %and (x < 0));
          (%o1) (x>1) %and (x<1)

     And second, `simp_inequality' doesn't consult the fact database:

          (%i2) assume(x > 0)$

          (%i3) simp_inequality(x > 0);
          (%o3)                         x > 0

     To use `load(fourier_elim)'

     Status The function `simp_inequality' is experimental; its
     specifications might change and its functionality might be merged
     into other Maxima functions.


 -- Function: standardize_inverse_trig (<e>)
     This function applies the identities `cot(x) = atan(1/x), acsc(x)
     = asin(1/x),' and similarly for `asec, acoth, acsch' and `asech'
     to an expression.  See Abramowitz and Stegun, Eqs. 4.4.6 through
     4.4.8 and 4.6.4 through 4.6.6.

     To use `load(to_poly_solve)'

     Status The function `standardize_inverse_trig' is experimental; its
     specifications might change and its functionality might be merged
     into other Maxima functions.

 -- Function: subst_parallel (<l>, <e>)
     When `l' is a single equation or a list of equations, substitute
     the right hand side of each equation for the left hand side.  The
     substitutions are made in parallel; for example

          (%i1) load(to_poly_solve)$

          (%i2) subst_parallel([x=y,y=x], [x,y]);
          (%o2)                        [y, x]

     Compare this to substitutions made serially:

          (%i3) subst([x=y,y=x],[x,y]);
          (%o3)                        [x, x]

     The function `subst_parallel' is similar to `sublis' except that
     `subst_parallel' allows for substitution of nonatoms; for example

          (%i4) subst_parallel([x^2 = a, y = b], x^2 * y);
          (%o4)                          a b
          (%i5) sublis([x^2 = a, y = b], x^2 * y);

                                                                       2
          sublis: left-hand side of equation must be a symbol; found: x
           -- an error. To debug this try: debugmode(true);

     The substitutions made by `subst_parallel' are literal, not
     semantic; thus `subst_parallel' does not recognize that x * y is a
     subexpression of x^2 * y

          (%i6) subst_parallel([x * y = a], x^2 * y);
                                         2
          (%o6)                         x  y

     The function `subst_parallel' completes all substitutions before
     simplifications.  This allows for substitutions into conditional
     expressions where errors might occur if the simplifications were
     made earlier:

          (%i7) subst_parallel([x = 0], %if(x < 1, 5, log(x)));
          (%o7)                           5
          (%i8) subst([x = 0], %if(x < 1, 5, log(x)));

          log: encountered log(0).
           -- an error. To debug this try: debugmode(true);

     Related functions subst, sublis, ratsubst

     To use `load(to_poly_solve_extra.lisp)'

     Status The function `subst_parallel' is experimental; the
     specifications of this function might change might change and its
     functionality might be merged into other Maxima functions.


 -- Function: to_poly (<e>, <l>)
     The function `to_poly' attempts to convert the equation `e' into a
     polynomial system along with inequality constraints; the solutions
     to the polynomial system that satisfy the constraints are
     solutions to the equation `e'.  Informally, `to_poly' attempts to
     polynomialize the equation <e>; an example might clarify:

          (%i1) load(to_poly_solve)$

          (%i2) to_poly(sqrt(x) = 3, [x]);
                                      2
          (%o2) [[%g130 - 3, x = %g130 ],
                                %pi                               %pi
                             [- --- < parg(%g130), parg(%g130) <= ---], []]
                                 2                                 2

     The conditions `-%pi/2<parg(%g6),parg(%g6)<=%pi/2' tell us that
     `%g6' is in the range of the square root function.  When this is
     true, the solution set to `sqrt(x) = 3' is the same as the
     solution set to `%g6-3,x=%g6^2'.

     To polynomialize trigonometric expressions, it is necessary to
     introduce a non algebraic substitution; these non algebraic
     substitutions are returned in the third list returned by
     `to_poly'; for example

          (%i3) to_poly(cos(x),[x]);
                          2                                 %i x
          (%o3)    [[%g131  + 1], [2 %g131 # 0], [%g131 = %e    ]]

     Constant terms aren't polynomializied unless the number one is a
     member of the variable list; for example

          (%i4) to_poly(x = sqrt(5),[x]);
          (%o4)                [[x - sqrt(5)], [], []]
          (%i5) to_poly(x = sqrt(5),[1,x]);
                                      2
          (%o5) [[x - %g132, 5 = %g132 ],
                                %pi                               %pi
                             [- --- < parg(%g132), parg(%g132) <= ---], []]
                                 2                                 2

     To generate a polynomial with sqrt(5) + sqrt(7) as one of its
     roots, use the commands

          (%i6) first(elim_allbut(first(to_poly(x = sqrt(5) + sqrt(7),
                                                [1,x])), [x]));
                                    4       2
          (%o6)                   [x  - 24 x  + 4]

     Related functions to_poly_solve

     To use `load(to_poly)'

     Status: The function `to_poly' is experimental; its specifications
     might change and its functionality might be merged into other
     Maxima functions.


 -- Function: to_poly_solve (<e>, <l>, [options])
     The function `to_poly_solve' tries to solve the equations e for
     the variables l.  The equation(s) e can either be a single
     expression or a set or list of expressions; similarly, l can
     either be a single symbol or a list of set of symbols.  When a
     member of e isn't explicitly an equation, for example x^2 -1, the
     solver asummes that the expression vanishes.

     The basic strategy of `to_poly_solve' is use `to_poly' to convert
     the input into a polynomial form and call `algsys' on the
     polynomial system.  Thus user options that affect `algsys',
     especially `algexact', also affect `to_poly_solve'.  The default
     for `algexact' is false, but for `to_poly_solve', generally
     `algexact' should be true.  The function `to_poly_solve' does not
     locally set `algexact' to true because this would make it
     impossible to find approximate solutions when the `algsys' is
     unable to determine an exact solution.

     When `to_poly_solve' is able to determine the solution set, each
     member of the solution set is a list in a `%union' object:

          (%i1) load(to_poly_solve)$

          (%i2) to_poly_solve(x*(x-1) = 0, x);
          (%o2)               %union([x = 0], [x = 1])

     When  `to_poly_solve' is unable to determine the solution set, a
     `%solve' nounform is returned (in this case, a warning is printed)

          (%i3) to_poly_solve(x^k + 2* x + 1 = 0, x);

          Nonalgebraic argument given to 'to_poly'
          unable to solve
                                    k
          (%o3)            %solve([x  + 2 x + 1 = 0], [x])

     Subsitution into a `%solve' nounform can sometimes result in the
     solution

          (%i4) subst(k = 2, %);
          (%o4)                   %union([x = - 1])

     Especially for trigonometric equations, the solver sometimes needs
     to introduce an arbitary integer.  These arbitary integers have the
     form `%zXXX', where `XXX' is an integer; for example

          (%i5) to_poly_solve(sin(x) = 0, x);
          (%o5)   %union([x = 2 %pi %z33 + %pi], [x = 2 %pi %z35])

     To re-index these variables to zero, use `nicedummies':

          (%i6) nicedummies(%);
          (%o6)    %union([x = 2 %pi %z0 + %pi], [x = 2 %pi %z1])

     Occasionally, the solver introduces an arbitary complex number of
     the form `%cXXX' or an  arbitary real number of the form `%rXXX'.
     The function `nicedummies' will re-index these identifiers to zero.

     The solution set sometimes involves simplifing versions of various
     of logical operators including `%and', `%or', or `%if' for
     conjunction, disjuntion, and implication, respectively; for example

          (%i7) sol : to_poly_solve(abs(x) = a, x);
          (%o7) %union(%if(isnonnegative_p(a), [x = - a], %union()),
                                %if(isnonnegative_p(a), [x = a], %union()))
          (%i8) subst(a = 42, sol);
          (%o8)             %union([x = - 42], [x = 42])
          (%i9) subst(a = -42, sol);
          (%o9)                       %union()

     The empty set is represented by `%union'.

     The function `to_poly_solve' is able to solve some, but not all,
     equations involving rational powers, some nonrational powers,
     absolute values, trigonometric functions, and minimum and maximum.
     Also, some it can solve some equations that are solvable in in
     terms of the Lambert W function; some examples:

          (%i1) load(to_poly_solve)$

          (%i2) to_poly_solve(set(max(x,y) = 5, x+y = 2), set(x,y));
          (%o2)      %union([x = - 3, y = 5], [x = 5, y = - 3])
          (%i3) to_poly_solve(abs(1-abs(1-x)) = 10,x);
          (%o3)             %union([x = - 10], [x = 12])
          (%i4) to_poly_solve(set(sqrt(x) + sqrt(y) = 5, x + y = 10),
                              set(x,y));
                               3/2               3/2
                              5    %i - 10      5    %i + 10
          (%o4) %union([x = - ------------, y = ------------],
                                   2                 2
                                          3/2                 3/2
                                         5    %i + 10        5    %i - 10
                                    [x = ------------, y = - ------------])
                                              2                   2
          (%i5) to_poly_solve(cos(x) * sin(x) = 1/2,x,
                              'simpfuncs = ['expand, 'nicedummies]);
                                                   %pi
          (%o5)              %union([x = %pi %z0 + ---])
                                                    4
          (%i6) to_poly_solve(x^(2*a) + x^a + 1,x);
                                                  2 %i %pi %z81
                                                  -------------
                                            1/a         a
                            (sqrt(3) %i - 1)    %e
          (%o6) %union([x = -----------------------------------],
                                            1/a
                                           2
                                                            2 %i %pi %z83
                                                            -------------
                                                      1/a         a
                                    (- sqrt(3) %i - 1)    %e
                               [x = -------------------------------------])
                                                     1/a
                                                    2
          (%i7) to_poly_solve(x * exp(x) = a, x);
          (%o7)              %union([x = lambert_w(a)])

     For linear inequalities, `to_poly_solve' automatically does Fourier
     elimination:

          (%i8) to_poly_solve([x + y < 1, x - y >= 8], [x,y]);
                                         7
          (%o8) %union([x = y + 8, y < - -],
                                         2
                                                                        7
                                           [y + 8 < x, x < 1 - y, y < - -])
                                                                        2

     Each optional argument to `to_poly_solve' must be an equation;
     generally, the order of these options does not matter.

        * `simpfuncs = l', where `l' is a list of functions.  Apply the
          composition of the members of l to each solution.

          (%i1) to_poly_solve(x^2=%i,x);
                                         1/4             1/4
          (%o1)       %union([x = - (- 1)   ], [x = (- 1)   ])
          (%i2) to_poly_solve(x^2= %i,x, 'simpfuncs = ['rectform]);
                                %i         1             %i         1
          (%o2) %union([x = - ------- - -------], [x = ------- + -------])
                              sqrt(2)   sqrt(2)        sqrt(2)   sqrt(2)

          Sometimes additional simplification can revert a
          simplification; for example

          (%i3) to_poly_solve(x^2=1,x);
          (%o3)              %union([x = - 1], [x = 1])
          (%i4) to_poly_solve(x^2= 1,x, 'simpfuncs = [polarform]);
                                                  %i %pi
          (%o4)            %union([x = 1], [x = %e      ]

          Maxima doesn't try to check that each member of the function
          list `l' is purely a simplification; thus

          (%i5) to_poly_solve(x^2 = %i,x, 'simpfuncs = [lambda([s],s^2)]);
          (%o5)                   %union([x = %i])

          To convert each solution to a double float, use `simpfunc =
          ['dfloat]':

          (%i6) to_poly_solve(x^3 +x + 1 = 0,x,
                              'simpfuncs = ['dfloat]), algexact : true;
          (%o6) %union([x = - .6823278038280178],
          [x = .3411639019140089 - 1.161541399997251 %i],
          [x = 1.161541399997251 %i + .3411639019140089])

        * `use_grobner = true' With this option, the function
          `poly_reduced_grobner' is applied to the equations before
          attempting their solution.  Primarily, this option provides a
          workaround for weakness in the function `algsys'.  Here is an
          example of such a workaround:

          (%i7) to_poly_solve([x^2+y^2=2^2,(x-1)^2+(y-1)^2=2^2],[x,y],
                              'use_grobner = true);
                              sqrt(7) - 1      sqrt(7) + 1
          (%o7) %union([x = - -----------, y = -----------],
                                   2                2
                                           sqrt(7) + 1        sqrt(7) - 1
                                      [x = -----------, y = - -----------])
                                                2                  2
          (%i8) to_poly_solve([x^2+y^2=2^2,(x-1)^2+(y-1)^2=2^2],[x,y]);
          (%o8)                       %union()

        * `maxdepth = k', where `k' is a positive integer.  This
          function controls the maximum recursion depth for the solver.
          The default value for `maxdepth' is five.  When the
          recursions depth is exceeded, the solver signals an error:

          (%i9) to_poly_solve(cos(x) = x,x, 'maxdepth = 2);

          Unable to solve
          Unable to solve
          (%o9)        %solve([cos(x) = x], [x], maxdepth = 2)

        * `parameters = l', where `l' is a list of symbols.  The solver
          attempts to return a solution that is valid for all members
          of the list `l'; for example:

          (%i10) to_poly_solve(a * x = x, x);
          (%o10)                   %union([x = 0])
          (%i11) to_poly_solve(a * x = x, x, 'parameters = [a]);
          (%o11) %union(%if(a - 1 = 0, [x = %c111], %union()),
                                         %if(a - 1 # 0, [x = 0], %union()))

          In `(%o2)', the solver introduced a dummy variable; to
          re-index the these dummy variables, use the function
          `nicedummies':

          (%i12) nicedummies(%);
          (%o12) %union(%if(a - 1 = 0, [x = %c0], %union()),
                                         %if(a - 1 # 0, [x = 0], %union()))

     The `to_poly_solve' uses data stored in the hashed array
     `one_to_one_reduce' to solve equations of the form f(a) = f(b).
     The assignment `one_to_one_reduce['f,'f] : lambda([a,b], a=b)'
     tells `to_poly_solve' that the solution set of f(a) = f(b) equals
     the solution set of a=b; for example

          (%i13) one_to_one_reduce['f,'f] : lambda([a,b], a=b)$

          (%i14) to_poly_solve(f(x^2-1) = f(0),x);
          (%o14)             %union([x = - 1], [x = 1])

     More generally, the assignment `one_to_one_reduce['f,'g] :
     lambda([a,b], w(a, b) = 0' tells `to_poly_solve' that the solution
     set of f(a) = f(b) equals the solution set of w(a,b) = 0; for
     example

          (%i15) one_to_one_reduce['f,'g] : lambda([a,b], a = 1 + b/2)$

          (%i16) to_poly_solve(f(x) - g(x),x);
          (%o16)                   %union([x = 2])

     Additionally, the function `to_poly_solve' uses data stored in the
     hashed array `function_inverse' to solve equations of the form
     f(a) = b.  The assignment `function_inverse['f] : lambda([s],
     g(s))' informs  `to_poly_solve' that the solution set to `f(x) =
     b' equals the solution set to `x = g(b)'; two examples:

          (%i17) function_inverse['Q] : lambda([s], P(s))$

          (%i18) to_poly_solve(Q(x-1) = 2009,x);
          (%o18)              %union([x = P(2009) + 1])
          (%i19) function_inverse['G] : lambda([s], s+new_variable(integer));
          (%o19)       lambda([s], s + new_variable(integer))
          (%i20) to_poly_solve(G(x - a) = b,x);
          (%o20)             %union([x = b + a + %z125])

     Notes

        * The solve variables needn't be symbols; when `fullratsubst' is
          able to appropriately make substitutions, the solve variables
          can be nonsymbols:

          (%i1) to_poly_solve([x^2 + y^2 + x * y = 5, x * y = 8],
                              [x^2 + y^2, x * y]);
                                            2    2
          (%o1)           %union([x y = 8, y  + x  = - 3])

        * For equations that involve complex conjugates, the solver
          automatically appends the conjugate equations; for example

          (%i1) declare(x,complex)$

          (%i2) to_poly_solve(x + (5 + %i) * conjugate(x) = 1, x);
                                             %i + 21
          (%o2)              %union([x = - -----------])
                                           25 %i - 125
          (%i3) declare(y,complex)$

          (%i4) to_poly_solve(set(conjugate(x) - y = 42 + %i,
                                  x + conjugate(y) = 0), set(x,y));
                                     %i - 42        %i + 42
          (%o4)        %union([x = - -------, y = - -------])
                                        2              2

        * For an equation that involves the absolute value function, the
          `to_poly_solve' consults the fact database to decide if the
          argument to the absolute value is complex valued.  When

          (%i1) to_poly_solve(abs(x) = 6, x);
          (%o1)              %union([x = - 6], [x = 6])
          (%i2) declare(z,complex)$

          (%i3) to_poly_solve(abs(z) = 6, z);
          (%o3) %union(%if((%c11 # 0) %and (%c11 conjugate(%c11) - 36 =
                                                 0), [z = %c11], %union()))

          This is the only situation that the solver consults the fact
          database.  If a solve variable is declared to be an integer,
          for example, `to_poly_solve' ignores this declaration.

     Relevant option variables algexact, resultant, algebraic

     Related functions to_poly

     To use `load(to_poly_solve)'

     Status: The function `to_poly_solve' is experimental; its
     specifications might change and its functionality might be merged
     into other Maxima functions.


File: maxima.info,  Node: unit,  Next: zeilberger,  Prev: to_poly_solve,  Up: Top

80 unit
*******

* Menu:

* Introduction to Units::
* Functions and Variables for Units::


File: maxima.info,  Node: Introduction to Units,  Next: Functions and Variables for Units,  Prev: unit,  Up: unit

80.1 Introduction to Units
==========================

The _unit_ package enables the user to convert between arbitrary units
and work with dimensions in equations. The functioning of this package
is radically different from the original Maxima units package - whereas
the original was a basic list of definitions, this package uses
rulesets to allow the user to chose, on a per dimension basis, what
unit final answers should be rendered in.  It will separate units
instead of intermixing them in the display, allowing the user to
readily identify the units associated with a particular answer.  It
will allow a user to simplify an expression to its fundamental Base
Units, as well as providing fine control over simplifying to derived
units.  Dimensional analysis is possible, and a variety of tools are
available to manage conversion and simplification options. In addition
to customizable automatic conversion, _units_ also provides a
traditional manual conversion option.

   Note - when unit conversions are inexact Maxima will make
approximations resulting in fractions. This is a consequence of the
techniques used to simplify units.  The messages warning of this type
of substitution are disabled by default in the case of units (normally
they are on) since this situation occurs frequently and the warnings
clutter the output.  (The existing state of ratprint is restored after
unit conversions, so user changes to that setting will be preserved
otherwise.)  If  the user needs this information for units, they can set
_unitverbose:on_ to reactivate the printing of warnings from the unit
conversion process.

   _unit_ is included in Maxima in the share/contrib/unit directory. It
obeys normal Maxima package loading conventions:

     (%i1) load("unit")$
     *******************************************************************
     *                       Units version 0.50                        *
     *          Definitions based on the NIST Reference on             *
     *              Constants, Units, and Uncertainty                  *
     *       Conversion factors from various sources including         *
     *                   NIST and the GNU units package                *
     *******************************************************************

     Redefining necessary functions...
     WARNING: DEFUN/DEFMACRO: redefining function TOPLEVEL-MACSYMA-EVAL ...
     WARNING: DEFUN/DEFMACRO: redefining function MSETCHK ...
     WARNING: DEFUN/DEFMACRO: redefining function KILL1 ...
     WARNING: DEFUN/DEFMACRO: redefining function NFORMAT ...
     Initializing unit arrays...
     Done.

   The WARNING messages are expected and not a cause for concern - they
indicate the _unit_ package is redefining functions already defined in
Maxima proper.  This is necessary in order to properly handle units.
The user should be aware that if other changes have been made to these
functions by other packages those changes will be overwritten by this
loading process.

   The _unit.mac_ file also loads a lisp file _unit-functions.lisp_
which contains the lisp functions needed for the package.

   Clifford Yapp is the primary author.  He has received valuable
assistance from Barton Willis of the University of Nebraska at Kearney
(UNK), Robert Dodier, and other intrepid folk of the Maxima mailing
list.

   There are probably lots of bugs.  Let me know.  `float' and `numer'
don't do what is expected.

   TODO : dimension functionality, handling of temperature, showabbr
and friends.  Show examples with addition of quantities containing
units.


File: maxima.info,  Node: Functions and Variables for Units,  Prev: Introduction to Units,  Up: unit

80.2 Functions and Variables for Units
======================================

 -- Function: setunits (<list>)
     By default, the _unit_ package does not use any derived
     dimensions, but will convert all units to the seven fundamental
     dimensions using MKS units.
          (%i2) N;
                                               kg m
          (%o2)                                ----
                                                 2
                                                s
          (%i3) dyn;
                                             1      kg m
          (%o3)                           (------) (----)
                                           100000     2
                                                     s
          (%i4) g;
                                              1
          (%o4)                             (----) (kg)
                                             1000
          (%i5) centigram*inch/minutes^2;
                                            127        kg m
          (%o5)                       (-------------) (----)
                                       1800000000000     2
                                                        s

     In some cases this is the desired behavior.  If the user wishes to
     use other units, this is achieved with the `setunits' command:
          (%i6) setunits([centigram,inch,minute]);
          (%o6)                                done
          (%i7) N;
                                      1800000000000   %in cg
          (%o7)                      (-------------) (------)
                                           127            2
                                                      %min
          (%i8) dyn;
                                         18000000   %in cg
          (%o8)                         (--------) (------)
                                           127          2
                                                    %min
          (%i9) g;
          (%o9)                             (100) (cg)
          (%i10) centigram*inch/minutes^2;
                                              %in cg
          (%o10)                              ------
                                                  2
                                              %min

     The setting of units is quite flexible.  For example, if we want to
     get back to kilograms, meters, and seconds as defaults for those
     dimensions we can do:
          (%i11) setunits([kg,m,s]);
          (%o11)                               done
          (%i12) centigram*inch/minutes^2;
                                            127        kg m
          (%o12)                      (-------------) (----)
                                       1800000000000     2
                                                        s

     Derived units are also handled by this command:
          (%i17) setunits(N);
          (%o17)                               done
          (%i18) N;
          (%o18)                                 N
          (%i19) dyn;
                                              1
          (%o19)                           (------) (N)
                                            100000
          (%i20) kg*m/s^2;
          (%o20)                                 N
          (%i21) centigram*inch/minutes^2;
                                              127
          (%o21)                        (-------------) (N)
                                         1800000000000

     Notice that the _unit_ package recognized the non MKS combination
     of mass, length, and inverse time squared as a force, and
     converted it to Newtons.  This is how Maxima works in general.
     If, for example, we prefer dyne to Newtons, we simply do the
     following:
          (%i22) setunits(dyn);
          (%o22)                               done
          (%i23) kg*m/s^2;
          (%o23)                          (100000) (dyn)
          (%i24) centigram*inch/minutes^2;
                                            127
          (%o24)                         (--------) (dyn)
                                          18000000

     To discontinue simplifying to any force, we use the uforget
     command:
          (%i26) uforget(dyn);
          (%o26)                               false
          (%i27) kg*m/s^2;
                                               kg m
          (%o27)                               ----
                                                 2
                                                s
          (%i28) centigram*inch/minutes^2;
                                            127        kg m
          (%o28)                      (-------------) (----)
                                       1800000000000     2
                                                        s
     This would have worked equally well with `uforget(N)' or
     `uforget(%force)'.

     See also `uforget'. To use this function write first
     `load("unit")'.


 -- Function: uforget (<list>)
     By default, the _unit_ package converts all units to the seven
     fundamental dimensions using MKS units. This behavior can be
     changed with the `setunits' command. After that, the user can
     restore the default behavior for a particular dimension by means
     of the `uforget' command:
          (%i13) setunits([centigram,inch,minute]);
          (%o13)                               done
          (%i14) centigram*inch/minutes^2;
                                              %in cg
          (%o14)                              ------
                                                  2
                                              %min
          (%i15) uforget([cg,%in,%min]);
          (%o15)                      [false, false, false]
          (%i16) centigram*inch/minutes^2;
                                            127        kg m
          (%o16)                      (-------------) (----)
                                       1800000000000     2
                                                        s

     `uforget' operates on dimensions, not units, so any unit of a
     particular dimension will work.  The dimension itself is also a
     legal argument.

     See also `setunits'. To use this function write first
     `load("unit")'.


 -- Function: convert (<expr>, <list>)
     When resetting the global environment is overkill, there is the
     `convert' command, which allows one time conversions.  It can
     accept either a single argument or a list of units to use in
     conversion.  When a convert operation is done, the normal global
     evaluation system is bypassed, in order to avoid the desired
     result being converted again.  As a consequence, for inexact
     calculations "rat" warnings will be visible if the global
     environment controlling this behavior (`ratprint') is true.  This
     is also useful for spot-checking the accuracy of a global
     conversion.  Another feature is `convert' will allow a user to do
     Base Dimension conversions even if the global environment is set to
     simplify to a Derived Dimension.

          (%i2) kg*m/s^2;
                                               kg m
          (%o2)                                ----
                                                 2
                                                s
          (%i3) convert(kg*m/s^2,[g,km,s]);
                                               g km
          (%o3)                                ----
                                                 2
                                                s
          (%i4) convert(kg*m/s^2,[g,inch,minute]);

          `rat' replaced 39.37007874015748 by 5000/127 = 39.37007874015748
                                        18000000000   %in g
          (%o4)                        (-----------) (-----)
                                            127           2
                                                      %min
          (%i5) convert(kg*m/s^2,[N]);
          (%o5)                                  N
          (%i6) convert(kg*m^2/s^2,[N]);
          (%o6)                                 m N
          (%i7) setunits([N,J]);
          (%o7)                                done
          (%i8) convert(kg*m^2/s^2,[N]);
          (%o8)                                 m N
          (%i9) convert(kg*m^2/s^2,[N,inch]);

          `rat' replaced 39.37007874015748 by 5000/127 = 39.37007874015748
                                           5000
          (%o9)                           (----) (%in N)
                                           127
          (%i10) convert(kg*m^2/s^2,[J]);
          (%o10)                                 J
          (%i11) kg*m^2/s^2;
          (%o11)                                 J
          (%i12) setunits([g,inch,s]);
          (%o12)                               done
          (%i13) kg*m/s^2;
          (%o13)                                 N
          (%i14) uforget(N);
          (%o14)                               false
          (%i15) kg*m/s^2;
                                          5000000   %in g
          (%o15)                         (-------) (-----)
                                            127       2
                                                     s
          (%i16) convert(kg*m/s^2,[g,inch,s]);

          `rat' replaced 39.37007874015748 by 5000/127 = 39.37007874015748
                                          5000000   %in g
          (%o16)                         (-------) (-----)
                                            127       2
                                                     s

     See also `setunits' and `uforget'. To use this function write
     first `load("unit")'.


 -- Optional variable: usersetunits
     Default value: none

     If a user wishes to have a default unit behavior other than that
     described, they can make use of _maxima-init.mac_ and the
     _usersetunits_ variable.  The _unit_ package will check on startup
     to see if this variable has been assigned a list.  If it has, it
     will use setunits on that list and take the units from that list
     to be defaults.  `uforget' will revert to the behavior defined by
     usersetunits over its own defaults.  For example, if we have a
     _maxima-init.mac_ file containing:
          usersetunits : [N,J];
     we would see the following behavior:
          (%i1) load("unit")$
          *******************************************************************
          *                       Units version 0.50                        *
          *          Definitions based on the NIST Reference on             *
          *              Constants, Units, and Uncertainty                  *
          *       Conversion factors from various sources including         *
          *                   NIST and the GNU units package                *
          *******************************************************************

          Redefining necessary functions...
          WARNING: DEFUN/DEFMACRO: redefining function
           TOPLEVEL-MACSYMA-EVAL ...
          WARNING: DEFUN/DEFMACRO: redefining function MSETCHK ...
          WARNING: DEFUN/DEFMACRO: redefining function KILL1 ...
          WARNING: DEFUN/DEFMACRO: redefining function NFORMAT ...
          Initializing unit arrays...
          Done.
          User defaults found...
          User defaults initialized.
          (%i2) kg*m/s^2;
          (%o2)                                  N
          (%i3) kg*m^2/s^2;
          (%o3)                                  J
          (%i4) kg*m^3/s^2;
          (%o4)                                 J m
          (%i5) kg*m*km/s^2;
          (%o5)                             (1000) (J)
          (%i6) setunits([dyn,eV]);
          (%o6)                                done
          (%i7) kg*m/s^2;
          (%o7)                           (100000) (dyn)
          (%i8) kg*m^2/s^2;
          (%o8)                     (6241509596477042688) (eV)
          (%i9) kg*m^3/s^2;
          (%o9)                    (6241509596477042688) (eV m)
          (%i10) kg*m*km/s^2;
          (%o10)                   (6241509596477042688000) (eV)
          (%i11) uforget([dyn,eV]);
          (%o11)                           [false, false]
          (%i12) kg*m/s^2;
          (%o12)                                 N
          (%i13) kg*m^2/s^2;
          (%o13)                                 J
          (%i14) kg*m^3/s^2;
          (%o14)                                J m
          (%i15) kg*m*km/s^2;
          (%o15)                            (1000) (J)
     Without `usersetunits', the initial inputs would have been
     converted to MKS, and uforget would have resulted in a return to
     MKS rules.  Instead, the user preferences are respected in both
     cases.  Notice these can still be overridden if desired.  To
     completely eliminate this simplification - i.e.  to have the user
     defaults reset to factory defaults - the `dontusedimension'
     command can be used.  `uforget' can restore user settings again,
     but only if `usedimension' frees it for use.  Alternately,
     `kill(usersetunits)' will completely remove all knowledge of the
     user defaults from the session.  Here are some examples of how
     these various options work.
          (%i2) kg*m/s^2;
          (%o2)                                  N
          (%i3) kg*m^2/s^2;
          (%o3)                                  J
          (%i4) setunits([dyn,eV]);
          (%o4)                                done
          (%i5) kg*m/s^2;
          (%o5)                           (100000) (dyn)
          (%i6) kg*m^2/s^2;
          (%o6)                     (6241509596477042688) (eV)
          (%i7) uforget([dyn,eV]);
          (%o7)                          [false, false]
          (%i8) kg*m/s^2;
          (%o8)                                  N
          (%i9) kg*m^2/s^2;
          (%o9)                                  J
          (%i10) dontusedimension(N);
          (%o10)                             [%force]
          (%i11) dontusedimension(J);
          (%o11)                         [%energy, %force]
          (%i12) kg*m/s^2;
                                               kg m
          (%o12)                               ----
                                                 2
                                                s
          (%i13) kg*m^2/s^2;
                                                   2
                                               kg m
          (%o13)                               -----
                                                 2
                                                s
          (%i14) setunits([dyn,eV]);
          (%o14)                               done
          (%i15) kg*m/s^2;
                                               kg m
          (%o15)                               ----
                                                 2
                                                s
          (%i16) kg*m^2/s^2;
                                                   2
                                               kg m
          (%o16)                               -----
                                                 2
                                                s
          (%i17) uforget([dyn,eV]);
          (%o17)                         [false, false]
          (%i18) kg*m/s^2;
                                               kg m
          (%o18)                               ----
                                                 2
                                                s
          (%i19) kg*m^2/s^2;
                                                   2
                                               kg m
          (%o19)                               -----
                                                 2
                                                s
          (%i20) usedimension(N);
          Done.  To have Maxima simplify to this dimension, use
          setunits([unit]) to select a unit.
          (%o20)                               true
          (%i21) usedimension(J);
          Done.  To have Maxima simplify to this dimension, use
          setunits([unit]) to select a unit.
          (%o21)                               true
          (%i22) kg*m/s^2;
                                               kg m
          (%o22)                               ----
                                                 2
                                                s
          (%i23) kg*m^2/s^2;
                                                   2
                                               kg m
          (%o23)                               -----
                                                 2
                                                s
          (%i24) setunits([dyn,eV]);
          (%o24)                               done
          (%i25) kg*m/s^2;
          (%o25)                          (100000) (dyn)
          (%i26) kg*m^2/s^2;
          (%o26)                    (6241509596477042688) (eV)
          (%i27) uforget([dyn,eV]);
          (%o27)                           [false, false]
          (%i28) kg*m/s^2;
          (%o28)                                 N
          (%i29) kg*m^2/s^2;
          (%o29)                                 J
          (%i30) kill(usersetunits);
          (%o30)                               done
          (%i31) uforget([dyn,eV]);
          (%o31)                          [false, false]
          (%i32) kg*m/s^2;
                                               kg m
          (%o32)                               ----
                                                 2
                                                s
          (%i33) kg*m^2/s^2;
                                                   2
                                               kg m
          (%o33)                               -----
                                                 2
                                                s
     Unfortunately this wide variety of options is a little
     confusing at first, but once the user grows used to them they
     should find they have very full control over their working
     environment.


 -- Function: metricexpandall (<x>)
     Rebuilds global unit lists automatically creating all desired
     metric units.  <x> is a numerical argument which is used to
     specify how many metric prefixes the user wishes defined.  The
     arguments are as follows, with each higher number defining all
     lower numbers' units:
                     0 - none. Only base units
                     1 - kilo, centi, milli
          (default)  2 - giga, mega, kilo, hecto, deka, deci, centi, milli,
                         micro, nano
                     3 - peta, tera, giga, mega, kilo, hecto, deka, deci,
                         centi, milli, micro, nano, pico, femto
                     4 - all
     Normally, Maxima will not define the full expansion since
     this results in a very large number of units, but
     `metricexpandall' can be used to rebuild the list in a more or
     less complete fashion. The relevant variable in the _unit.mac_
     file is <%unitexpand>.


 -- Variable: %unitexpand
     Default value: `2'

     This is the value supplied to `metricexpandall' during the initial
     loading of _unit_.



File: maxima.info,  Node: zeilberger,  Next: Function and Variable Index,  Prev: unit,  Up: Top

81 zeilberger
*************

* Menu:

* Introduction to zeilberger::
* Functions and Variables for zeilberger::


File: maxima.info,  Node: Introduction to zeilberger,  Next: Functions and Variables for zeilberger,  Prev: zeilberger,  Up: zeilberger

81.1 Introduction to zeilberger
===============================

`zeilberger' is a implementation of Zeilberger's algorithm for definite
hypergeometric summation, and also Gosper's algorithm for indefinite
hypergeometric summation.

   `zeilberger' makes use of the "filtering" optimization method
developed by Axel Riese.

   `zeilberger' was developed by Fabrizio Caruso.

   `load (zeilberger)' loads this package.

81.1.0.1 The indefinite summation problem
.........................................

`zeilberger' implements Gosper's algorithm for indefinite
hypergeometric summation.  Given a hypergeometric term F_k in k we want
to find its hypergeometric anti-difference, that is, a hypergeometric
term f_k such that

   F_k = f_(k+1) - f_k.

81.1.0.2 The definite summation problem
.......................................

`zeilberger' implements Zeilberger's algorithm for definite
hypergeometric summation.  Given a proper hypergeometric term (in n and
k) F_(n,k) and a positive integer d we want to find a d-th order linear
recurrence with polynomial coefficients (in n) for F_(n,k) and a
rational function R in n and k such that

   a_0 F_(n,k) + ... + a_d F_(n+d),k = Delta_k(R(n,k) F_(n,k)),

   where Delta_k is the k-forward difference operator, i.e.,
Delta_k(t_k) := t_(k+1) - t_k.

81.1.1 Verbosity levels
-----------------------

There are also verbose versions of the commands which are called by
adding one of the following prefixes:

`Summary'
     Just a summary at the end is shown

`Verbose'
     Some information in the intermidiate steps

`VeryVerbose'
     More information

`Extra'
     Even more information including information on the linear system
     in Zeilberger's algorithm

   For example:
`GosperVerbose', `parGosperVeryVerbose', `ZeilbergerExtra',
`AntiDifferenceSummary'.


File: maxima.info,  Node: Functions and Variables for zeilberger,  Prev: Introduction to zeilberger,  Up: zeilberger

81.2 Functions and Variables for zeilberger
===========================================

 -- Function: AntiDifference (F_k, <k>)
     Returns the hypergeometric anti-difference of F_k, if it exists.
     Otherwise `AntiDifference' returns `no_hyp_antidifference'.


 -- Function: Gosper (F_k, <k>)
     Returns the rational certificate R(k) for F_k, that is, a rational
     function such that F_k = R(k+1) F_(k+1) - R(k) F_k, if it exists.
     Otherwise, `Gosper' returns `no_hyp_sol'.


 -- Function: GosperSum (F_k, <k>, <a>, <b>)
     Returns the summmation of F_k from <k> = <a> to <k> = <b> if F_k
     has a hypergeometric anti-difference.  Otherwise, `GosperSum'
     returns `nongosper_summable'.

     Examples:

          (%i1) load (zeilberger)$
          (%i2) GosperSum ((-1)^k*k / (4*k^2 - 1), k, 1, n);
          Dependent equations eliminated:  (1)
                                     3       n + 1
                                (n + -) (- 1)
                                     2               1
          (%o2)               - ------------------ - -
                                            2        4
                                2 (4 (n + 1)  - 1)
          (%i3) GosperSum (1 / (4*k^2 - 1), k, 1, n);
                                          3
                                    - n - -
                                          2       1
          (%o3)                  -------------- + -
                                          2       2
                                 4 (n + 1)  - 1
          (%i4) GosperSum (x^k, k, 1, n);
                                    n + 1
                                   x          x
          (%o4)                    ------ - -----
                                   x - 1    x - 1
          (%i5) GosperSum ((-1)^k*a! / (k!*(a - k)!), k, 1, n);
                                          n + 1
                          a! (n + 1) (- 1)              a!
          (%o5)       - ------------------------- - ----------
                        a (- n + a - 1)! (n + 1)!   a (a - 1)!
          (%i6) GosperSum (k*k!, k, 1, n);
          Dependent equations eliminated:  (1)
          (%o6)                     (n + 1)! - 1
          (%i7) GosperSum ((k + 1)*k! / (k + 1)!, k, 1, n);
                            (n + 1) (n + 2) (n + 1)!
          (%o7)             ------------------------ - 1
                                    (n + 2)!
          (%i8) GosperSum (1 / ((a - k)!*k!), k, 1, n);
          (%o8)                  NON_GOSPER_SUMMABLE


 -- Function: parGosper (F_(n,k), <k>, <n>, <d>)
     Attempts to find a <d>-th order recurrence for F_(n,k).

     The algorithm yields a sequence [s_1, s_2, ..., s_m] of solutions.
     Each solution has the form

     [R(n, k), [a_0, a_1, ..., a_d]].

     `parGosper' returns `[]' if it fails to find a recurrence.


 -- Function: Zeilberger (F_(n,k), <k>, <n>)
     Attempts to compute the indefinite hypergeometric summation of
     F_(n,k).

     `Zeilberger' first invokes `Gosper', and if that fails to find a
     solution, then invokes `parGosper' with order 1, 2, 3, ..., up to
     `MAX_ORD'.  If Zeilberger finds a solution before reaching
     `MAX_ORD', it stops and returns the solution.

     The algorithms yields a sequence [s_1, s_2, ..., s_m] of solutions.
     Each solution has the form

     [R(n,k), [a_0, a_1, ..., a_d]].

     `Zeilberger' returns `[]' if it fails to find a solution.

     `Zeilberger' invokes `Gosper' only if `Gosper_in_Zeilberger' is
     `true'.


81.3 General global variables
=============================

 -- Global variable: MAX_ORD
     Default value: 5

     `MAX_ORD' is the maximum recurrence order attempted by
     `Zeilberger'.


 -- Global variable: simplified_output
     Default value: `false'

     When `simplified_output' is `true', functions in the `zeilberger'
     package attempt further simplification of the solution.


 -- Global variable: linear_solver
     Default value: `linsolve'

     `linear_solver' names the solver which is used to solve the system
     of equations in Zeilberger's algorithm.


 -- Global variable: warnings
     Default value: `true'

     When `warnings' is `true', functions in the `zeilberger' package
     print warning messages during execution.


 -- Global variable: Gosper_in_Zeilberger
     Default value: `true'

     When `Gosper_in_Zeilberger' is `true', the `Zeilberger' function
     calls `Gosper' before calling `parGosper'.  Otherwise,
     `Zeilberger' goes immediately to `parGosper'.


 -- Global variable: trivial_solutions
     Default value: `true'

     When `trivial_solutions' is `true', `Zeilberger' returns solutions
     which have certificate equal to zero, or all coefficients equal to
     zero.


81.4 Variables related to the modular test
==========================================

 -- Global variable: mod_test
     Default value: `false'

     When `mod_test' is `true', `parGosper' executes a modular test for
     discarding systems with no solutions.


 -- Global variable: modular_linear_solver
     Default value: `linsolve'

     `modular_linear_solver' names the linear solver used by the
     modular test in `parGosper'.


 -- Global variable: ev_point
     Default value: `big_primes[10]'

     `ev_point' is the value at which the variable <n> is evaluated
     when executing the modular test in `parGosper'.


 -- Global variable: mod_big_prime
     Default value: `big_primes[1]'

     `mod_big_prime' is the modulus used by the modular test in
     `parGosper'.


 -- Global variable: mod_threshold
     Default value: 4

     `mod_threshold' is the greatest order for which the modular test
     in `parGosper' is attempted.



File: maxima.info,  Node: Function and Variable Index,  Prev: zeilberger,  Up: Top

82 Indices
**********

Appendix A Function and Variable Index
**************************************

 [index ]
* Menu:

* !:                                     Combinatorial Functions.
                                                             (line   58)
* !!:                                    Combinatorial Functions.
                                                             (line    7)
* #:                                     Operators for Equations.
                                                             (line    7)
* %:                                     Functions and Variables for Command Line.
                                                             (line   92)
* %%:                                    Functions and Variables for Command Line.
                                                             (line  106)
* %and:                                  Functions and Variables for to_poly_solve.
                                                             (line   16)
* %c:                                    Functions and Variables for contrib_ode.
                                                             (line   76)
* %e:                                    Functions and Variables for Constants.
                                                             (line    7)
* %e_to_numlog:                          Root Exponential and Logarithmic Functions.
                                                             (line    7)
* %edispflag:                            Functions and Variables for Display.
                                                             (line    7)
* %emode:                                Root Exponential and Logarithmic Functions.
                                                             (line   17)
* %enumer:                               Root Exponential and Logarithmic Functions.
                                                             (line   34)
* %f:                                    Hypergeometric Functions.
                                                             (line   22)
* %gamma:                                Functions and Variables for Constants.
                                                             (line   22)
* %i:                                    Functions and Variables for Constants.
                                                             (line   13)
* %iargs:                                Functions and Variables for Trigonometric.
                                                             (line   54)
* %if:                                   Functions and Variables for to_poly_solve.
                                                             (line   91)
* %k1:                                   Functions and Variables for contrib_ode.
                                                             (line   80)
* %k2:                                   Functions and Variables for contrib_ode.
                                                             (line   84)
* %m:                                    Hypergeometric Functions.
                                                             (line   13)
* %or:                                   Functions and Variables for to_poly_solve.
                                                             (line  134)
* %phi:                                  Functions and Variables for Constants.
                                                             (line   49)
* %pi:                                   Functions and Variables for Constants.
                                                             (line  105)
* %piargs:                               Functions and Variables for Trigonometric.
                                                             (line    7)
* %rnum_list:                            Functions and Variables for Equations.
                                                             (line    7)
* %s:                                    Bessel Functions.   (line  174)
* %th:                                   Functions and Variables for Command Line.
                                                             (line  153)
* %unitexpand:                           Functions and Variables for Units.
                                                             (line  416)
* %w:                                    Hypergeometric Functions.
                                                             (line   18)
* ':                                     Functions and Variables for Evaluation.
                                                             (line    7)
* '':                                    Functions and Variables for Evaluation.
                                                             (line  102)
* *:                                     Arithmetic operators.
                                                             (line    9)
* **:                                    Arithmetic operators.
                                                             (line  167)
* +:                                     Arithmetic operators.
                                                             (line    7)
* -:                                     Arithmetic operators.
                                                             (line    8)
* .:                                     Arithmetic operators.
                                                             (line  209)
* /:                                     Arithmetic operators.
                                                             (line   10)
* ::                                     Assignment operators.
                                                             (line    7)
* :::                                    Assignment operators.
                                                             (line   90)
* ::=:                                   Assignment operators.
                                                             (line  116)
* :=:                                    Assignment operators.
                                                             (line  190)
* <:                                     Relational operators.
                                                             (line    7)
* <=:                                    Relational operators.
                                                             (line    8)
* =:                                     Operators for Equations.
                                                             (line   31)
* >:                                     Relational operators.
                                                             (line   10)
* >=:                                    Relational operators.
                                                             (line    9)
* ?:                                     Functions and Variables for Command Line.
                                                             (line  183)
* ??:                                    Functions and Variables for Command Line.
                                                             (line  196)
* @:                                     Functions and Variables for Structures.
                                                             (line   71)
* [:                                     Functions and Variables for Lists.
                                                             (line    7)
* \\:                                    Introduction to Strings.
                                                             (line    6)
* ]:                                     Functions and Variables for Lists.
                                                             (line    8)
* ^:                                     Arithmetic operators.
                                                             (line   11)
* ^^:                                    Arithmetic operators.
                                                             (line  190)
* _:                                     Functions and Variables for Command Line.
                                                             (line   47)
* __:                                    Functions and Variables for Command Line.
                                                             (line    7)
* `:                                     Functions and Variables for ezunits.
                                                             (line   95)
* abasep:                                Functions and Variables for atensor.
                                                             (line  136)
* abs:                                   Functions for Numbers.
                                                             (line    7)
* absboxchar:                            Functions and Variables for Display.
                                                             (line   27)
* absint:                                Functions and Variables for Fourier series.
                                                             (line   32)
* absolute_real_time:                    Functions and Variables for Runtime Environment.
                                                             (line  146)
* acos:                                  Functions and Variables for Trigonometric.
                                                             (line   84)
* acosh:                                 Functions and Variables for Trigonometric.
                                                             (line   88)
* acot:                                  Functions and Variables for Trigonometric.
                                                             (line   92)
* acoth:                                 Functions and Variables for Trigonometric.
                                                             (line   96)
* acsc:                                  Functions and Variables for Trigonometric.
                                                             (line  100)
* acsch:                                 Functions and Variables for Trigonometric.
                                                             (line  104)
* activate:                              Functions and Variables for Facts.
                                                             (line    7)
* activecontexts:                        Functions and Variables for Facts.
                                                             (line   17)
* adapt_depth <1>:                       Plotting Options.   (line   15)
* adapt_depth:                           Functions and Variables for draw.
                                                             (line  195)
* add_edge:                              Functions and Variables for graphs.
                                                             (line 1235)
* add_edges:                             Functions and Variables for graphs.
                                                             (line 1249)
* add_vertex:                            Functions and Variables for graphs.
                                                             (line 1264)
* add_vertices:                          Functions and Variables for graphs.
                                                             (line 1279)
* addcol:                                Functions and Variables for Matrices and Linear Algebra.
                                                             (line    7)
* Addition:                              Arithmetic operators.
                                                             (line    7)
* additive:                              Functions and Variables for Simplification.
                                                             (line    7)
* addmatrices:                           Functions and Variables for linearalgebra.
                                                             (line    7)
* addrow:                                Functions and Variables for Matrices and Linear Algebra.
                                                             (line   12)
* adim:                                  Functions and Variables for atensor.
                                                             (line   76)
* adjacency_matrix:                      Functions and Variables for graphs.
                                                             (line  361)
* adjoin:                                Functions and Variables for Sets.
                                                             (line    7)
* adjoint:                               Functions and Variables for Matrices and Linear Algebra.
                                                             (line   17)
* af:                                    Functions and Variables for atensor.
                                                             (line  104)
* aform:                                 Functions and Variables for atensor.
                                                             (line   84)
* agd:                                   Package functs.     (line  167)
* airy_ai:                               Airy Functions.     (line   16)
* airy_bi:                               Airy Functions.     (line   30)
* airy_dai:                              Airy Functions.     (line   24)
* airy_dbi:                              Airy Functions.     (line   38)
* alg_type:                              Functions and Variables for atensor.
                                                             (line   71)
* algebraic:                             Functions and Variables for Polynomials.
                                                             (line    7)
* algepsilon:                            Functions and Variables for Equations.
                                                             (line   31)
* algexact:                              Functions and Variables for Equations.
                                                             (line   37)
* algsys:                                Functions and Variables for Equations.
                                                             (line   53)
* alias:                                 Functions and Variables for Expressions.
                                                             (line    8)
* aliases:                               Functions and Variables for Expressions.
                                                             (line   13)
* all_dotsimp_denoms:                    Functions and Variables for Affine.
                                                             (line  143)
* allbut:                                Functions and Variables for Expressions.
                                                             (line   21)
* allocation:                            Functions and Variables for draw.
                                                             (line  204)
* allroots:                              Functions and Variables for Equations.
                                                             (line  155)
* allsym:                                Functions and Variables for itensor.
                                                             (line  525)
* alphabetic:                            Functions and Variables for Properties.
                                                             (line    7)
* alphacharp:                            Functions and Variables for characters.
                                                             (line    7)
* alphanumericp:                         Functions and Variables for characters.
                                                             (line   11)
* amortization:                          Functions and Variables for finance.
                                                             (line  106)
* and:                                   Logical operators.  (line    7)
* annuity_fv:                            Functions and Variables for finance.
                                                             (line   67)
* annuity_pv:                            Functions and Variables for finance.
                                                             (line   54)
* antid:                                 Functions and Variables for Differentiation.
                                                             (line    7)
* antidiff:                              Functions and Variables for Differentiation.
                                                             (line   61)
* AntiDifference:                        Functions and Variables for zeilberger.
                                                             (line    7)
* antisymmetric:                         Functions and Variables for Simplification.
                                                             (line   31)
* append:                                Functions and Variables for Lists.
                                                             (line   41)
* appendfile:                            Functions and Variables for File Input and Output.
                                                             (line    7)
* apply:                                 Functions and Variables for Function Definition.
                                                             (line    7)
* apply1:                                Functions and Variables for Rules and Patterns.
                                                             (line    7)
* apply2:                                Functions and Variables for Rules and Patterns.
                                                             (line   22)
* applyb1:                               Functions and Variables for Rules and Patterns.
                                                             (line   35)
* apropos:                               Functions and Variables for Help.
                                                             (line    7)
* args:                                  Functions and Variables for Expressions.
                                                             (line   52)
* arit_amortization:                     Functions and Variables for finance.
                                                             (line  131)
* arithmetic:                            Package functs.     (line  119)
* arithsum:                              Package functs.     (line  140)
* array:                                 Functions and Variables for Arrays.
                                                             (line    7)
* arrayapply:                            Functions and Variables for Arrays.
                                                             (line   36)
* arrayinfo:                             Functions and Variables for Arrays.
                                                             (line   44)
* arraymake:                             Functions and Variables for Arrays.
                                                             (line  142)
* arrays:                                Functions and Variables for Arrays.
                                                             (line  187)
* ascii:                                 Functions and Variables for characters.
                                                             (line   15)
* asec:                                  Functions and Variables for Trigonometric.
                                                             (line  108)
* asech:                                 Functions and Variables for Trigonometric.
                                                             (line  112)
* asin:                                  Functions and Variables for Trigonometric.
                                                             (line  116)
* asinh:                                 Functions and Variables for Trigonometric.
                                                             (line  120)
* askexp:                                Functions and Variables for Miscellaneous Options.
                                                             (line    7)
* askinteger:                            Functions and Variables for Facts.
                                                             (line   28)
* asksign:                               Functions and Variables for Facts.
                                                             (line   40)
* Assignment operator:                   Assignment operators.
                                                             (line    7)
* Assignment operator (evaluates left-hand side): Assignment operators.
                                                             (line   90)
* assoc:                                 Functions and Variables for Lists.
                                                             (line   51)
* assoc_legendre_p:                      Functions and Variables for orthogonal polynomials.
                                                             (line    7)
* assoc_legendre_q:                      Functions and Variables for orthogonal polynomials.
                                                             (line   15)
* assume:                                Functions and Variables for Facts.
                                                             (line   49)
* assume_external_byte_order:            Functions and Variables for binary input and output.
                                                             (line    7)
* assume_pos:                            Functions and Variables for Facts.
                                                             (line  134)
* assume_pos_pred:                       Functions and Variables for Facts.
                                                             (line  159)
* assumescalar:                          Functions and Variables for Facts.
                                                             (line  110)
* asymbol:                               Functions and Variables for atensor.
                                                             (line   91)
* asympa:                                Introduction to asympa.
                                                             (line    7)
* at:                                    Functions and Variables for Differentiation.
                                                             (line  112)
* atan:                                  Functions and Variables for Trigonometric.
                                                             (line  124)
* atan2:                                 Functions and Variables for Trigonometric.
                                                             (line  128)
* atanh:                                 Functions and Variables for Trigonometric.
                                                             (line  133)
* atensimp:                              Functions and Variables for atensor.
                                                             (line   62)
* atom:                                  Functions and Variables for Expressions.
                                                             (line   65)
* atomgrad:                              Functions and Variables for Differentiation.
                                                             (line  157)
* atrig1:                                Functions and Variables for Trigonometric.
                                                             (line  137)
* atvalue:                               Functions and Variables for Differentiation.
                                                             (line  163)
* augcoefmatrix:                         Functions and Variables for Matrices and Linear Algebra.
                                                             (line   23)
* augmented_lagrangian_method:           Functions and Variables for augmented_lagrangian.
                                                             (line    9)
* av:                                    Functions and Variables for atensor.
                                                             (line  111)
* average_degree:                        Functions and Variables for graphs.
                                                             (line  377)
* axes:                                  Plotting Options.   (line   22)
* axis_3d:                               Functions and Variables for draw.
                                                             (line  244)
* axis_bottom:                           Functions and Variables for draw.
                                                             (line  263)
* axis_left:                             Functions and Variables for draw.
                                                             (line  280)
* axis_right:                            Functions and Variables for draw.
                                                             (line  297)
* axis_top:                              Functions and Variables for draw.
                                                             (line  314)
* azimuth:                               Plotting Options.   (line   32)
* background_color:                      Functions and Variables for draw.
                                                             (line  331)
* backslash:                             Introduction to Strings.
                                                             (line    6)
* backsubst:                             Functions and Variables for Equations.
                                                             (line  224)
* backtrace:                             Functions and Variables for Program Flow.
                                                             (line    7)
* bars:                                  Functions and Variables for draw.
                                                             (line 2631)
* barsplot:                              Functions and Variables for statistical graphs.
                                                             (line    8)
* barsplot_description:                  Functions and Variables for statistical graphs.
                                                             (line    9)
* Base of natural logarithm:             Functions and Variables for Constants.
                                                             (line    7)
* bashindices:                           Sums and Products.  (line    7)
* batch:                                 Functions and Variables for File Input and Output.
                                                             (line   16)
* batchload:                             Functions and Variables for File Input and Output.
                                                             (line   68)
* bc2:                                   Functions and Variables for Differential Equations.
                                                             (line    7)
* bdvac:                                 Functions and Variables for ctensor.
                                                             (line  801)
* belln:                                 Functions and Variables for Sets.
                                                             (line   25)
* benefit_cost:                          Functions and Variables for finance.
                                                             (line  241)
* berlefact:                             Functions and Variables for Polynomials.
                                                             (line   14)
* bern:                                  Functions and Variables for Number Theory.
                                                             (line    7)
* bernpoly:                              Functions and Variables for Number Theory.
                                                             (line   25)
* bernstein_approx:                      Functions and Variables for Bernstein.
                                                             (line   76)
* bernstein_expand:                      Functions and Variables for Bernstein.
                                                             (line  103)
* bernstein_explicit:                    Functions and Variables for Bernstein.
                                                             (line   50)
* bernstein_poly:                        Functions and Variables for Bernstein.
                                                             (line    7)
* bessel_i:                              Bessel Functions.   (line   35)
* bessel_j:                              Bessel Functions.   (line    7)
* bessel_k:                              Bessel Functions.   (line   51)
* bessel_y:                              Bessel Functions.   (line   23)
* besselexpand:                          Bessel Functions.   (line  133)
* beta:                                  Gamma and factorial Functions.
                                                             (line  173)
* beta_args_sum_to_integer:              Gamma and factorial Functions.
                                                             (line  665)
* beta_expand:                           Gamma and factorial Functions.
                                                             (line  658)
* beta_incomplete:                       Gamma and factorial Functions.
                                                             (line  288)
* beta_incomplete_generalized:           Gamma and factorial Functions.
                                                             (line  536)
* beta_incomplete_regularized:           Gamma and factorial Functions.
                                                             (line  437)
* bezout:                                Functions and Variables for Polynomials.
                                                             (line   22)
* bf_find_root:                          Functions and Variables for fast Fourier transform.
                                                             (line  236)
* bf_fmin_cobyla:                        Functions and Variables for cobyla.
                                                             (line   71)
* bfallroots:                            Functions and Variables for Equations.
                                                             (line  215)
* bffac:                                 Gamma and factorial Functions.
                                                             (line   11)
* bfhzeta:                               Functions and Variables for Number Theory.
                                                             (line   35)
* bfloat:                                Functions and Variables for Numbers.
                                                             (line    7)
* bfloatp:                               Functions and Variables for Numbers.
                                                             (line   17)
* bfpsi:                                 Gamma and factorial Functions.
                                                             (line   17)
* bfpsi0:                                Gamma and factorial Functions.
                                                             (line   18)
* bftorat:                               Functions and Variables for Numbers.
                                                             (line   21)
* bftrunc:                               Functions and Variables for Numbers.
                                                             (line   49)
* bfzeta:                                Functions and Variables for Number Theory.
                                                             (line   29)
* biconnected_components:                Functions and Variables for graphs.
                                                             (line  388)
* bimetric:                              Functions and Variables for ctensor.
                                                             (line  825)
* bindtest:                              Functions and Variables for Properties.
                                                             (line   27)
* binomial:                              Combinatorial Functions.
                                                             (line   24)
* bipartition:                           Functions and Variables for graphs.
                                                             (line  404)
* block:                                 Functions and Variables for Function Definition.
                                                             (line   67)
* blockmatrixp:                          Functions and Variables for linearalgebra.
                                                             (line   22)
* bode_gain:                             Functions and Variables for bode.
                                                             (line    7)
* bode_phase:                            Functions and Variables for bode.
                                                             (line   53)
* border:                                Functions and Variables for draw.
                                                             (line  340)
* bothcoef:                              Functions and Variables for Polynomials.
                                                             (line   40)
* boundaries_array:                      Functions and Variables for worldmap.
                                                             (line   12)
* box <1>:                               Plotting Options.   (line   45)
* box:                                   Functions and Variables for Expressions.
                                                             (line   72)
* boxchar:                               Functions and Variables for Expressions.
                                                             (line  121)
* boxplot:                               Functions and Variables for statistical graphs.
                                                             (line  145)
* boxplot_description:                   Functions and Variables for statistical graphs.
                                                             (line  146)
* break:                                 Functions and Variables for Function Definition.
                                                             (line  119)
* breakup:                               Functions and Variables for Equations.
                                                             (line  243)
* bug_report:                            Functions and Variables for Bug Detection and Reporting.
                                                             (line   65)
* build_info:                            Functions and Variables for Bug Detection and Reporting.
                                                             (line   76)
* buildq:                                Macros.             (line    7)
* burn:                                  Functions and Variables for Number Theory.
                                                             (line   53)
* cabs:                                  Functions for Complex Numbers.
                                                             (line    7)
* canform:                               Functions and Variables for itensor.
                                                             (line  588)
* canten:                                Functions and Variables for itensor.
                                                             (line  505)
* cardinality:                           Functions and Variables for Sets.
                                                             (line   52)
* carg:                                  Functions for Complex Numbers.
                                                             (line   73)
* cartan:                                Functions and Variables for Differentiation.
                                                             (line  219)
* cartesian_product:                     Functions and Variables for Sets.
                                                             (line   70)
* catch:                                 Functions and Variables for Function Definition.
                                                             (line  125)
* cauchy_matrix:                         Functions and Variables for Matrices and Linear Algebra.
                                                             (line   39)
* cauchysum:                             Functions and Variables for Series.
                                                             (line    7)
* cbffac:                                Gamma and factorial Functions.
                                                             (line   27)
* cbrange:                               Functions and Variables for draw.
                                                             (line  360)
* cbtics:                                Functions and Variables for draw.
                                                             (line  388)
* cdf_bernoulli:                         Functions and Variables for discrete distributions.
                                                             (line  257)
* cdf_beta:                              Functions and Variables for continuous distributions.
                                                             (line  902)
* cdf_binomial:                          Functions and Variables for discrete distributions.
                                                             (line  112)
* cdf_cauchy:                            Functions and Variables for continuous distributions.
                                                             (line 1448)
* cdf_chi2:                              Functions and Variables for continuous distributions.
                                                             (line  303)
* cdf_continuous_uniform:                Functions and Variables for continuous distributions.
                                                             (line  969)
* cdf_discrete_uniform:                  Functions and Variables for discrete distributions.
                                                             (line  428)
* cdf_exp:                               Functions and Variables for continuous distributions.
                                                             (line  602)
* cdf_f:                                 Functions and Variables for continuous distributions.
                                                             (line  508)
* cdf_gamma:                             Functions and Variables for continuous distributions.
                                                             (line  829)
* cdf_general_finite_discrete:           Functions and Variables for discrete distributions.
                                                             (line   26)
* cdf_geometric:                         Functions and Variables for discrete distributions.
                                                             (line  370)
* cdf_gumbel:                            Functions and Variables for continuous distributions.
                                                             (line 1478)
* cdf_hypergeometric:                    Functions and Variables for discrete distributions.
                                                             (line  496)
* cdf_laplace:                           Functions and Variables for continuous distributions.
                                                             (line 1390)
* cdf_logistic:                          Functions and Variables for continuous distributions.
                                                             (line 1031)
* cdf_lognormal:                         Functions and Variables for continuous distributions.
                                                             (line  753)
* cdf_negative_binomial:                 Functions and Variables for discrete distributions.
                                                             (line  568)
* cdf_noncentral_chi2:                   Functions and Variables for continuous distributions.
                                                             (line  446)
* cdf_noncentral_student_t:              Functions and Variables for continuous distributions.
                                                             (line  192)
* cdf_normal:                            Functions and Variables for continuous distributions.
                                                             (line   13)
* cdf_pareto:                            Functions and Variables for continuous distributions.
                                                             (line 1089)
* cdf_poisson:                           Functions and Variables for discrete distributions.
                                                             (line  181)
* cdf_rank_sum:                          Functions and Variables for special distributions.
                                                             (line   31)
* cdf_rayleigh:                          Functions and Variables for continuous distributions.
                                                             (line 1219)
* cdf_signed_rank:                       Functions and Variables for special distributions.
                                                             (line   15)
* cdf_student_t:                         Functions and Variables for continuous distributions.
                                                             (line   93)
* cdf_weibull:                           Functions and Variables for continuous distributions.
                                                             (line 1147)
* cdisplay:                              Functions and Variables for ctensor.
                                                             (line  851)
* ceiling:                               Functions for Numbers.
                                                             (line   95)
* central_moment:                        Functions and Variables for descriptive statistics.
                                                             (line  143)
* cequal:                                Functions and Variables for characters.
                                                             (line   26)
* cequalignore:                          Functions and Variables for characters.
                                                             (line   30)
* cf:                                    Functions and Variables for Number Theory.
                                                             (line   95)
* cfdisrep:                              Functions and Variables for Number Theory.
                                                             (line  164)
* cfexpand:                              Functions and Variables for Number Theory.
                                                             (line  181)
* cflength:                              Functions and Variables for Number Theory.
                                                             (line  198)
* cframe_flag:                           Functions and Variables for ctensor.
                                                             (line 1100)
* cgeodesic:                             Functions and Variables for ctensor.
                                                             (line  794)
* cgreaterp:                             Functions and Variables for characters.
                                                             (line   34)
* cgreaterpignore:                       Functions and Variables for characters.
                                                             (line   39)
* changename:                            Functions and Variables for itensor.
                                                             (line   24)
* changevar:                             Functions and Variables for Integration.
                                                             (line    7)
* chaosgame:                             Functions and Variables for dynamics.
                                                             (line    8)
* charat:                                Functions and Variables for strings.
                                                             (line   11)
* charfun:                               Functions and Variables for Predicates.
                                                             (line    7)
* charfun2:                              Functions and Variables for interpol.
                                                             (line  105)
* charlist:                              Functions and Variables for strings.
                                                             (line   19)
* charp:                                 Functions and Variables for characters.
                                                             (line   43)
* charpoly:                              Functions and Variables for Matrices and Linear Algebra.
                                                             (line   69)
* chebyshev_t:                           Functions and Variables for orthogonal polynomials.
                                                             (line   22)
* chebyshev_u:                           Functions and Variables for orthogonal polynomials.
                                                             (line   28)
* check_overlaps:                        Functions and Variables for Affine.
                                                             (line   97)
* checkdiv:                              Functions and Variables for ctensor.
                                                             (line  785)
* chinese:                               Functions and Variables for Number Theory.
                                                             (line   74)
* cholesky:                              Functions and Variables for linearalgebra.
                                                             (line   73)
* christof:                              Functions and Variables for ctensor.
                                                             (line  196)
* chromatic_index:                       Functions and Variables for graphs.
                                                             (line  417)
* chromatic_number:                      Functions and Variables for graphs.
                                                             (line  427)
* cint:                                  Functions and Variables for characters.
                                                             (line   48)
* circulant_graph:                       Functions and Variables for graphs.
                                                             (line   71)
* clear_edge_weight:                     Functions and Variables for graphs.
                                                             (line  438)
* clear_rules:                           Functions and Variables for Rules and Patterns.
                                                             (line  856)
* clear_vertex_label:                    Functions and Variables for graphs.
                                                             (line  452)
* clebsch_graph:                         Functions and Variables for graphs.
                                                             (line   92)
* clessp:                                Functions and Variables for characters.
                                                             (line   52)
* clesspignore:                          Functions and Variables for characters.
                                                             (line   57)
* close:                                 Functions and Variables for input and output.
                                                             (line   26)
* closefile:                             Functions and Variables for File Input and Output.
                                                             (line   84)
* cmetric:                               Functions and Variables for ctensor.
                                                             (line   16)
* cnonmet_flag:                          Functions and Variables for ctensor.
                                                             (line 1115)
* coeff:                                 Functions and Variables for Polynomials.
                                                             (line   55)
* coefmatrix:                            Functions and Variables for Matrices and Linear Algebra.
                                                             (line  106)
* cograd:                                Functions and Variables for ctensor.
                                                             (line  731)
* col:                                   Functions and Variables for Matrices and Linear Algebra.
                                                             (line  116)
* collapse:                              Functions and Variables for Expressions.
                                                             (line  133)
* collectterms:                          Package facexp.     (line  106)
* color <1>:                             Functions and Variables for draw.
                                                             (line  412)
* color:                                 Plotting Options.   (line   52)
* colorbox <1>:                          Functions and Variables for draw.
                                                             (line  462)
* colorbox:                              Plotting Options.   (line   70)
* columnop:                              Functions and Variables for linearalgebra.
                                                             (line   27)
* columns:                               Functions and Variables for draw.
                                                             (line  494)
* columnspace:                           Functions and Variables for linearalgebra.
                                                             (line   38)
* columnswap:                            Functions and Variables for linearalgebra.
                                                             (line   33)
* columnvector:                          Functions and Variables for Matrices and Linear Algebra.
                                                             (line  121)
* combination:                           Package functs.     (line  198)
* combine:                               Functions and Variables for Simplification.
                                                             (line   58)
* commutative:                           Functions and Variables for Simplification.
                                                             (line   63)
* comp2pui:                              Functions and Variables for Symmetries.
                                                             (line   10)
* compare:                               Functions and Variables for Predicates.
                                                             (line   24)
* compfile:                              Functions and Variables for Function Definition.
                                                             (line  151)
* compile:                               Functions and Variables for Function Definition.
                                                             (line  169)
* compile_file:                          Functions and Variables for Function Definition.
                                                             (line 1336)
* complement_graph:                      Functions and Variables for graphs.
                                                             (line   96)
* complete_bipartite_graph:              Functions and Variables for graphs.
                                                             (line  100)
* complete_graph:                        Functions and Variables for graphs.
                                                             (line  104)
* complex:                               Functions and Variables for Properties.
                                                             (line  550)
* Complex infinity:                      Functions and Variables for Constants.
                                                             (line   41)
* complex_number_p:                      Functions and Variables for to_poly_solve.
                                                             (line  209)
* components:                            Functions and Variables for itensor.
                                                             (line  198)
* compose_functions:                     Functions and Variables for to_poly_solve.
                                                             (line  232)
* concan:                                Functions and Variables for itensor.
                                                             (line  518)
* concat:                                Functions and Variables for Strings.
                                                             (line    7)
* conditional evaluation:                Functions and Variables for to_poly_solve.
                                                             (line   91)
* conjugate:                             Functions for Complex Numbers.
                                                             (line  104)
* conmetderiv:                           Functions and Variables for itensor.
                                                             (line  788)
* connect_vertices:                      Functions and Variables for graphs.
                                                             (line 1283)
* connected_components:                  Functions and Variables for graphs.
                                                             (line  466)
* cons:                                  Functions and Variables for Lists.
                                                             (line   61)
* constant:                              Functions and Variables for Properties.
                                                             (line   43)
* constantp:                             Functions and Variables for Properties.
                                                             (line   62)
* constituent:                           Functions and Variables for characters.
                                                             (line   61)
* constvalue:                            Functions and Variables for ezunits.
                                                             (line  257)
* cont2part:                             Functions and Variables for Symmetries.
                                                             (line  223)
* content:                               Functions and Variables for Polynomials.
                                                             (line  145)
* context:                               Functions and Variables for Facts.
                                                             (line  229)
* contexts:                              Functions and Variables for Facts.
                                                             (line  245)
* continuous_freq:                       Functions and Variables for data manipulation.
                                                             (line    8)
* contortion:                            Functions and Variables for ctensor.
                                                             (line  664)
* contour:                               Functions and Variables for draw.
                                                             (line  514)
* contour_levels:                        Functions and Variables for draw.
                                                             (line  545)
* contour_plot:                          Functions and Variables for Plotting.
                                                             (line    8)
* contract <1>:                          Functions and Variables for itensor.
                                                             (line  182)
* contract:                              Functions and Variables for Symmetries.
                                                             (line  235)
* contract_edge:                         Functions and Variables for graphs.
                                                             (line 1302)
* Contraction with a vector:             Functions and Variables for itensor.
                                                             (line 1428)
* contragrad:                            Functions and Variables for ctensor.
                                                             (line  737)
* contrib_ode:                           Functions and Variables for contrib_ode.
                                                             (line    7)
* convert:                               Functions and Variables for Units.
                                                             (line  144)
* coord:                                 Functions and Variables for itensor.
                                                             (line  766)
* copy:                                  Functions and Variables for linearalgebra.
                                                             (line   45)
* copy_graph:                            Functions and Variables for graphs.
                                                             (line   67)
* copylist:                              Functions and Variables for Lists.
                                                             (line   67)
* copymatrix:                            Functions and Variables for Matrices and Linear Algebra.
                                                             (line  148)
* cor:                                   Functions and Variables for descriptive statistics.
                                                             (line  604)
* cos:                                   Functions and Variables for Trigonometric.
                                                             (line  146)
* cosh:                                  Functions and Variables for Trigonometric.
                                                             (line  150)
* cosnpiflag:                            Functions and Variables for Fourier series.
                                                             (line   63)
* cot:                                   Functions and Variables for Trigonometric.
                                                             (line  154)
* coth:                                  Functions and Variables for Trigonometric.
                                                             (line  158)
* cov:                                   Functions and Variables for descriptive statistics.
                                                             (line  499)
* cov1:                                  Functions and Variables for descriptive statistics.
                                                             (line  529)
* covdiff:                               Functions and Variables for itensor.
                                                             (line  938)
* covect:                                Functions and Variables for Matrices and Linear Algebra.
                                                             (line  122)
* covers:                                Package functs.     (line  180)
* create_graph:                          Functions and Variables for graphs.
                                                             (line   10)
* create_list:                           Functions and Variables for Lists.
                                                             (line   72)
* csc:                                   Functions and Variables for Trigonometric.
                                                             (line  162)
* csch:                                  Functions and Variables for Trigonometric.
                                                             (line  166)
* csetup:                                Functions and Variables for ctensor.
                                                             (line   10)
* cspline:                               Functions and Variables for interpol.
                                                             (line  177)
* ct_coords:                             Functions and Variables for ctensor.
                                                             (line 1276)
* ct_coordsys:                           Functions and Variables for ctensor.
                                                             (line   36)
* ctaylor:                               Functions and Variables for ctensor.
                                                             (line  341)
* ctaypov:                               Functions and Variables for ctensor.
                                                             (line 1133)
* ctaypt:                                Functions and Variables for ctensor.
                                                             (line 1138)
* ctayswitch:                            Functions and Variables for ctensor.
                                                             (line 1122)
* ctayvar:                               Functions and Variables for ctensor.
                                                             (line 1128)
* ctorsion_flag:                         Functions and Variables for ctensor.
                                                             (line 1109)
* ctransform:                            Functions and Variables for ctensor.
                                                             (line  677)
* ctranspose:                            Functions and Variables for linearalgebra.
                                                             (line   80)
* ctrgsimp:                              Functions and Variables for ctensor.
                                                             (line 1094)
* cube_graph:                            Functions and Variables for graphs.
                                                             (line  120)
* cuboctahedron_graph:                   Functions and Variables for graphs.
                                                             (line  116)
* cunlisp:                               Functions and Variables for characters.
                                                             (line   74)
* Current input expression:              Functions and Variables for Command Line.
                                                             (line    7)
* current_let_rule_package:              Functions and Variables for Rules and Patterns.
                                                             (line   52)
* cv:                                    Functions and Variables for descriptive statistics.
                                                             (line  168)
* cycle_digraph:                         Functions and Variables for graphs.
                                                             (line  108)
* cycle_graph:                           Functions and Variables for graphs.
                                                             (line  112)
* cylindrical:                           Functions and Variables for draw.
                                                             (line 2660)
* data_file_name:                        Functions and Variables for draw.
                                                             (line  597)
* days360:                               Functions and Variables for finance.
                                                             (line    7)
* dblint:                                Functions and Variables for Integration.
                                                             (line   60)
* deactivate:                            Functions and Variables for Facts.
                                                             (line  279)
* debugmode:                             Functions and Variables for Debugging.
                                                             (line    7)
* declare:                               Functions and Variables for Properties.
                                                             (line   98)
* declare_constvalue:                    Functions and Variables for ezunits.
                                                             (line  258)
* declare_dimensions:                    Functions and Variables for ezunits.
                                                             (line  491)
* declare_fundamental_dimensions:        Functions and Variables for ezunits.
                                                             (line  521)
* declare_fundamental_units:             Functions and Variables for ezunits.
                                                             (line  553)
* declare_qty:                           Functions and Variables for ezunits.
                                                             (line  363)
* declare_translated:                    Functions and Variables for Function Definition.
                                                             (line 1363)
* declare_unit_conversion:               Functions and Variables for ezunits.
                                                             (line  448)
* declare_units:                         Functions and Variables for ezunits.
                                                             (line  302)
* declare_weights:                       Functions and Variables for Affine.
                                                             (line   62)
* decreasing:                            Functions and Variables for Properties.
                                                             (line  242)
* decsym:                                Functions and Variables for itensor.
                                                             (line  534)
* default_let_rule_package:              Functions and Variables for Rules and Patterns.
                                                             (line   65)
* defcon:                                Functions and Variables for itensor.
                                                             (line  157)
* define:                                Functions and Variables for Function Definition.
                                                             (line  184)
* define_variable:                       Functions and Variables for Function Definition.
                                                             (line  274)
* defint:                                Functions and Variables for Integration.
                                                             (line  106)
* defmatch:                              Functions and Variables for Rules and Patterns.
                                                             (line   73)
* defrule:                               Functions and Variables for Rules and Patterns.
                                                             (line  175)
* defstruct:                             Functions and Variables for Structures.
                                                             (line   13)
* deftaylor:                             Functions and Variables for Series.
                                                             (line   41)
* degree_sequence:                       Functions and Variables for graphs.
                                                             (line  506)
* del:                                   Functions and Variables for Differentiation.
                                                             (line  231)
* delay:                                 Functions and Variables for draw.
                                                             (line  610)
* delete:                                Functions and Variables for Lists.
                                                             (line  102)
* deleten:                               Functions and Variables for ctensor.
                                                             (line 1067)
* delta:                                 Functions and Variables for Differentiation.
                                                             (line  251)
* demo:                                  Functions and Variables for Help.
                                                             (line   33)
* demoivre:                              Functions and Variables for Simplification.
                                                             (line   70)
* denom:                                 Functions and Variables for Polynomials.
                                                             (line  158)
* dependencies:                          Functions and Variables for Differentiation.
                                                             (line  266)
* depends:                               Functions and Variables for Differentiation.
                                                             (line  277)
* derivabbrev:                           Functions and Variables for Differentiation.
                                                             (line  333)
* derivdegree:                           Functions and Variables for Differentiation.
                                                             (line  341)
* derivlist:                             Functions and Variables for Differentiation.
                                                             (line  358)
* derivsubst:                            Functions and Variables for Differentiation.
                                                             (line  363)
* describe:                              Functions and Variables for Help.
                                                             (line   72)
* desolve:                               Functions and Variables for Differential Equations.
                                                             (line   19)
* determinant:                           Functions and Variables for Matrices and Linear Algebra.
                                                             (line  159)
* detout:                                Functions and Variables for Matrices and Linear Algebra.
                                                             (line  170)
* dfloat:                                Functions and Variables for to_poly_solve.
                                                             (line  284)
* dgauss_a:                              Functions and Variables for contrib_ode.
                                                             (line  105)
* dgauss_b:                              Functions and Variables for contrib_ode.
                                                             (line  110)
* dgeev:                                 Functions and Variables for lapack.
                                                             (line    8)
* dgemm:                                 Functions and Variables for lapack.
                                                             (line  299)
* dgeqrf:                                Functions and Variables for lapack.
                                                             (line   73)
* dgesv:                                 Functions and Variables for lapack.
                                                             (line  104)
* dgesvd:                                Functions and Variables for lapack.
                                                             (line  177)
* diag:                                  Functions and Variables for diag.
                                                             (line    7)
* diag_matrix:                           Functions and Variables for linearalgebra.
                                                             (line   86)
* diagmatrix:                            Functions and Variables for Matrices and Linear Algebra.
                                                             (line  198)
* diagmatrixp:                           Functions and Variables for ctensor.
                                                             (line  835)
* diagmetric:                            Functions and Variables for ctensor.
                                                             (line 1083)
* diameter:                              Functions and Variables for graphs.
                                                             (line  477)
* diff <1>:                              Functions and Variables for Differentiation.
                                                             (line  373)
* diff <2>:                              Functions and Variables for itensor.
                                                             (line  610)
* diff:                                  Functions and Variables for Differentiation.
                                                             (line  372)
* digitcharp:                            Functions and Variables for characters.
                                                             (line   79)
* dim:                                   Functions and Variables for ctensor.
                                                             (line 1075)
* dimacs_export:                         Functions and Variables for graphs.
                                                             (line 1355)
* dimacs_import:                         Functions and Variables for graphs.
                                                             (line 1361)
* dimension:                             Functions and Variables for Equations.
                                                             (line  315)
* dimensionless:                         Functions and Variables for ezunits.
                                                             (line  672)
* dimensions <1>:                        Functions and Variables for draw.
                                                             (line  638)
* dimensions:                            Functions and Variables for ezunits.
                                                             (line  593)
* dimensions_as_list:                    Functions and Variables for ezunits.
                                                             (line  594)
* direct:                                Functions and Variables for Symmetries.
                                                             (line  295)
* discrete_freq:                         Functions and Variables for data manipulation.
                                                             (line   50)
* disjoin:                               Functions and Variables for Sets.
                                                             (line   89)
* disjointp:                             Functions and Variables for Sets.
                                                             (line  109)
* disolate:                              Functions and Variables for Expressions.
                                                             (line  144)
* disp:                                  Functions and Variables for Display.
                                                             (line   40)
* dispcon:                               Functions and Variables for itensor.
                                                             (line   10)
* dispflag:                              Functions and Variables for Equations.
                                                             (line  321)
* dispform:                              Functions and Variables for Expressions.
                                                             (line  154)
* dispfun:                               Functions and Variables for Function Definition.
                                                             (line  367)
* dispJordan:                            Functions and Variables for diag.
                                                             (line   98)
* display:                               Functions and Variables for Display.
                                                             (line   63)
* display2d:                             Functions and Variables for Display.
                                                             (line   89)
* display_format_internal:               Functions and Variables for Display.
                                                             (line  110)
* disprule:                              Functions and Variables for Rules and Patterns.
                                                             (line  191)
* dispterms:                             Functions and Variables for Display.
                                                             (line  134)
* distrib:                               Functions and Variables for Simplification.
                                                             (line   86)
* distribute_over:                       Functions and Variables for Simplification.
                                                             (line  108)
* divide:                                Functions and Variables for Polynomials.
                                                             (line  162)
* Division:                              Arithmetic operators.
                                                             (line   10)
* divisors:                              Functions and Variables for Sets.
                                                             (line  122)
* divsum:                                Functions and Variables for Number Theory.
                                                             (line  216)
* dkummer_m:                             Functions and Variables for contrib_ode.
                                                             (line  133)
* dkummer_u:                             Functions and Variables for contrib_ode.
                                                             (line  137)
* dlange:                                Functions and Variables for lapack.
                                                             (line  277)
* do:                                    Functions and Variables for Program Flow.
                                                             (line   54)
* doallmxops:                            Functions and Variables for Matrices and Linear Algebra.
                                                             (line  211)
* dodecahedron_graph:                    Functions and Variables for graphs.
                                                             (line  124)
* domain:                                Functions and Variables for Simplification.
                                                             (line  156)
* domxexpt:                              Functions and Variables for Matrices and Linear Algebra.
                                                             (line  219)
* domxmxops:                             Functions and Variables for Matrices and Linear Algebra.
                                                             (line  252)
* domxnctimes:                           Functions and Variables for Matrices and Linear Algebra.
                                                             (line  260)
* dontfactor:                            Functions and Variables for Matrices and Linear Algebra.
                                                             (line  267)
* doscmxops:                             Functions and Variables for Matrices and Linear Algebra.
                                                             (line  278)
* doscmxplus:                            Functions and Variables for Matrices and Linear Algebra.
                                                             (line  285)
* dot0nscsimp:                           Functions and Variables for Matrices and Linear Algebra.
                                                             (line  292)
* dot0simp:                              Functions and Variables for Matrices and Linear Algebra.
                                                             (line  299)
* dot1simp:                              Functions and Variables for Matrices and Linear Algebra.
                                                             (line  306)
* dotassoc:                              Functions and Variables for Matrices and Linear Algebra.
                                                             (line  313)
* dotconstrules:                         Functions and Variables for Matrices and Linear Algebra.
                                                             (line  320)
* dotdistrib:                            Functions and Variables for Matrices and Linear Algebra.
                                                             (line  330)
* dotexptsimp:                           Functions and Variables for Matrices and Linear Algebra.
                                                             (line  337)
* dotident:                              Functions and Variables for Matrices and Linear Algebra.
                                                             (line  344)
* dotproduct:                            Functions and Variables for linearalgebra.
                                                             (line  108)
* dotscrules:                            Functions and Variables for Matrices and Linear Algebra.
                                                             (line  350)
* dotsimp:                               Functions and Variables for Affine.
                                                             (line   76)
* Double factorial:                      Combinatorial Functions.
                                                             (line    7)
* dpart:                                 Functions and Variables for Expressions.
                                                             (line  207)
* draw:                                  Functions and Variables for draw.
                                                             (line   55)
* draw2d:                                Functions and Variables for draw.
                                                             (line  103)
* draw3d:                                Functions and Variables for draw.
                                                             (line  114)
* draw_file:                             Functions and Variables for draw.
                                                             (line  125)
* draw_graph:                            Functions and Variables for graphs.
                                                             (line 1405)
* draw_graph_program:                    Functions and Variables for graphs.
                                                             (line 1509)
* draw_realpart:                         Functions and Variables for draw.
                                                             (line  683)
* drawdf:                                Functions and Variables for drawdf.
                                                             (line   18)
* dscalar <1>:                           Functions and Variables for Differentiation.
                                                             (line  453)
* dscalar:                               Functions and Variables for ctensor.
                                                             (line  764)
* e:                                     Functions and Variables for Constants.
                                                             (line    7)
* echelon:                               Functions and Variables for Matrices and Linear Algebra.
                                                             (line  357)
* edge_color:                            Functions and Variables for graphs.
                                                             (line 1589)
* edge_coloring:                         Functions and Variables for graphs.
                                                             (line  486)
* edge_connectivity:                     Functions and Variables for graphs.
                                                             (line  515)
* edge_partition:                        Functions and Variables for graphs.
                                                             (line 1620)
* edge_type:                             Functions and Variables for graphs.
                                                             (line 1597)
* edge_width:                            Functions and Variables for graphs.
                                                             (line 1593)
* edges:                                 Functions and Variables for graphs.
                                                             (line  521)
* eigens_by_jacobi:                      Functions and Variables for linearalgebra.
                                                             (line  114)
* eigenvalues:                           Functions and Variables for Matrices and Linear Algebra.
                                                             (line  388)
* eigenvectors:                          Functions and Variables for Matrices and Linear Algebra.
                                                             (line  417)
* eighth:                                Functions and Variables for Lists.
                                                             (line  165)
* einstein:                              Functions and Variables for ctensor.
                                                             (line  235)
* eivals:                                Functions and Variables for Matrices and Linear Algebra.
                                                             (line  389)
* eivects:                               Functions and Variables for Matrices and Linear Algebra.
                                                             (line  418)
* elapsed_real_time:                     Functions and Variables for Runtime Environment.
                                                             (line  160)
* elapsed_run_time:                      Functions and Variables for Runtime Environment.
                                                             (line  176)
* ele2comp:                              Functions and Variables for Symmetries.
                                                             (line   30)
* ele2polynome:                          Functions and Variables for Symmetries.
                                                             (line  525)
* ele2pui:                               Functions and Variables for Symmetries.
                                                             (line   23)
* elem:                                  Functions and Variables for Symmetries.
                                                             (line   37)
* elementp:                              Functions and Variables for Sets.
                                                             (line  165)
* elevation:                             Plotting Options.   (line   80)
* elevation_grid:                        Functions and Variables for draw.
                                                             (line 2681)
* elim:                                  Functions and Variables for to_poly_solve.
                                                             (line  315)
* elim_allbut:                           Functions and Variables for to_poly_solve.
                                                             (line  379)
* eliminate:                             Functions and Variables for Polynomials.
                                                             (line  179)
* eliminate_using:                       Functions and Variables for to_poly_solve.
                                                             (line  400)
* ellipse:                               Functions and Variables for draw.
                                                             (line 2709)
* elliptic_e:                            Functions and Variables for Elliptic Integrals.
                                                             (line   15)
* elliptic_ec:                           Functions and Variables for Elliptic Integrals.
                                                             (line   55)
* elliptic_eu:                           Functions and Variables for Elliptic Integrals.
                                                             (line   23)
* elliptic_f:                            Functions and Variables for Elliptic Integrals.
                                                             (line    7)
* elliptic_kc:                           Functions and Variables for Elliptic Integrals.
                                                             (line   46)
* elliptic_pi:                           Functions and Variables for Elliptic Integrals.
                                                             (line   38)
* ematrix:                               Functions and Variables for Matrices and Linear Algebra.
                                                             (line  528)
* empty_graph:                           Functions and Variables for graphs.
                                                             (line  128)
* emptyp:                                Functions and Variables for Sets.
                                                             (line  178)
* endcons:                               Functions and Variables for Lists.
                                                             (line  170)
* enhanced3d:                            Functions and Variables for draw.
                                                             (line  707)
* entermatrix:                           Functions and Variables for Matrices and Linear Algebra.
                                                             (line  533)
* entertensor:                           Functions and Variables for itensor.
                                                             (line   17)
* entier:                                Functions for Numbers.
                                                             (line  140)
* epsilon_lp:                            Functions and Variables for simplex.
                                                             (line    7)
* equal:                                 Functions and Variables for Predicates.
                                                             (line   55)
* Equal (syntactic equality):            Operators for Equations.
                                                             (line   31)
* equalp:                                Functions and Variables for Fourier series.
                                                             (line    7)
* Equation operator:                     Operators for Equations.
                                                             (line   31)
* equiv_classes:                         Functions and Variables for Sets.
                                                             (line  190)
* erf:                                   Error Function.     (line   10)
* erf_generalized:                       Error Function.     (line   28)
* erf_representation:                    Error Function.     (line   58)
* erfc:                                  Error Function.     (line   16)
* erfflag:                               Functions and Variables for Integration.
                                                             (line  119)
* erfi:                                  Error Function.     (line   22)
* errcatch:                              Functions and Variables for Program Flow.
                                                             (line  244)
* error:                                 Functions and Variables for Program Flow.
                                                             (line  257)
* error_size:                            Functions and Variables for Program Flow.
                                                             (line  271)
* error_syms:                            Functions and Variables for Program Flow.
                                                             (line  316)
* error_type:                            Functions and Variables for draw.
                                                             (line  846)
* errormsg:                              Functions and Variables for Program Flow.
                                                             (line  332)
* errors:                                Functions and Variables for draw.
                                                             (line 2741)
* euler:                                 Functions and Variables for Number Theory.
                                                             (line  233)
* Euler's number:                        Functions and Variables for Constants.
                                                             (line    7)
* Euler-Mascheroni constant:             Functions and Variables for Constants.
                                                             (line   22)
* ev:                                    Functions and Variables for Evaluation.
                                                             (line  238)
* ev_point:                              Functions and Variables for zeilberger.
                                                             (line  157)
* eval:                                  Functions and Variables for Evaluation.
                                                             (line  428)
* eval_string:                           Functions and Variables for strings.
                                                             (line   28)
* even:                                  Functions and Variables for Properties.
                                                             (line  262)
* evenfun:                               Functions and Variables for Simplification.
                                                             (line  163)
* evenp:                                 Functions and Variables for Numbers.
                                                             (line   58)
* every:                                 Functions and Variables for Sets.
                                                             (line  226)
* evflag:                                Functions and Variables for Evaluation.
                                                             (line  446)
* evfun:                                 Functions and Variables for Evaluation.
                                                             (line  511)
* evolution:                             Functions and Variables for dynamics.
                                                             (line   18)
* evolution2d:                           Functions and Variables for dynamics.
                                                             (line   32)
* evundiff:                              Functions and Variables for itensor.
                                                             (line  683)
* example:                               Functions and Variables for Help.
                                                             (line  134)
* exp:                                   Root Exponential and Logarithmic Functions.
                                                             (line   46)
* expand:                                Functions and Variables for Simplification.
                                                             (line  183)
* expandwrt:                             Functions and Variables for Simplification.
                                                             (line  275)
* expandwrt_denom:                       Functions and Variables for Simplification.
                                                             (line  288)
* expandwrt_factored:                    Functions and Variables for Simplification.
                                                             (line  298)
* expintegral_chi:                       Exponential Integrals.
                                                             (line   38)
* expintegral_ci:                        Exponential Integrals.
                                                             (line   30)
* expintegral_e:                         Exponential Integrals.
                                                             (line   22)
* expintegral_e1:                        Exponential Integrals.
                                                             (line   10)
* expintegral_ei:                        Exponential Integrals.
                                                             (line   14)
* expintegral_li:                        Exponential Integrals.
                                                             (line   18)
* expintegral_shi:                       Exponential Integrals.
                                                             (line   34)
* expintegral_si:                        Exponential Integrals.
                                                             (line   26)
* expintexpand:                          Exponential Integrals.
                                                             (line   50)
* expintrep:                             Exponential Integrals.
                                                             (line   42)
* explicit:                              Functions and Variables for draw.
                                                             (line 2781)
* explose:                               Functions and Variables for Symmetries.
                                                             (line  253)
* expon:                                 Functions and Variables for Simplification.
                                                             (line  306)
* exponentialize:                        Functions and Variables for Simplification.
                                                             (line  316)
* Exponentiation:                        Arithmetic operators.
                                                             (line   11)
* expop:                                 Functions and Variables for Simplification.
                                                             (line  330)
* express:                               Functions and Variables for Differentiation.
                                                             (line  459)
* expt:                                  Functions and Variables for Display.
                                                             (line  161)
* exptdispflag:                          Functions and Variables for Display.
                                                             (line  169)
* exptisolate:                           Functions and Variables for Expressions.
                                                             (line  222)
* exptsubst:                             Functions and Variables for Expressions.
                                                             (line  229)
* exsec:                                 Package functs.     (line  186)
* extdiff:                               Functions and Variables for itensor.
                                                             (line 1459)
* extract_linear_equations:              Functions and Variables for Affine.
                                                             (line  126)
* extremal_subset:                       Functions and Variables for Sets.
                                                             (line  294)
* ezgcd:                                 Functions and Variables for Polynomials.
                                                             (line  207)
* f90:                                   Functions and Variables for f90.
                                                             (line    7)
* facexpand:                             Functions and Variables for Polynomials.
                                                             (line  239)
* facsum:                                Package facexp.     (line   28)
* facsum_combine:                        Package facexp.     (line   83)
* factcomb:                              Combinatorial Functions.
                                                             (line   48)
* factlim:                               Combinatorial Functions.
                                                             (line  145)
* factor:                                Functions and Variables for Polynomials.
                                                             (line  248)
* factorfacsum:                          Package facexp.     (line   99)
* factorflag:                            Functions and Variables for Polynomials.
                                                             (line  379)
* factorial:                             Combinatorial Functions.
                                                             (line   57)
* factorial_expand:                      Combinatorial Functions.
                                                             (line  152)
* factorout:                             Functions and Variables for Polynomials.
                                                             (line  386)
* factors_only:                          Functions and Variables for Number Theory.
                                                             (line  242)
* factorsum:                             Functions and Variables for Polynomials.
                                                             (line  405)
* facts:                                 Functions and Variables for Facts.
                                                             (line  284)
* false:                                 Functions and Variables for Constants.
                                                             (line   17)
* fast_central_elements:                 Functions and Variables for Affine.
                                                             (line   84)
* fast_linsolve:                         Functions and Variables for Affine.
                                                             (line    8)
* fasttimes:                             Functions and Variables for Polynomials.
                                                             (line  425)
* fb:                                    Functions and Variables for ctensor.
                                                             (line 1226)
* feature:                               Functions and Variables for Properties.
                                                             (line  283)
* featurep:                              Functions and Variables for Properties.
                                                             (line  292)
* features:                              Functions and Variables for Properties.
                                                             (line  309)
* fernfale:                              Definitions for IFS fractals.
                                                             (line   43)
* Fetch documentation:                   Functions and Variables for Command Line.
                                                             (line  183)
* Fetch documentation (inexact search):  Functions and Variables for Command Line.
                                                             (line  196)
* fft:                                   Functions and Variables for fast Fourier transform.
                                                             (line  102)
* fib:                                   Functions and Variables for Number Theory.
                                                             (line  253)
* fibtophi:                              Functions and Variables for Number Theory.
                                                             (line  265)
* fifth:                                 Functions and Variables for Lists.
                                                             (line  176)
* file_name <1>:                         Functions and Variables for graphs.
                                                             (line 1662)
* file_name:                             Functions and Variables for draw.
                                                             (line  856)
* file_output_append:                    Functions and Variables for File Input and Output.
                                                             (line   88)
* file_search:                           Functions and Variables for File Input and Output.
                                                             (line  112)
* file_search_demo:                      Functions and Variables for File Input and Output.
                                                             (line  154)
* file_search_lisp:                      Functions and Variables for File Input and Output.
                                                             (line  153)
* file_search_maxima:                    Functions and Variables for File Input and Output.
                                                             (line  152)
* file_search_tests:                     Functions and Variables for File Input and Output.
                                                             (line  156)
* file_search_usage:                     Functions and Variables for File Input and Output.
                                                             (line  155)
* file_type:                             Functions and Variables for File Input and Output.
                                                             (line  190)
* file_type_lisp:                        Functions and Variables for File Input and Output.
                                                             (line  214)
* file_type_maxima:                      Functions and Variables for File Input and Output.
                                                             (line  223)
* filename_merge:                        Functions and Variables for File Input and Output.
                                                             (line  103)
* fill_color:                            Functions and Variables for draw.
                                                             (line  877)
* fill_density:                          Functions and Variables for draw.
                                                             (line  886)
* fillarray:                             Functions and Variables for Arrays.
                                                             (line  217)
* filled_func:                           Functions and Variables for draw.
                                                             (line  894)
* find_root:                             Functions and Variables for fast Fourier transform.
                                                             (line  233)
* find_root_abs:                         Functions and Variables for fast Fourier transform.
                                                             (line  238)
* find_root_error:                       Functions and Variables for fast Fourier transform.
                                                             (line  237)
* find_root_rel:                         Functions and Variables for fast Fourier transform.
                                                             (line  239)
* findde:                                Functions and Variables for ctensor.
                                                             (line  684)
* first:                                 Functions and Variables for Lists.
                                                             (line  181)
* fix:                                   Functions for Numbers.
                                                             (line  191)
* fixed_vertices:                        Functions and Variables for graphs.
                                                             (line 1675)
* flatten:                               Functions and Variables for Sets.
                                                             (line  314)
* flength:                               Functions and Variables for input and output.
                                                             (line   30)
* flipflag:                              Functions and Variables for itensor.
                                                             (line  144)
* float:                                 Functions and Variables for Numbers.
                                                             (line   63)
* float2bf:                              Functions and Variables for Numbers.
                                                             (line   70)
* floatnump:                             Functions and Variables for Numbers.
                                                             (line   78)
* floor:                                 Functions for Numbers.
                                                             (line  146)
* flower_snark:                          Functions and Variables for graphs.
                                                             (line  132)
* flush:                                 Functions and Variables for itensor.
                                                             (line  739)
* flush1deriv:                           Functions and Variables for itensor.
                                                             (line  886)
* flushd:                                Functions and Variables for itensor.
                                                             (line  744)
* flushnd:                               Functions and Variables for itensor.
                                                             (line  749)
* fmin_cobyla:                           Functions and Variables for cobyla.
                                                             (line    7)
* font:                                  Functions and Variables for draw.
                                                             (line  927)
* font_size:                             Functions and Variables for draw.
                                                             (line 1014)
* for:                                   Functions and Variables for Program Flow.
                                                             (line  373)
* forget:                                Functions and Variables for Facts.
                                                             (line  295)
* fortindent:                            Functions and Variables for Fortran Output.
                                                             (line    7)
* fortran:                               Functions and Variables for Fortran Output.
                                                             (line   16)
* fortspaces:                            Functions and Variables for Fortran Output.
                                                             (line   73)
* fourcos:                               Functions and Variables for Fourier series.
                                                             (line   75)
* fourexpand:                            Functions and Variables for Fourier series.
                                                             (line   69)
* fourier:                               Functions and Variables for Fourier series.
                                                             (line   47)
* fourier_elim:                          Functions and Variables for to_poly_solve.
                                                             (line  432)
* fourint:                               Functions and Variables for Fourier series.
                                                             (line   90)
* fourintcos:                            Functions and Variables for Fourier series.
                                                             (line   95)
* fourintsin:                            Functions and Variables for Fourier series.
                                                             (line  100)
* foursimp:                              Functions and Variables for Fourier series.
                                                             (line   52)
* foursin:                               Functions and Variables for Fourier series.
                                                             (line   80)
* fourth:                                Functions and Variables for Lists.
                                                             (line  195)
* fposition:                             Functions and Variables for input and output.
                                                             (line   35)
* fpprec:                                Functions and Variables for Numbers.
                                                             (line   83)
* fpprintprec:                           Functions and Variables for Numbers.
                                                             (line   93)
* frame_bracket:                         Functions and Variables for ctensor.
                                                             (line  472)
* freeof:                                Functions and Variables for Expressions.
                                                             (line  236)
* freshline:                             Functions and Variables for input and output.
                                                             (line   42)
* fresnel_c:                             Error Function.     (line   32)
* fresnel_s:                             Error Function.     (line   45)
* from_adjacency_matrix:                 Functions and Variables for graphs.
                                                             (line  142)
* frucht_graph:                          Functions and Variables for graphs.
                                                             (line  146)
* full_listify:                          Functions and Variables for Sets.
                                                             (line  381)
* fullmap:                               Functions and Variables for Function Definition.
                                                             (line  451)
* fullmapl:                              Functions and Variables for Function Definition.
                                                             (line  470)
* fullratsimp:                           Functions and Variables for Polynomials.
                                                             (line  434)
* fullratsubst:                          Functions and Variables for Polynomials.
                                                             (line  473)
* fullsetify:                            Functions and Variables for Sets.
                                                             (line  396)
* funcsolve:                             Functions and Variables for Equations.
                                                             (line  330)
* Function definition operator:          Assignment operators.
                                                             (line  190)
* functions:                             Functions and Variables for Function Definition.
                                                             (line  480)
* fundamental_dimensions:                Functions and Variables for ezunits.
                                                             (line  523)
* fundamental_units:                     Functions and Variables for ezunits.
                                                             (line  637)
* fundef:                                Functions and Variables for Function Definition.
                                                             (line  526)
* funmake:                               Functions and Variables for Function Definition.
                                                             (line  546)
* funp:                                  Functions and Variables for Fourier series.
                                                             (line   23)
* fv:                                    Functions and Variables for finance.
                                                             (line   18)
* gamma:                                 Gamma and factorial Functions.
                                                             (line   33)
* gamma_incomplete:                      Gamma and factorial Functions.
                                                             (line  121)
* gamma_incomplete_generalized:          Gamma and factorial Functions.
                                                             (line  142)
* gamma_incomplete_regularized:          Gamma and factorial Functions.
                                                             (line  133)
* gammalim:                              Gamma and factorial Functions.
                                                             (line  155)
* gauss_a:                               Functions and Variables for contrib_ode.
                                                             (line   88)
* gauss_b:                               Functions and Variables for contrib_ode.
                                                             (line  101)
* gaussprob:                             Package functs.     (line  154)
* gcd:                                   Functions and Variables for Polynomials.
                                                             (line  530)
* gcdex:                                 Functions and Variables for Polynomials.
                                                             (line  579)
* gcdivide:                              Package functs.     (line   76)
* gcfac:                                 Package scifac.     (line    7)
* gcfactor:                              Functions and Variables for Polynomials.
                                                             (line  619)
* gd:                                    Package functs.     (line  161)
* gdet:                                  Functions and Variables for ctensor.
                                                             (line 1143)
* gen_laguerre:                          Functions and Variables for orthogonal polynomials.
                                                             (line   34)
* genfact:                               Combinatorial Functions.
                                                             (line  160)
* genindex:                              Functions and Variables for Miscellaneous Options.
                                                             (line   15)
* genmatrix:                             Functions and Variables for Matrices and Linear Algebra.
                                                             (line  574)
* gensumnum:                             Functions and Variables for Miscellaneous Options.
                                                             (line   22)
* gensym:                                Functions and Variables for Miscellaneous Options.
                                                             (line   31)
* geo_amortization:                      Functions and Variables for finance.
                                                             (line  160)
* geo_annuity_fv:                        Functions and Variables for finance.
                                                             (line   93)
* geo_annuity_pv:                        Functions and Variables for finance.
                                                             (line   80)
* geomap:                                Functions and Variables for worldmap.
                                                             (line  154)
* geometric:                             Package functs.     (line  126)
* geometric_mean:                        Functions and Variables for descriptive statistics.
                                                             (line  377)
* geosum:                                Package functs.     (line  146)
* get:                                   Functions and Variables for Properties.
                                                             (line  349)
* get_edge_weight:                       Functions and Variables for graphs.
                                                             (line  531)
* get_lu_factors:                        Functions and Variables for linearalgebra.
                                                             (line  173)
* get_pixel:                             Functions and Variables for pictures.
                                                             (line    7)
* get_plot_option:                       Functions and Variables for Plotting.
                                                             (line   38)
* get_tex_environment:                   Functions and Variables for TeX Output.
                                                             (line  209)
* get_tex_environment_default:           Functions and Variables for TeX Output.
                                                             (line  249)
* get_vertex_label:                      Functions and Variables for graphs.
                                                             (line  549)
* gfactor:                               Functions and Variables for Polynomials.
                                                             (line  626)
* gfactorsum:                            Functions and Variables for Polynomials.
                                                             (line  637)
* ggf:                                   Functions and Variables for ggf.
                                                             (line   38)
* GGFCFMAX:                              Functions and Variables for ggf.
                                                             (line   23)
* GGFINFINITY:                           Functions and Variables for ggf.
                                                             (line    7)
* girth:                                 Functions and Variables for graphs.
                                                             (line  622)
* global_variances:                      Functions and Variables for descriptive statistics.
                                                             (line  559)
* globalsolve:                           Functions and Variables for Equations.
                                                             (line  352)
* gnuplot_close:                         Gnuplot_pipes Format Functions.
                                                             (line   13)
* gnuplot_curve_styles:                  Gnuplot Options.    (line   75)
* gnuplot_curve_titles:                  Gnuplot Options.    (line   70)
* gnuplot_default_term_command:          Gnuplot Options.    (line   79)
* gnuplot_dumb_term_command:             Gnuplot Options.    (line   84)
* gnuplot_file_name:                     Functions and Variables for draw.
                                                             (line 1028)
* gnuplot_out_file:                      Gnuplot Options.    (line   47)
* gnuplot_pm3d:                          Gnuplot Options.    (line   57)
* gnuplot_preamble:                      Gnuplot Options.    (line   62)
* gnuplot_ps_term_command:               Gnuplot Options.    (line   90)
* gnuplot_replot:                        Gnuplot_pipes Format Functions.
                                                             (line   24)
* gnuplot_reset:                         Gnuplot_pipes Format Functions.
                                                             (line   30)
* gnuplot_restart:                       Gnuplot_pipes Format Functions.
                                                             (line   18)
* gnuplot_start:                         Gnuplot_pipes Format Functions.
                                                             (line    7)
* gnuplot_term:                          Gnuplot Options.    (line   14)
* go:                                    Functions and Variables for Program Flow.
                                                             (line  378)
* Golden mean:                           Functions and Variables for Constants.
                                                             (line   49)
* Gosper:                                Functions and Variables for zeilberger.
                                                             (line   12)
* Gosper_in_Zeilberger:                  Functions and Variables for zeilberger.
                                                             (line  124)
* GosperSum:                             Functions and Variables for zeilberger.
                                                             (line   18)
* gr2d:                                  Functions and Variables for draw.
                                                             (line   11)
* gr3d:                                  Functions and Variables for draw.
                                                             (line   31)
* gradef:                                Functions and Variables for Differentiation.
                                                             (line  521)
* gradefs:                               Functions and Variables for Differentiation.
                                                             (line  566)
* gramschmidt:                           Functions and Variables for Matrices and Linear Algebra.
                                                             (line  633)
* graph6_decode:                         Functions and Variables for graphs.
                                                             (line 1365)
* graph6_encode:                         Functions and Variables for graphs.
                                                             (line 1369)
* graph6_export:                         Functions and Variables for graphs.
                                                             (line 1373)
* graph6_import:                         Functions and Variables for graphs.
                                                             (line 1378)
* graph_center:                          Functions and Variables for graphs.
                                                             (line  571)
* graph_charpoly:                        Functions and Variables for graphs.
                                                             (line  559)
* graph_eigenvalues:                     Functions and Variables for graphs.
                                                             (line  581)
* graph_flow:                            Functions and Variables for finance.
                                                             (line   42)
* graph_order:                           Functions and Variables for graphs.
                                                             (line  612)
* graph_periphery:                       Functions and Variables for graphs.
                                                             (line  592)
* graph_product:                         Functions and Variables for graphs.
                                                             (line  150)
* graph_size:                            Functions and Variables for graphs.
                                                             (line  602)
* graph_union:                           Functions and Variables for graphs.
                                                             (line  159)
* great_rhombicosidodecahedron_graph:    Functions and Variables for graphs.
                                                             (line  167)
* great_rhombicuboctahedron_graph:       Functions and Variables for graphs.
                                                             (line  171)
* Greater than:                          Relational operators.
                                                             (line   10)
* Greater than or equal:                 Relational operators.
                                                             (line    9)
* grid <1>:                              Functions and Variables for draw.
                                                             (line 1051)
* grid:                                  Plotting Options.   (line   94)
* grid_graph:                            Functions and Variables for graphs.
                                                             (line  163)
* grind:                                 Functions and Variables for Display.
                                                             (line  192)
* grobner_basis:                         Functions and Variables for Affine.
                                                             (line   25)
* grotzch_graph:                         Functions and Variables for graphs.
                                                             (line  175)
* halfangles:                            Functions and Variables for Trigonometric.
                                                             (line  170)
* hamilton_cycle:                        Functions and Variables for graphs.
                                                             (line  632)
* hamilton_path:                         Functions and Variables for graphs.
                                                             (line  644)
* hankel:                                Functions and Variables for linearalgebra.
                                                             (line  181)
* hankel_1:                              Bessel Functions.   (line   64)
* hankel_2:                              Bessel Functions.   (line  114)
* harmonic:                              Package functs.     (line  133)
* harmonic_mean:                         Functions and Variables for descriptive statistics.
                                                             (line  351)
* hav:                                   Package functs.     (line  192)
* head_angle <1>:                        Functions and Variables for draw.
                                                             (line 1066)
* head_angle:                            Functions and Variables for graphs.
                                                             (line 1638)
* head_both:                             Functions and Variables for draw.
                                                             (line 1102)
* head_length <1>:                       Functions and Variables for graphs.
                                                             (line 1644)
* head_length:                           Functions and Variables for draw.
                                                             (line 1123)
* head_type:                             Functions and Variables for draw.
                                                             (line 1147)
* heawood_graph:                         Functions and Variables for graphs.
                                                             (line  179)
* Help:                                  Functions and Variables for Help.
                                                             (line   72)
* hermite:                               Functions and Variables for orthogonal polynomials.
                                                             (line   40)
* hessian:                               Functions and Variables for linearalgebra.
                                                             (line  187)
* hgfred:                                Functions and Variables for Special Functions.
                                                             (line  100)
* hilbert_matrix:                        Functions and Variables for linearalgebra.
                                                             (line  214)
* hilbertmap:                            Definitions for Peano maps.
                                                             (line   10)
* hipow:                                 Functions and Variables for Polynomials.
                                                             (line  642)
* histogram:                             Functions and Variables for statistical graphs.
                                                             (line  203)
* histogram_description:                 Functions and Variables for statistical graphs.
                                                             (line  209)
* hodge:                                 Functions and Variables for itensor.
                                                             (line 1490)
* horner:                                Functions and Variables for fast Fourier transform.
                                                             (line  206)
* hypergeometric:                        Hypergeometric Functions.
                                                             (line   27)
* hypergeometric_representation:         Error Function.     (line   64)
* i:                                     Functions and Variables for Constants.
                                                             (line   13)
* ibase:                                 Functions and Variables for Display.
                                                             (line  291)
* ic1:                                   Functions and Variables for Differential Equations.
                                                             (line   70)
* ic2:                                   Functions and Variables for Differential Equations.
                                                             (line   80)
* ic_convert:                            Functions and Variables for itensor.
                                                             (line 1584)
* icc1:                                  Functions and Variables for itensor.
                                                             (line 1133)
* icc2:                                  Functions and Variables for itensor.
                                                             (line 1148)
* ichr1:                                 Functions and Variables for itensor.
                                                             (line  909)
* ichr2:                                 Functions and Variables for itensor.
                                                             (line  918)
* icosahedron_graph:                     Functions and Variables for graphs.
                                                             (line  183)
* icosidodecahedron_graph:               Functions and Variables for graphs.
                                                             (line  187)
* icounter:                              Functions and Variables for itensor.
                                                             (line  351)
* icurvature:                            Functions and Variables for itensor.
                                                             (line  926)
* ident:                                 Functions and Variables for Matrices and Linear Algebra.
                                                             (line  687)
* identfor:                              Functions and Variables for linearalgebra.
                                                             (line  220)
* identity:                              Functions and Variables for Sets.
                                                             (line  414)
* idiff:                                 Functions and Variables for itensor.
                                                             (line  634)
* idim:                                  Functions and Variables for itensor.
                                                             (line  903)
* idummy:                                Functions and Variables for itensor.
                                                             (line  338)
* idummyx:                               Functions and Variables for itensor.
                                                             (line  345)
* ieqn:                                  Functions and Variables for Equations.
                                                             (line  408)
* ieqnprint:                             Functions and Variables for Equations.
                                                             (line  439)
* if:                                    Functions and Variables for Program Flow.
                                                             (line  391)
* ifactors:                              Functions and Variables for Number Theory.
                                                             (line  291)
* ifb:                                   Functions and Variables for itensor.
                                                             (line 1105)
* ifc1:                                  Functions and Variables for itensor.
                                                             (line 1165)
* ifc2:                                  Functions and Variables for itensor.
                                                             (line 1178)
* ifg:                                   Functions and Variables for itensor.
                                                             (line 1202)
* ifgi:                                  Functions and Variables for itensor.
                                                             (line 1207)
* ifr:                                   Functions and Variables for itensor.
                                                             (line 1191)
* iframe_bracket_form:                   Functions and Variables for itensor.
                                                             (line 1212)
* iframes:                               Functions and Variables for itensor.
                                                             (line 1099)
* ifri:                                  Functions and Variables for itensor.
                                                             (line 1196)
* ifs:                                   Functions and Variables for dynamics.
                                                             (line   45)
* igcdex:                                Functions and Variables for Number Theory.
                                                             (line  313)
* igeodesic_coords:                      Functions and Variables for itensor.
                                                             (line  990)
* igeowedge_flag:                        Functions and Variables for itensor.
                                                             (line 1528)
* ikt1:                                  Functions and Variables for itensor.
                                                             (line 1265)
* ikt2:                                  Functions and Variables for itensor.
                                                             (line 1279)
* ilt:                                   Functions and Variables for Integration.
                                                             (line  127)
* image:                                 Functions and Variables for draw.
                                                             (line 2831)
* imaginary:                             Functions and Variables for Properties.
                                                             (line  549)
* Imaginary unit:                        Functions and Variables for Constants.
                                                             (line   13)
* imagpart:                              Functions for Complex Numbers.
                                                             (line  124)
* imetric:                               Functions and Variables for itensor.
                                                             (line  894)
* implicit:                              Functions and Variables for draw.
                                                             (line 2920)
* implicit_derivative:                   Functions and Variables for impdiff.
                                                             (line    8)
* implicit_plot:                         Functions and Variables for Plotting.
                                                             (line   47)
* in_neighbors:                          Functions and Variables for graphs.
                                                             (line  668)
* inchar:                                Functions and Variables for Command Line.
                                                             (line  204)
* increasing:                            Functions and Variables for Properties.
                                                             (line  243)
* ind:                                   Functions and Variables for Constants.
                                                             (line   26)
* Indeterminate:                         Functions and Variables for Constants.
                                                             (line   26)
* indexed_tensor:                        Functions and Variables for itensor.
                                                             (line  192)
* indices:                               Functions and Variables for itensor.
                                                             (line   55)
* induced_subgraph:                      Functions and Variables for graphs.
                                                             (line  191)
* inf:                                   Functions and Variables for Constants.
                                                             (line   37)
* inference_result:                      Functions and Variables for inference_result.
                                                             (line    7)
* inferencep:                            Functions and Variables for inference_result.
                                                             (line   49)
* infeval:                               Functions and Variables for Evaluation.
                                                             (line  581)
* infinity:                              Functions and Variables for Constants.
                                                             (line   41)
* infix:                                 User defined operators.
                                                             (line    9)
* inflag:                                Functions and Variables for Expressions.
                                                             (line  327)
* infolists:                             Functions and Variables for Command Line.
                                                             (line  230)
* init_atensor:                          Functions and Variables for atensor.
                                                             (line    8)
* init_ctensor:                          Functions and Variables for ctensor.
                                                             (line  153)
* inm:                                   Functions and Variables for itensor.
                                                             (line 1226)
* inmc1:                                 Functions and Variables for itensor.
                                                             (line 1237)
* inmc2:                                 Functions and Variables for itensor.
                                                             (line 1250)
* innerproduct:                          Functions and Variables for Matrices and Linear Algebra.
                                                             (line  691)
* inpart:                                Functions and Variables for Expressions.
                                                             (line  348)
* inprod:                                Functions and Variables for Matrices and Linear Algebra.
                                                             (line  692)
* inrt:                                  Functions and Variables for Number Theory.
                                                             (line  334)
* intanalysis:                           Functions and Variables for Integration.
                                                             (line  171)
* integer:                               Functions and Variables for Properties.
                                                             (line  376)
* integer_partitions:                    Functions and Variables for Sets.
                                                             (line  425)
* integerp:                              Functions and Variables for Numbers.
                                                             (line  112)
* integervalued:                         Functions and Variables for Properties.
                                                             (line  393)
* integrate:                             Functions and Variables for Integration.
                                                             (line  211)
* integrate_use_rootsof:                 Functions and Variables for Integration.
                                                             (line  447)
* integration_constant:                  Functions and Variables for Integration.
                                                             (line  384)
* integration_constant_counter:          Functions and Variables for Integration.
                                                             (line  410)
* intersect:                             Functions and Variables for Sets.
                                                             (line  470)
* intersection:                          Functions and Variables for Sets.
                                                             (line  474)
* intervalp:                             Functions and Variables for orthogonal polynomials.
                                                             (line   46)
* intfaclim:                             Functions and Variables for Polynomials.
                                                             (line  666)
* intopois:                              Poisson series.     (line    7)
* intosum:                               Sums and Products.  (line   36)
* inv_mod:                               Functions and Variables for Number Theory.
                                                             (line  342)
* invariant1:                            Functions and Variables for ctensor.
                                                             (line  811)
* invariant2:                            Functions and Variables for ctensor.
                                                             (line  817)
* inverse_fft:                           Functions and Variables for fast Fourier transform.
                                                             (line   45)
* inverse_jacobi_cd:                     Functions and Variables for Elliptic Functions.
                                                             (line   87)
* inverse_jacobi_cn:                     Functions and Variables for Elliptic Functions.
                                                             (line   59)
* inverse_jacobi_cs:                     Functions and Variables for Elliptic Functions.
                                                             (line   83)
* inverse_jacobi_dc:                     Functions and Variables for Elliptic Functions.
                                                             (line   99)
* inverse_jacobi_dn:                     Functions and Variables for Elliptic Functions.
                                                             (line   63)
* inverse_jacobi_ds:                     Functions and Variables for Elliptic Functions.
                                                             (line   95)
* inverse_jacobi_nc:                     Functions and Variables for Elliptic Functions.
                                                             (line   79)
* inverse_jacobi_nd:                     Functions and Variables for Elliptic Functions.
                                                             (line   91)
* inverse_jacobi_ns:                     Functions and Variables for Elliptic Functions.
                                                             (line   67)
* inverse_jacobi_sc:                     Functions and Variables for Elliptic Functions.
                                                             (line   71)
* inverse_jacobi_sd:                     Functions and Variables for Elliptic Functions.
                                                             (line   75)
* inverse_jacobi_sn:                     Functions and Variables for Elliptic Functions.
                                                             (line   55)
* invert:                                Functions and Variables for Matrices and Linear Algebra.
                                                             (line  704)
* invert_by_lu:                          Functions and Variables for linearalgebra.
                                                             (line  234)
* ip_grid:                               Functions and Variables for draw.
                                                             (line 1172)
* ip_grid_in:                            Functions and Variables for draw.
                                                             (line 1180)
* irr:                                   Functions and Variables for finance.
                                                             (line  228)
* irrational:                            Functions and Variables for Properties.
                                                             (line  541)
* is:                                    Functions and Variables for Facts.
                                                             (line  306)
* is_biconnected:                        Functions and Variables for graphs.
                                                             (line  681)
* is_bipartite:                          Functions and Variables for graphs.
                                                             (line  692)
* is_connected:                          Functions and Variables for graphs.
                                                             (line  704)
* is_digraph:                            Functions and Variables for graphs.
                                                             (line  714)
* is_edge_in_graph:                      Functions and Variables for graphs.
                                                             (line  725)
* is_graph:                              Functions and Variables for graphs.
                                                             (line  742)
* is_graph_or_digraph:                   Functions and Variables for graphs.
                                                             (line  753)
* is_isomorphic:                         Functions and Variables for graphs.
                                                             (line  765)
* is_planar:                             Functions and Variables for graphs.
                                                             (line  778)
* is_sconnected:                         Functions and Variables for graphs.
                                                             (line  794)
* is_tree:                               Functions and Variables for graphs.
                                                             (line  819)
* is_vertex_in_graph:                    Functions and Variables for graphs.
                                                             (line  806)
* ishow:                                 Functions and Variables for itensor.
                                                             (line   47)
* isolate:                               Functions and Variables for Expressions.
                                                             (line  376)
* isolate_wrt_times:                     Functions and Variables for Expressions.
                                                             (line  395)
* isomorphism:                           Functions and Variables for graphs.
                                                             (line  656)
* isqrt:                                 Functions and Variables for Number Theory.
                                                             (line  354)
* isreal_p:                              Functions and Variables for to_poly_solve.
                                                             (line  505)
* items_inference:                       Functions and Variables for inference_result.
                                                             (line   54)
* itr:                                   Functions and Variables for itensor.
                                                             (line 1291)
* jacobi:                                Functions and Variables for Number Theory.
                                                             (line  359)
* jacobi_cd:                             Functions and Variables for Elliptic Functions.
                                                             (line   39)
* jacobi_cn:                             Functions and Variables for Elliptic Functions.
                                                             (line   11)
* jacobi_cs:                             Functions and Variables for Elliptic Functions.
                                                             (line   35)
* jacobi_dc:                             Functions and Variables for Elliptic Functions.
                                                             (line   51)
* jacobi_dn:                             Functions and Variables for Elliptic Functions.
                                                             (line   15)
* jacobi_ds:                             Functions and Variables for Elliptic Functions.
                                                             (line   47)
* jacobi_nc:                             Functions and Variables for Elliptic Functions.
                                                             (line   31)
* jacobi_nd:                             Functions and Variables for Elliptic Functions.
                                                             (line   43)
* jacobi_ns:                             Functions and Variables for Elliptic Functions.
                                                             (line   19)
* jacobi_p:                              Functions and Variables for orthogonal polynomials.
                                                             (line   51)
* jacobi_sc:                             Functions and Variables for Elliptic Functions.
                                                             (line   23)
* jacobi_sd:                             Functions and Variables for Elliptic Functions.
                                                             (line   27)
* jacobi_sn:                             Functions and Variables for Elliptic Functions.
                                                             (line    7)
* jacobian:                              Functions and Variables for linearalgebra.
                                                             (line  239)
* JF:                                    Functions and Variables for diag.
                                                             (line   34)
* join:                                  Functions and Variables for Lists.
                                                             (line  200)
* jordan:                                Functions and Variables for diag.
                                                             (line   58)
* julia:                                 Functions and Variables for dynamics.
                                                             (line   60)
* julia_parameter:                       Definitions for complex fractals.
                                                             (line   41)
* julia_set:                             Definitions for complex fractals.
                                                             (line   23)
* julia_sin:                             Definitions for complex fractals.
                                                             (line   49)
* kdels:                                 Functions and Variables for itensor.
                                                             (line  375)
* kdelta:                                Functions and Variables for itensor.
                                                             (line  359)
* keepfloat:                             Functions and Variables for Polynomials.
                                                             (line  683)
* key:                                   Functions and Variables for draw.
                                                             (line 1189)
* kill:                                  Functions and Variables for Command Line.
                                                             (line  297)
* killcontext:                           Functions and Variables for Facts.
                                                             (line  359)
* kinvariant:                            Functions and Variables for ctensor.
                                                             (line 1230)
* kostka:                                Functions and Variables for Symmetries.
                                                             (line  472)
* kron_delta:                            Functions and Variables for Sets.
                                                             (line  500)
* kronecker_product:                     Functions and Variables for linearalgebra.
                                                             (line  262)
* kt:                                    Functions and Variables for ctensor.
                                                             (line 1258)
* kummer_m:                              Functions and Variables for contrib_ode.
                                                             (line  115)
* kummer_u:                              Functions and Variables for contrib_ode.
                                                             (line  126)
* kurtosis:                              Functions and Variables for descriptive statistics.
                                                             (line  403)
* kurtosis_bernoulli:                    Functions and Variables for discrete distributions.
                                                             (line  333)
* kurtosis_beta:                         Functions and Variables for continuous distributions.
                                                             (line  944)
* kurtosis_binomial:                     Functions and Variables for discrete distributions.
                                                             (line  156)
* kurtosis_chi2:                         Functions and Variables for continuous distributions.
                                                             (line  407)
* kurtosis_continuous_uniform:           Functions and Variables for continuous distributions.
                                                             (line 1006)
* kurtosis_discrete_uniform:             Functions and Variables for discrete distributions.
                                                             (line  466)
* kurtosis_exp:                          Functions and Variables for continuous distributions.
                                                             (line  718)
* kurtosis_f:                            Functions and Variables for continuous distributions.
                                                             (line  561)
* kurtosis_gamma:                        Functions and Variables for continuous distributions.
                                                             (line  871)
* kurtosis_general_finite_discrete:      Functions and Variables for discrete distributions.
                                                             (line   82)
* kurtosis_geometric:                    Functions and Variables for discrete distributions.
                                                             (line  405)
* kurtosis_gumbel:                       Functions and Variables for continuous distributions.
                                                             (line 1527)
* kurtosis_hypergeometric:               Functions and Variables for discrete distributions.
                                                             (line  541)
* kurtosis_laplace:                      Functions and Variables for continuous distributions.
                                                             (line 1425)
* kurtosis_logistic:                     Functions and Variables for continuous distributions.
                                                             (line 1066)
* kurtosis_lognormal:                    Functions and Variables for continuous distributions.
                                                             (line  805)
* kurtosis_negative_binomial:            Functions and Variables for discrete distributions.
                                                             (line  614)
* kurtosis_noncentral_chi2:              Functions and Variables for continuous distributions.
                                                             (line  486)
* kurtosis_noncentral_student_t:         Functions and Variables for continuous distributions.
                                                             (line  253)
* kurtosis_normal:                       Functions and Variables for continuous distributions.
                                                             (line   68)
* kurtosis_pareto:                       Functions and Variables for continuous distributions.
                                                             (line 1124)
* kurtosis_poisson:                      Functions and Variables for discrete distributions.
                                                             (line  221)
* kurtosis_rayleigh:                     Functions and Variables for continuous distributions.
                                                             (line 1348)
* kurtosis_student_t:                    Functions and Variables for continuous distributions.
                                                             (line  143)
* kurtosis_weibull:                      Functions and Variables for continuous distributions.
                                                             (line 1182)
* label:                                 Functions and Variables for draw.
                                                             (line 2972)
* label_alignment <1>:                   Functions and Variables for draw.
                                                             (line 1212)
* label_alignment:                       Functions and Variables for graphs.
                                                             (line 1528)
* label_orientation:                     Functions and Variables for draw.
                                                             (line 1238)
* labels:                                Functions and Variables for Command Line.
                                                             (line  355)
* lagrange:                              Functions and Variables for interpol.
                                                             (line    8)
* laguerre:                              Functions and Variables for orthogonal polynomials.
                                                             (line   61)
* lambda:                                Functions and Variables for Function Definition.
                                                             (line  633)
* lambert_w:                             Functions and Variables for Special Functions.
                                                             (line  149)
* laplace:                               Functions and Variables for Differentiation.
                                                             (line  575)
* laplacian_matrix:                      Functions and Variables for graphs.
                                                             (line  830)
* lassociative:                          Functions and Variables for Simplification.
                                                             (line  341)
* last:                                  Functions and Variables for Lists.
                                                             (line  221)
* lbfgs:                                 Functions and Variables for lbfgs.
                                                             (line    8)
* lbfgs_ncorrections:                    Functions and Variables for lbfgs.
                                                             (line  293)
* lbfgs_nfeval_max:                      Functions and Variables for lbfgs.
                                                             (line  284)
* lc2kdt:                                Functions and Variables for itensor.
                                                             (line  403)
* lc_l:                                  Functions and Variables for itensor.
                                                             (line  475)
* lc_u:                                  Functions and Variables for itensor.
                                                             (line  498)
* lcharp:                                Functions and Variables for characters.
                                                             (line   83)
* lcm:                                   Functions and Variables for Number Theory.
                                                             (line  367)
* ldefint:                               Functions and Variables for Integration.
                                                             (line  498)
* ldisp:                                 Functions and Variables for Display.
                                                             (line  349)
* ldisplay:                              Functions and Variables for Display.
                                                             (line  380)
* leftjust:                              Functions and Variables for Display.
                                                             (line  414)
* legend:                                Plotting Options.   (line  102)
* legendre_p:                            Functions and Variables for orthogonal polynomials.
                                                             (line   68)
* legendre_q:                            Functions and Variables for orthogonal polynomials.
                                                             (line   75)
* leinstein:                             Functions and Variables for ctensor.
                                                             (line  247)
* length:                                Functions and Variables for Lists.
                                                             (line  225)
* Less than:                             Relational operators.
                                                             (line    7)
* Less than or equal:                    Relational operators.
                                                             (line    8)
* let:                                   Functions and Variables for Rules and Patterns.
                                                             (line  226)
* let_rule_packages:                     Functions and Variables for Rules and Patterns.
                                                             (line  362)
* letrat:                                Functions and Variables for Rules and Patterns.
                                                             (line  307)
* letrules:                              Functions and Variables for Rules and Patterns.
                                                             (line  333)
* letsimp:                               Functions and Variables for Rules and Patterns.
                                                             (line  348)
* levi_civita:                           Functions and Variables for itensor.
                                                             (line  396)
* lfg:                                   Functions and Variables for ctensor.
                                                             (line 1177)
* lfreeof:                               Functions and Variables for Expressions.
                                                             (line  466)
* lg:                                    Functions and Variables for ctensor.
                                                             (line 1213)
* lgtreillis:                            Functions and Variables for Symmetries.
                                                             (line  480)
* lhospitallim:                          Functions and Variables for Limits.
                                                             (line    7)
* lhs:                                   Functions and Variables for Equations.
                                                             (line  457)
* li:                                    Root Exponential and Logarithmic Functions.
                                                             (line   61)
* liediff:                               Functions and Variables for itensor.
                                                             (line  649)
* limit:                                 Functions and Variables for Limits.
                                                             (line   17)
* limsubst:                              Functions and Variables for Limits.
                                                             (line   59)
* Lindstedt:                             Functions and Variables for lindstedt.
                                                             (line    7)
* line_graph:                            Functions and Variables for graphs.
                                                             (line  210)
* line_type:                             Functions and Variables for draw.
                                                             (line 1264)
* line_width:                            Functions and Variables for draw.
                                                             (line 1288)
* linear <1>:                            Functions and Variables for Simplification.
                                                             (line  347)
* linear:                                Package functs.     (line   68)
* linear_program:                        Functions and Variables for simplex.
                                                             (line   15)
* linear_solver:                         Functions and Variables for zeilberger.
                                                             (line  110)
* linearinterpol:                        Functions and Variables for interpol.
                                                             (line  111)
* linechar:                              Functions and Variables for Command Line.
                                                             (line  392)
* linel:                                 Functions and Variables for Display.
                                                             (line  433)
* linenum:                               Functions and Variables for Command Line.
                                                             (line  411)
* linsolve:                              Functions and Variables for Equations.
                                                             (line  499)
* linsolve_params:                       Functions and Variables for Equations.
                                                             (line  576)
* linsolvewarn:                          Functions and Variables for Equations.
                                                             (line  569)
* lispdisp:                              Functions and Variables for Display.
                                                             (line  444)
* List delimiters:                       Functions and Variables for Lists.
                                                             (line    8)
* list_correlations:                     Functions and Variables for descriptive statistics.
                                                             (line  649)
* list_matrix_entries:                   Functions and Variables for Matrices and Linear Algebra.
                                                             (line  735)
* list_nc_monomials:                     Functions and Variables for Affine.
                                                             (line  135)
* listarith:                             Functions and Variables for Lists.
                                                             (line  237)
* listarray:                             Functions and Variables for Arrays.
                                                             (line  267)
* listconstvars:                         Functions and Variables for Expressions.
                                                             (line  422)
* listdummyvars:                         Functions and Variables for Expressions.
                                                             (line  431)
* listify:                               Functions and Variables for Sets.
                                                             (line  523)
* listoftens:                            Functions and Variables for itensor.
                                                             (line   32)
* listofvars:                            Functions and Variables for Expressions.
                                                             (line  451)
* listp <1>:                             Functions and Variables for Lists.
                                                             (line  247)
* listp:                                 Functions and Variables for linearalgebra.
                                                             (line  266)
* lmax:                                  Functions for Numbers.
                                                             (line  195)
* lmin:                                  Functions for Numbers.
                                                             (line  201)
* lmxchar:                               Functions and Variables for Matrices and Linear Algebra.
                                                             (line  744)
* load:                                  Functions and Variables for File Input and Output.
                                                             (line  232)
* load_pathname:                         Functions and Variables for File Input and Output.
                                                             (line  260)
* loadfile:                              Functions and Variables for File Input and Output.
                                                             (line  286)
* loadprint:                             Functions and Variables for File Input and Output.
                                                             (line  297)
* local:                                 Functions and Variables for Function Definition.
                                                             (line  763)
* locate_matrix_entry:                   Functions and Variables for linearalgebra.
                                                             (line  275)
* log:                                   Root Exponential and Logarithmic Functions.
                                                             (line  120)
* log_gamma:                             Gamma and factorial Functions.
                                                             (line  117)
* logabs:                                Root Exponential and Logarithmic Functions.
                                                             (line  156)
* logand:                                Package functs.     (line   43)
* logarc:                                Root Exponential and Logarithmic Functions.
                                                             (line  168)
* logcb:                                 Functions and Variables for draw.
                                                             (line 1312)
* logconcoeffp:                          Root Exponential and Logarithmic Functions.
                                                             (line  177)
* logcontract:                           Root Exponential and Logarithmic Functions.
                                                             (line  188)
* logexpand:                             Root Exponential and Logarithmic Functions.
                                                             (line  210)
* Logical conjunction <1>:               Functions and Variables for to_poly_solve.
                                                             (line   16)
* Logical conjunction:                   Logical operators.  (line    7)
* Logical disjunction <1>:               Logical operators.  (line   43)
* Logical disjunction:                   Functions and Variables for to_poly_solve.
                                                             (line  134)
* Logical negation:                      Logical operators.  (line   30)
* lognegint:                             Root Exponential and Logarithmic Functions.
                                                             (line  221)
* logor:                                 Package functs.     (line   49)
* logsimp:                               Root Exponential and Logarithmic Functions.
                                                             (line  228)
* logx <1>:                              Functions and Variables for draw.
                                                             (line 1338)
* logx:                                  Plotting Options.   (line  112)
* logxor:                                Package functs.     (line   55)
* logy <1>:                              Functions and Variables for draw.
                                                             (line 1356)
* logy:                                  Plotting Options.   (line  117)
* logz:                                  Functions and Variables for draw.
                                                             (line 1374)
* lopow:                                 Functions and Variables for Polynomials.
                                                             (line  714)
* lorentz_gauge:                         Functions and Variables for itensor.
                                                             (line  984)
* lowercasep:                            Functions and Variables for characters.
                                                             (line   87)
* lpart:                                 Functions and Variables for Expressions.
                                                             (line  471)
* lratsubst:                             Functions and Variables for Polynomials.
                                                             (line  722)
* lreduce:                               Functions and Variables for Sets.
                                                             (line  538)
* lriem:                                 Functions and Variables for ctensor.
                                                             (line 1197)
* lriemann:                              Functions and Variables for ctensor.
                                                             (line  281)
* lsquares_estimates:                    Functions and Variables for lsquares.
                                                             (line    7)
* lsquares_estimates_approximate:        Functions and Variables for lsquares.
                                                             (line  149)
* lsquares_estimates_exact:              Functions and Variables for lsquares.
                                                             (line   99)
* lsquares_mse:                          Functions and Variables for lsquares.
                                                             (line  213)
* lsquares_residual_mse:                 Functions and Variables for lsquares.
                                                             (line  335)
* lsquares_residuals:                    Functions and Variables for lsquares.
                                                             (line  285)
* lsum:                                  Sums and Products.  (line   16)
* ltreillis:                             Functions and Variables for Symmetries.
                                                             (line  488)
* lu_backsub:                            Functions and Variables for linearalgebra.
                                                             (line  300)
* lu_factor:                             Functions and Variables for linearalgebra.
                                                             (line  305)
* m1pbranch:                             Functions and Variables for Numbers.
                                                             (line  141)
* Macro function definition operator:    Assignment operators.
                                                             (line  116)
* macroexpand:                           Macros.             (line  102)
* macroexpand1:                          Macros.             (line  136)
* macroexpansion:                        Functions and Variables for Function Definition.
                                                             (line  797)
* macros:                                Macros.             (line  168)
* mainvar:                               Functions and Variables for Expressions.
                                                             (line  477)
* make_array:                            Functions and Variables for Arrays.
                                                             (line  358)
* make_graph:                            Functions and Variables for graphs.
                                                             (line  214)
* make_level_picture:                    Functions and Variables for pictures.
                                                             (line   12)
* make_poly_continent:                   Functions and Variables for worldmap.
                                                             (line   40)
* make_poly_country:                     Functions and Variables for worldmap.
                                                             (line   55)
* make_polygon:                          Functions and Variables for worldmap.
                                                             (line   67)
* make_random_state:                     Random Numbers.     (line    8)
* make_rgb_picture:                      Functions and Variables for pictures.
                                                             (line   46)
* make_transform:                        Functions and Variables for Plotting.
                                                             (line   69)
* makebox:                               Functions and Variables for itensor.
                                                             (line  781)
* makefact:                              Gamma and factorial Functions.
                                                             (line  723)
* makegamma:                             Gamma and factorial Functions.
                                                             (line  166)
* makelist:                              Functions and Variables for Lists.
                                                             (line  251)
* makeOrders:                            Functions and Variables for makeOrders.
                                                             (line    7)
* makeset:                               Functions and Variables for Sets.
                                                             (line  577)
* mandelbrot:                            Functions and Variables for dynamics.
                                                             (line   85)
* mandelbrot_set:                        Definitions for complex fractals.
                                                             (line    7)
* manual_demo:                           Functions and Variables for Help.
                                                             (line  170)
* map:                                   Functions and Variables for Program Flow.
                                                             (line  446)
* mapatom:                               Functions and Variables for Program Flow.
                                                             (line  481)
* maperror:                              Functions and Variables for Program Flow.
                                                             (line  487)
* maplist:                               Functions and Variables for Program Flow.
                                                             (line  515)
* mapprint:                              Functions and Variables for Program Flow.
                                                             (line  504)
* mat_cond:                              Functions and Variables for linearalgebra.
                                                             (line  422)
* mat_fullunblocker:                     Functions and Variables for linearalgebra.
                                                             (line  456)
* mat_function:                          Functions and Variables for diag.
                                                             (line  189)
* mat_norm:                              Functions and Variables for linearalgebra.
                                                             (line  434)
* mat_trace:                             Functions and Variables for linearalgebra.
                                                             (line  461)
* mat_unblocker:                         Functions and Variables for linearalgebra.
                                                             (line  467)
* matchdeclare:                          Functions and Variables for Rules and Patterns.
                                                             (line  369)
* matchfix:                              User defined operators.
                                                             (line  105)
* matrix:                                Functions and Variables for Matrices and Linear Algebra.
                                                             (line  761)
* matrix_element_add:                    Functions and Variables for Matrices and Linear Algebra.
                                                             (line  926)
* matrix_element_mult:                   Functions and Variables for Matrices and Linear Algebra.
                                                             (line  958)
* matrix_element_transpose:              Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1000)
* matrix_size:                           Functions and Variables for linearalgebra.
                                                             (line  451)
* matrixmap:                             Functions and Variables for Matrices and Linear Algebra.
                                                             (line  916)
* matrixp <1>:                           Functions and Variables for linearalgebra.
                                                             (line  441)
* matrixp <2>:                           Functions and Variables for Matrices and Linear Algebra.
                                                             (line  922)
* matrixp:                               Functions and Variables for linearalgebra.
                                                             (line  442)
* mattrace:                              Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1051)
* max:                                   Functions for Numbers.
                                                             (line  207)
* max_clique:                            Functions and Variables for graphs.
                                                             (line  847)
* max_degree:                            Functions and Variables for graphs.
                                                             (line  857)
* max_flow:                              Functions and Variables for graphs.
                                                             (line  870)
* max_independent_set:                   Functions and Variables for graphs.
                                                             (line  901)
* max_matching:                          Functions and Variables for graphs.
                                                             (line  912)
* MAX_ORD:                               Functions and Variables for zeilberger.
                                                             (line   96)
* maxapplydepth:                         Functions and Variables for Rules and Patterns.
                                                             (line  527)
* maxapplyheight:                        Functions and Variables for Rules and Patterns.
                                                             (line  534)
* maxima_tempdir:                        Functions and Variables for Runtime Environment.
                                                             (line    7)
* maxima_userdir:                        Functions and Variables for Runtime Environment.
                                                             (line   19)
* maximize_lp:                           Functions and Variables for simplex.
                                                             (line   42)
* maxnegex:                              Functions and Variables for Simplification.
                                                             (line  380)
* maxposex:                              Functions and Variables for Simplification.
                                                             (line  387)
* maxpsifracdenom:                       Gamma and factorial Functions.
                                                             (line  715)
* maxpsifracnum:                         Gamma and factorial Functions.
                                                             (line  707)
* maxpsinegint:                          Gamma and factorial Functions.
                                                             (line  698)
* maxpsiposint:                          Gamma and factorial Functions.
                                                             (line  691)
* maxtayorder:                           Functions and Variables for Series.
                                                             (line   72)
* maybe:                                 Functions and Variables for Facts.
                                                             (line  377)
* mean:                                  Functions and Variables for descriptive statistics.
                                                             (line    8)
* mean_bernoulli:                        Functions and Variables for discrete distributions.
                                                             (line  270)
* mean_beta:                             Functions and Variables for continuous distributions.
                                                             (line  922)
* mean_binomial:                         Functions and Variables for discrete distributions.
                                                             (line  132)
* mean_chi2:                             Functions and Variables for continuous distributions.
                                                             (line  335)
* mean_continuous_uniform:               Functions and Variables for continuous distributions.
                                                             (line  982)
* mean_deviation:                        Functions and Variables for descriptive statistics.
                                                             (line  296)
* mean_discrete_uniform:                 Functions and Variables for discrete distributions.
                                                             (line  442)
* mean_exp:                              Functions and Variables for continuous distributions.
                                                             (line  640)
* mean_f:                                Functions and Variables for continuous distributions.
                                                             (line  539)
* mean_gamma:                            Functions and Variables for continuous distributions.
                                                             (line  849)
* mean_general_finite_discrete:          Functions and Variables for discrete distributions.
                                                             (line   54)
* mean_geometric:                        Functions and Variables for discrete distributions.
                                                             (line  383)
* mean_gumbel:                           Functions and Variables for continuous distributions.
                                                             (line 1491)
* mean_hypergeometric:                   Functions and Variables for discrete distributions.
                                                             (line  513)
* mean_laplace:                          Functions and Variables for continuous distributions.
                                                             (line 1403)
* mean_logistic:                         Functions and Variables for continuous distributions.
                                                             (line 1044)
* mean_lognormal:                        Functions and Variables for continuous distributions.
                                                             (line  783)
* mean_negative_binomial:                Functions and Variables for discrete distributions.
                                                             (line  590)
* mean_noncentral_chi2:                  Functions and Variables for continuous distributions.
                                                             (line  464)
* mean_noncentral_student_t:             Functions and Variables for continuous distributions.
                                                             (line  215)
* mean_normal:                           Functions and Variables for continuous distributions.
                                                             (line   44)
* mean_pareto:                           Functions and Variables for continuous distributions.
                                                             (line 1102)
* mean_poisson:                          Functions and Variables for discrete distributions.
                                                             (line  199)
* mean_rayleigh:                         Functions and Variables for continuous distributions.
                                                             (line 1260)
* mean_student_t:                        Functions and Variables for continuous distributions.
                                                             (line  115)
* mean_weibull:                          Functions and Variables for continuous distributions.
                                                             (line 1160)
* median:                                Functions and Variables for descriptive statistics.
                                                             (line  255)
* median_deviation:                      Functions and Variables for descriptive statistics.
                                                             (line  324)
* member:                                Functions and Variables for Lists.
                                                             (line  293)
* mesh:                                  Functions and Variables for draw.
                                                             (line 3014)
* mesh_lines_color:                      Plotting Options.   (line  122)
* method:                                Functions and Variables for contrib_ode.
                                                             (line   72)
* metricexpandall:                       Functions and Variables for Units.
                                                             (line  396)
* min:                                   Functions for Numbers.
                                                             (line  219)
* min_degree:                            Functions and Variables for graphs.
                                                             (line  924)
* min_edge_cut:                          Functions and Variables for graphs.
                                                             (line  937)
* min_vertex_cover:                      Functions and Variables for graphs.
                                                             (line  943)
* min_vertex_cut:                        Functions and Variables for graphs.
                                                             (line  947)
* minf:                                  Functions and Variables for Constants.
                                                             (line   45)
* minfactorial:                          Combinatorial Functions.
                                                             (line  166)
* minimalPoly:                           Functions and Variables for diag.
                                                             (line  129)
* minimize_lp:                           Functions and Variables for simplex.
                                                             (line   50)
* minimum_spanning_tree:                 Functions and Variables for graphs.
                                                             (line  953)
* minor:                                 Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1061)
* minpack_lsquares:                      Functions and Variables for minpack.
                                                             (line    8)
* minpack_solve:                         Functions and Variables for minpack.
                                                             (line   73)
* Minus infinity:                        Functions and Variables for Constants.
                                                             (line   45)
* mnewton:                               Functions and Variables for mnewton.
                                                             (line   25)
* mod:                                   Functions and Variables for Number Theory.
                                                             (line  374)
* mod_big_prime:                         Functions and Variables for zeilberger.
                                                             (line  164)
* mod_test:                              Functions and Variables for zeilberger.
                                                             (line  143)
* mod_threshold:                         Functions and Variables for zeilberger.
                                                             (line  171)
* mode_check_errorp:                     Functions and Variables for Function Definition.
                                                             (line  942)
* mode_check_warnp:                      Functions and Variables for Function Definition.
                                                             (line  948)
* mode_checkp:                           Functions and Variables for Function Definition.
                                                             (line  935)
* mode_declare:                          Functions and Variables for Function Definition.
                                                             (line  954)
* mode_identity:                         Functions and Variables for Function Definition.
                                                             (line  998)
* ModeMatrix:                            Functions and Variables for diag.
                                                             (line  152)
* modular_linear_solver:                 Functions and Variables for zeilberger.
                                                             (line  150)
* modulus:                               Functions and Variables for Polynomials.
                                                             (line  752)
* moebius:                               Functions and Variables for Sets.
                                                             (line  611)
* mon2schur:                             Functions and Variables for Symmetries.
                                                             (line   67)
* mono:                                  Functions and Variables for Affine.
                                                             (line  110)
* monomial_dimensions:                   Functions and Variables for Affine.
                                                             (line  118)
* multi_elem:                            Functions and Variables for Symmetries.
                                                             (line   95)
* multi_orbit:                           Functions and Variables for Symmetries.
                                                             (line  375)
* multi_pui:                             Functions and Variables for Symmetries.
                                                             (line  112)
* multibernstein_poly:                   Functions and Variables for Bernstein.
                                                             (line   67)
* multinomial:                           Functions and Variables for Symmetries.
                                                             (line  892)
* multinomial_coeff:                     Functions and Variables for Sets.
                                                             (line  644)
* Multiplication:                        Arithmetic operators.
                                                             (line    9)
* multiplicative:                        Functions and Variables for Simplification.
                                                             (line  394)
* multiplicities:                        Functions and Variables for Equations.
                                                             (line  586)
* multiplot_mode:                        Functions and Variables for draw.
                                                             (line  139)
* multsym:                               Functions and Variables for Symmetries.
                                                             (line  389)
* multthru:                              Functions and Variables for Simplification.
                                                             (line  420)
* mycielski_graph:                       Functions and Variables for graphs.
                                                             (line  245)
* myoptions:                             Functions and Variables for Command Line.
                                                             (line  416)
* N'th previous output:                  Functions and Variables for Command Line.
                                                             (line  153)
* nary <1>:                              User defined operators.
                                                             (line  209)
* nary <2>:                              Functions and Variables for Simplification.
                                                             (line  466)
* nary:                                  User defined operators.
                                                             (line  208)
* natural_unit:                          Functions and Variables for ezunits.
                                                             (line  703)
* nc_degree:                             Functions and Variables for Affine.
                                                             (line   69)
* ncexpt:                                Functions and Variables for Display.
                                                             (line  162)
* ncharpoly:                             Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1066)
* Negative infinity:                     Functions and Variables for Constants.
                                                             (line   45)
* negative_picture:                      Functions and Variables for pictures.
                                                             (line   76)
* negdistrib:                            Functions and Variables for Simplification.
                                                             (line  485)
* negsumdispflag:                        Functions and Variables for Display.
                                                             (line  461)
* neighbors:                             Functions and Variables for graphs.
                                                             (line  963)
* new:                                   Functions and Variables for Structures.
                                                             (line   51)
* new_graph:                             Functions and Variables for graphs.
                                                             (line  249)
* new_variable:                          Functions and Variables for to_poly_solve.
                                                             (line  543)
* newcontext:                            Functions and Variables for Facts.
                                                             (line  401)
* newdet:                                Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1083)
* newline <1>:                           Functions and Variables for characters.
                                                             (line   91)
* newline:                               Functions and Variables for input and output.
                                                             (line   48)
* newton:                                Functions and Variables for fast Fourier transform.
                                                             (line  322)
* newtonepsilon:                         Functions and Variables for mnewton.
                                                             (line    7)
* newtonmaxiter:                         Functions and Variables for mnewton.
                                                             (line   16)
* next_prime:                            Functions and Variables for Number Theory.
                                                             (line  402)
* nextlayerfactor:                       Package facexp.     (line   65)
* nicedummies:                           Functions and Variables for to_poly_solve.
                                                             (line  588)
* niceindices:                           Functions and Variables for Series.
                                                             (line   80)
* niceindicespref:                       Functions and Variables for Series.
                                                             (line  115)
* ninth:                                 Functions and Variables for Lists.
                                                             (line  329)
* nm:                                    Functions and Variables for ctensor.
                                                             (line 1262)
* nmc:                                   Functions and Variables for ctensor.
                                                             (line 1266)
* noeval:                                Functions and Variables for Evaluation.
                                                             (line  589)
* nofix:                                 User defined operators.
                                                             (line  221)
* nolabels:                              Functions and Variables for Command Line.
                                                             (line  423)
* nonarray:                              Functions and Variables for Properties.
                                                             (line  411)
* noncentral_moment:                     Functions and Variables for descriptive statistics.
                                                             (line  117)
* Noncommutative exponentiation:         Arithmetic operators.
                                                             (line  190)
* Noncommutative multiplication:         Arithmetic operators.
                                                             (line  209)
* nonegative_lp:                         Functions and Variables for simplex.
                                                             (line   91)
* noninteger:                            Functions and Variables for Properties.
                                                             (line  377)
* nonmetricity:                          Functions and Variables for ctensor.
                                                             (line  669)
* nonnegintegerp:                        Functions and Variables for Numbers.
                                                             (line  160)
* nonscalar:                             Functions and Variables for Properties.
                                                             (line  432)
* nonscalarp:                            Functions and Variables for Properties.
                                                             (line  439)
* nonzeroandfreeof:                      Package functs.     (line   61)
* not:                                   Logical operators.  (line   30)
* Not equal (syntactic inequality):      Operators for Equations.
                                                             (line    7)
* notequal:                              Functions and Variables for Predicates.
                                                             (line  157)
* noun:                                  Functions and Variables for Expressions.
                                                             (line  490)
* noundisp:                              Functions and Variables for Expressions.
                                                             (line  509)
* nounify:                               Functions and Variables for Expressions.
                                                             (line  516)
* nouns:                                 Functions and Variables for Evaluation.
                                                             (line  595)
* np:                                    Functions and Variables for ctensor.
                                                             (line 1234)
* npi:                                   Functions and Variables for ctensor.
                                                             (line 1238)
* nptetrad:                              Functions and Variables for ctensor.
                                                             (line  490)
* npv:                                   Functions and Variables for finance.
                                                             (line  216)
* nroots:                                Functions and Variables for Equations.
                                                             (line  593)
* nterms:                                Functions and Variables for Expressions.
                                                             (line  526)
* ntermst:                               Functions and Variables for ctensor.
                                                             (line  843)
* nthroot:                               Functions and Variables for Equations.
                                                             (line  605)
* nticks <1>:                            Functions and Variables for draw.
                                                             (line 1392)
* nticks:                                Plotting Options.   (line  133)
* ntrig:                                 Functions and Variables for Trigonometric.
                                                             (line  225)
* nullity:                               Functions and Variables for linearalgebra.
                                                             (line  508)
* nullspace:                             Functions and Variables for linearalgebra.
                                                             (line  501)
* num:                                   Functions and Variables for Polynomials.
                                                             (line  796)
* num_distinct_partitions:               Functions and Variables for Sets.
                                                             (line  678)
* num_partitions:                        Functions and Variables for Sets.
                                                             (line  699)
* numbered_boundaries:                   Functions and Variables for worldmap.
                                                             (line   24)
* numberp:                               Functions and Variables for Numbers.
                                                             (line  164)
* numer:                                 Functions and Variables for Numbers.
                                                             (line  192)
* numer_pbranch:                         Functions and Variables for Numbers.
                                                             (line  211)
* numerval:                              Functions and Variables for Numbers.
                                                             (line  240)
* numfactor:                             Gamma and factorial Functions.
                                                             (line  730)
* nusum:                                 Functions and Variables for Series.
                                                             (line  145)
* nzeta:                                 Functions and Variables for Special Functions.
                                                             (line  154)
* nzetai:                                Functions and Variables for Special Functions.
                                                             (line  163)
* nzetar:                                Functions and Variables for Special Functions.
                                                             (line  159)
* obase:                                 Functions and Variables for Display.
                                                             (line  471)
* odd:                                   Functions and Variables for Properties.
                                                             (line  263)
* odd_girth:                             Functions and Variables for graphs.
                                                             (line  973)
* oddfun:                                Functions and Variables for Simplification.
                                                             (line  164)
* oddp:                                  Functions and Variables for Numbers.
                                                             (line  250)
* ode2:                                  Functions and Variables for Differential Equations.
                                                             (line   93)
* ode_check:                             Functions and Variables for contrib_ode.
                                                             (line   42)
* odelin:                                Functions and Variables for contrib_ode.
                                                             (line   12)
* op:                                    Functions and Variables for Expressions.
                                                             (line  534)
* opena:                                 Functions and Variables for input and output.
                                                             (line   55)
* opena_binary:                          Functions and Variables for binary input and output.
                                                             (line   28)
* openr:                                 Functions and Variables for input and output.
                                                             (line   60)
* openr_binary:                          Functions and Variables for binary input and output.
                                                             (line   18)
* openw:                                 Functions and Variables for input and output.
                                                             (line   65)
* openw_binary:                          Functions and Variables for binary input and output.
                                                             (line   23)
* operatorp:                             Functions and Variables for Expressions.
                                                             (line  583)
* opproperties:                          Functions and Variables for Simplification.
                                                             (line  496)
* opsubst <1>:                           Functions and Variables for opsubst.
                                                             (line    8)
* opsubst:                               Functions and Variables for Expressions.
                                                             (line  591)
* optimize:                              Functions and Variables for Expressions.
                                                             (line  599)
* optimprefix:                           Functions and Variables for Expressions.
                                                             (line  607)
* optionset:                             Functions and Variables for Command Line.
                                                             (line  442)
* or:                                    Logical operators.  (line   43)
* orbit:                                 Functions and Variables for Symmetries.
                                                             (line  410)
* orbits:                                Functions and Variables for dynamics.
                                                             (line  110)
* ordergreat:                            Functions and Variables for Expressions.
                                                             (line  614)
* ordergreatp:                           Functions and Variables for Expressions.
                                                             (line  632)
* orderless:                             Functions and Variables for Expressions.
                                                             (line  615)
* orderlessp:                            Functions and Variables for Expressions.
                                                             (line  633)
* orthogonal_complement:                 Functions and Variables for linearalgebra.
                                                             (line  512)
* orthopoly_recur:                       Functions and Variables for orthogonal polynomials.
                                                             (line   81)
* orthopoly_returns_intervals:           Functions and Variables for orthogonal polynomials.
                                                             (line  110)
* orthopoly_weight:                      Functions and Variables for orthogonal polynomials.
                                                             (line  120)
* out_neighbors:                         Functions and Variables for graphs.
                                                             (line  985)
* outative:                              Functions and Variables for Simplification.
                                                             (line  504)
* outchar:                               Functions and Variables for Command Line.
                                                             (line  460)
* outermap:                              Functions and Variables for Program Flow.
                                                             (line  597)
* outofpois:                             Poisson series.     (line   11)
* packagefile:                           Functions and Variables for Miscellaneous Options.
                                                             (line   57)
* pade:                                  Functions and Variables for Series.
                                                             (line  196)
* palette <1>:                           Plotting Options.   (line  144)
* palette <2>:                           Functions and Variables for draw.
                                                             (line 1413)
* palette:                               Plotting Options.   (line  143)
* parabolic_cylinder_d:                  Parabolic Cylinder Functions.
                                                             (line   13)
* parametric:                            Functions and Variables for draw.
                                                             (line 3061)
* parametric_surface:                    Functions and Variables for draw.
                                                             (line 3103)
* parg:                                  Functions and Variables for to_poly_solve.
                                                             (line  608)
* parGosper:                             Functions and Variables for zeilberger.
                                                             (line   62)
* parse_string:                          Functions and Variables for strings.
                                                             (line   46)
* part:                                  Functions and Variables for Expressions.
                                                             (line  717)
* part2cont:                             Functions and Variables for Symmetries.
                                                             (line  261)
* partfrac:                              Functions and Variables for Number Theory.
                                                             (line  409)
* partition:                             Functions and Variables for Expressions.
                                                             (line  755)
* partition_set:                         Functions and Variables for Sets.
                                                             (line  723)
* partpol:                               Functions and Variables for Symmetries.
                                                             (line  271)
* partswitch:                            Functions and Variables for Expressions.
                                                             (line  771)
* path_digraph:                          Functions and Variables for graphs.
                                                             (line  253)
* path_graph:                            Functions and Variables for graphs.
                                                             (line  257)
* pathname_directory:                    Functions and Variables for File Input and Output.
                                                             (line  313)
* pathname_name:                         Functions and Variables for File Input and Output.
                                                             (line  314)
* pathname_type:                         Functions and Variables for File Input and Output.
                                                             (line  315)
* pdf_bernoulli:                         Functions and Variables for discrete distributions.
                                                             (line  241)
* pdf_beta:                              Functions and Variables for continuous distributions.
                                                             (line  896)
* pdf_binomial:                          Functions and Variables for discrete distributions.
                                                             (line  104)
* pdf_cauchy:                            Functions and Variables for continuous distributions.
                                                             (line 1442)
* pdf_chi2:                              Functions and Variables for continuous distributions.
                                                             (line  281)
* pdf_continuous_uniform:                Functions and Variables for continuous distributions.
                                                             (line  963)
* pdf_discrete_uniform:                  Functions and Variables for discrete distributions.
                                                             (line  422)
* pdf_exp:                               Functions and Variables for continuous distributions.
                                                             (line  583)
* pdf_f:                                 Functions and Variables for continuous distributions.
                                                             (line  502)
* pdf_gamma:                             Functions and Variables for continuous distributions.
                                                             (line  823)
* pdf_general_finite_discrete:           Functions and Variables for discrete distributions.
                                                             (line    7)
* pdf_geometric:                         Functions and Variables for discrete distributions.
                                                             (line  364)
* pdf_gumbel:                            Functions and Variables for continuous distributions.
                                                             (line 1472)
* pdf_hypergeometric:                    Functions and Variables for discrete distributions.
                                                             (line  485)
* pdf_laplace:                           Functions and Variables for continuous distributions.
                                                             (line 1384)
* pdf_logistic:                          Functions and Variables for continuous distributions.
                                                             (line 1025)
* pdf_lognormal:                         Functions and Variables for continuous distributions.
                                                             (line  747)
* pdf_negative_binomial:                 Functions and Variables for discrete distributions.
                                                             (line  562)
* pdf_noncentral_chi2:                   Functions and Variables for continuous distributions.
                                                             (line  439)
* pdf_noncentral_student_t:              Functions and Variables for continuous distributions.
                                                             (line  169)
* pdf_normal:                            Functions and Variables for continuous distributions.
                                                             (line    7)
* pdf_pareto:                            Functions and Variables for continuous distributions.
                                                             (line 1083)
* pdf_poisson:                           Functions and Variables for discrete distributions.
                                                             (line  175)
* pdf_rank_sum:                          Functions and Variables for special distributions.
                                                             (line   23)
* pdf_rayleigh:                          Functions and Variables for continuous distributions.
                                                             (line 1199)
* pdf_signed_rank:                       Functions and Variables for special distributions.
                                                             (line    7)
* pdf_student_t:                         Functions and Variables for continuous distributions.
                                                             (line   87)
* pdf_weibull:                           Functions and Variables for continuous distributions.
                                                             (line 1141)
* pearson_skewness:                      Functions and Variables for descriptive statistics.
                                                             (line  452)
* permanent:                             Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1089)
* permut:                                Functions and Variables for Symmetries.
                                                             (line  899)
* permutation:                           Package functs.     (line  205)
* permutations:                          Functions and Variables for Sets.
                                                             (line  744)
* petersen_graph:                        Functions and Variables for graphs.
                                                             (line  261)
* petrov:                                Functions and Variables for ctensor.
                                                             (line  536)
* pfeformat:                             Functions and Variables for Display.
                                                             (line  506)
* phi:                                   Functions and Variables for Constants.
                                                             (line   49)
* pi:                                    Functions and Variables for Constants.
                                                             (line  105)
* pickapart:                             Functions and Variables for Expressions.
                                                             (line  779)
* picture_equalp:                        Functions and Variables for pictures.
                                                             (line   80)
* picturep:                              Functions and Variables for pictures.
                                                             (line   84)
* piece:                                 Functions and Variables for Expressions.
                                                             (line  866)
* piechart:                              Functions and Variables for statistical graphs.
                                                             (line  289)
* piechart_description:                  Functions and Variables for statistical graphs.
                                                             (line  296)
* planar_embedding:                      Functions and Variables for graphs.
                                                             (line  998)
* playback:                              Functions and Variables for Command Line.
                                                             (line  487)
* plog:                                  Root Exponential and Logarithmic Functions.
                                                             (line  235)
* plot2d:                                Functions and Variables for Plotting.
                                                             (line   90)
* plot3d:                                Functions and Variables for Plotting.
                                                             (line  237)
* plot_format:                           Plotting Options.   (line  172)
* plot_options:                          Functions and Variables for Plotting.
                                                             (line  344)
* plot_realpart:                         Plotting Options.   (line  182)
* plotdf:                                Functions and Variables for plotdf.
                                                             (line    9)
* plsquares:                             Functions and Variables for lsquares.
                                                             (line  389)
* pochhammer:                            Functions and Variables for orthogonal polynomials.
                                                             (line  138)
* pochhammer_max_index:                  Functions and Variables for orthogonal polynomials.
                                                             (line  170)
* point_size:                            Functions and Variables for draw.
                                                             (line 1489)
* point_type <1>:                        Plotting Options.   (line  196)
* point_type:                            Functions and Variables for draw.
                                                             (line 1511)
* points:                                Functions and Variables for draw.
                                                             (line 3138)
* points_joined:                         Functions and Variables for draw.
                                                             (line 1554)
* poisdiff:                              Poisson series.     (line   19)
* poisexpt:                              Poisson series.     (line   24)
* poisint:                               Poisson series.     (line   29)
* poislim:                               Poisson series.     (line   35)
* poismap:                               Poisson series.     (line   44)
* poisplus:                              Poisson series.     (line   51)
* poissimp:                              Poisson series.     (line   55)
* poisson:                               Poisson series.     (line   60)
* poissubst:                             Poisson series.     (line   65)
* poistimes:                             Poisson series.     (line   85)
* poistrim:                              Poisson series.     (line   89)
* polar:                                 Functions and Variables for draw.
                                                             (line 3296)
* polar_to_xy:                           Functions and Variables for Plotting.
                                                             (line   83)
* polarform:                             Functions for Complex Numbers.
                                                             (line  134)
* polartorect:                           Functions and Variables for fast Fourier transform.
                                                             (line    7)
* poly_add:                              Functions and Variables for grobner.
                                                             (line   95)
* poly_buchberger:                       Functions and Variables for grobner.
                                                             (line  215)
* poly_buchberger_criterion:             Functions and Variables for grobner.
                                                             (line  208)
* poly_coefficient_ring:                 Functions and Variables for grobner.
                                                             (line   18)
* poly_colon_ideal:                      Functions and Variables for grobner.
                                                             (line  274)
* poly_content:                          Functions and Variables for grobner.
                                                             (line  177)
* poly_depends_p:                        Functions and Variables for grobner.
                                                             (line  263)
* poly_elimination_ideal:                Functions and Variables for grobner.
                                                             (line  268)
* poly_elimination_order:                Functions and Variables for grobner.
                                                             (line   41)
* poly_exact_divide:                     Functions and Variables for grobner.
                                                             (line  197)
* poly_expand:                           Functions and Variables for grobner.
                                                             (line  140)
* poly_expt:                             Functions and Variables for grobner.
                                                             (line  169)
* poly_gcd:                              Functions and Variables for grobner.
                                                             (line  291)
* poly_grobner:                          Functions and Variables for grobner.
                                                             (line  253)
* poly_grobner_algorithm:                Functions and Variables for grobner.
                                                             (line   66)
* poly_grobner_debug:                    Functions and Variables for grobner.
                                                             (line   60)
* poly_grobner_equal:                    Functions and Variables for grobner.
                                                             (line  309)
* poly_grobner_member:                   Functions and Variables for grobner.
                                                             (line  330)
* poly_grobner_subsetp:                  Functions and Variables for grobner.
                                                             (line  323)
* poly_ideal_intersection:               Functions and Variables for grobner.
                                                             (line  283)
* poly_ideal_polysaturation:             Functions and Variables for grobner.
                                                             (line  374)
* poly_ideal_polysaturation1:            Functions and Variables for grobner.
                                                             (line  362)
* poly_ideal_saturation:                 Functions and Variables for grobner.
                                                             (line  351)
* poly_ideal_saturation1:                Functions and Variables for grobner.
                                                             (line  340)
* poly_lcm:                              Functions and Variables for grobner.
                                                             (line  287)
* poly_minimization:                     Functions and Variables for grobner.
                                                             (line  240)
* poly_monomial_order:                   Functions and Variables for grobner.
                                                             (line   10)
* poly_multiply:                         Functions and Variables for grobner.
                                                             (line  111)
* poly_normal_form:                      Functions and Variables for grobner.
                                                             (line  203)
* poly_normalize:                        Functions and Variables for grobner.
                                                             (line  131)
* poly_normalize_list:                   Functions and Variables for grobner.
                                                             (line  247)
* poly_polysaturation_extension:         Functions and Variables for grobner.
                                                             (line  388)
* poly_primary_elimination_order:        Functions and Variables for grobner.
                                                             (line   27)
* poly_primitive_part:                   Functions and Variables for grobner.
                                                             (line  123)
* poly_pseudo_divide:                    Functions and Variables for grobner.
                                                             (line  184)
* poly_reduced_grobner:                  Functions and Variables for grobner.
                                                             (line  258)
* poly_reduction:                        Functions and Variables for grobner.
                                                             (line  234)
* poly_return_term_list:                 Functions and Variables for grobner.
                                                             (line   52)
* poly_s_polynomial:                     Functions and Variables for grobner.
                                                             (line  118)
* poly_saturation_extension:             Functions and Variables for grobner.
                                                             (line  383)
* poly_secondary_elimination_order:      Functions and Variables for grobner.
                                                             (line   34)
* poly_subtract:                         Functions and Variables for grobner.
                                                             (line  103)
* poly_top_reduction_only:               Functions and Variables for grobner.
                                                             (line   79)
* polydecomp:                            Functions and Variables for Polynomials.
                                                             (line  803)
* polyfactor:                            Functions and Variables for Equations.
                                                             (line  613)
* polygon:                               Functions and Variables for draw.
                                                             (line 3322)
* polymod:                               Functions and Variables for Polynomials.
                                                             (line  855)
* polynome2ele:                          Functions and Variables for Symmetries.
                                                             (line  544)
* polynomialp:                           Functions and Variables for linearalgebra.
                                                             (line  521)
* polytocompanion:                       Functions and Variables for linearalgebra.
                                                             (line  557)
* pop:                                   Functions and Variables for Lists.
                                                             (line  334)
* posfun:                                Functions and Variables for Properties.
                                                             (line  446)
* postfix:                               User defined operators.
                                                             (line  235)
* potential:                             Functions and Variables for Integration.
                                                             (line  512)
* power_mod:                             Functions and Variables for Number Theory.
                                                             (line  434)
* powerdisp:                             Functions and Variables for Display.
                                                             (line  531)
* powers:                                Functions and Variables for Polynomials.
                                                             (line  867)
* powerseries:                           Functions and Variables for Series.
                                                             (line  259)
* powerset:                              Functions and Variables for Sets.
                                                             (line  764)
* pred:                                  Functions and Variables for Evaluation.
                                                             (line  603)
* prederror:                             Functions and Variables for Program Flow.
                                                             (line  526)
* prefix:                                User defined operators.
                                                             (line  246)
* prev_prime:                            Functions and Variables for Number Theory.
                                                             (line  472)
* Previous input:                        Functions and Variables for Command Line.
                                                             (line   47)
* Previous output:                       Functions and Variables for Command Line.
                                                             (line   92)
* Previous result in compound expression: Functions and Variables for Command Line.
                                                             (line  106)
* primep:                                Functions and Variables for Number Theory.
                                                             (line  449)
* primep_number_of_tests:                Functions and Variables for Number Theory.
                                                             (line  466)
* print:                                 Functions and Variables for Display.
                                                             (line  556)
* print_graph:                           Functions and Variables for graphs.
                                                             (line 1014)
* printf:                                Functions and Variables for input and output.
                                                             (line   71)
* printfile:                             Functions and Variables for File Input and Output.
                                                             (line  328)
* printpois:                             Poisson series.     (line   98)
* printprops:                            Functions and Variables for Properties.
                                                             (line  455)
* prodrac:                               Functions and Variables for Symmetries.
                                                             (line  557)
* product:                               Sums and Products.  (line   48)
* product_use_gamma:                     Functions and Variables for solve_rec.
                                                             (line  175)
* program:                               Functions and Variables for graphs.
                                                             (line 1666)
* programmode:                           Functions and Variables for Equations.
                                                             (line  624)
* prompt:                                Functions and Variables for Command Line.
                                                             (line  537)
* properties:                            Functions and Variables for Properties.
                                                             (line  465)
* proportional_axes:                     Functions and Variables for draw.
                                                             (line 1586)
* props:                                 Functions and Variables for Properties.
                                                             (line  470)
* propvars:                              Functions and Variables for Properties.
                                                             (line  481)
* psexpand:                              Functions and Variables for Series.
                                                             (line  304)
* psfile:                                Plotting Options.   (line  210)
* psi <1>:                               Functions and Variables for ctensor.
                                                             (line  513)
* psi:                                   Gamma and factorial Functions.
                                                             (line  672)
* psubst:                                Functions and Variables for Expressions.
                                                             (line  873)
* ptriangularize:                        Functions and Variables for linearalgebra.
                                                             (line  565)
* pui:                                   Functions and Variables for Symmetries.
                                                             (line  124)
* pui2comp:                              Functions and Variables for Symmetries.
                                                             (line  151)
* pui2ele:                               Functions and Variables for Symmetries.
                                                             (line  178)
* pui2polynome:                          Functions and Variables for Symmetries.
                                                             (line  565)
* pui_direct:                            Functions and Variables for Symmetries.
                                                             (line  425)
* puireduc:                              Functions and Variables for Symmetries.
                                                             (line  188)
* push:                                  Functions and Variables for Lists.
                                                             (line  348)
* put:                                   Functions and Variables for Properties.
                                                             (line  487)
* pv:                                    Functions and Variables for finance.
                                                             (line   30)
* qput:                                  Functions and Variables for Properties.
                                                             (line  514)
* qrange:                                Functions and Variables for descriptive statistics.
                                                             (line  277)
* qty:                                   Functions and Variables for ezunits.
                                                             (line  362)
* quad_control:                          Functions and Variables for QUADPACK.
                                                             (line  704)
* quad_qag:                              Functions and Variables for QUADPACK.
                                                             (line   10)
* quad_qagi:                             Functions and Variables for QUADPACK.
                                                             (line  171)
* quad_qagp:                             Functions and Variables for QUADPACK.
                                                             (line  621)
* quad_qags:                             Functions and Variables for QUADPACK.
                                                             (line   93)
* quad_qawc:                             Functions and Variables for QUADPACK.
                                                             (line  257)
* quad_qawf:                             Functions and Variables for QUADPACK.
                                                             (line  347)
* quad_qawo:                             Functions and Variables for QUADPACK.
                                                             (line  435)
* quad_qaws:                             Functions and Variables for QUADPACK.
                                                             (line  527)
* quadrilateral:                         Functions and Variables for draw.
                                                             (line 3347)
* quantile:                              Functions and Variables for descriptive statistics.
                                                             (line  234)
* quantile_bernoulli:                    Functions and Variables for discrete distributions.
                                                             (line  263)
* quantile_beta:                         Functions and Variables for continuous distributions.
                                                             (line  915)
* quantile_binomial:                     Functions and Variables for discrete distributions.
                                                             (line  125)
* quantile_cauchy:                       Functions and Variables for continuous distributions.
                                                             (line 1454)
* quantile_chi2:                         Functions and Variables for continuous distributions.
                                                             (line  316)
* quantile_continuous_uniform:           Functions and Variables for continuous distributions.
                                                             (line  975)
* quantile_discrete_uniform:             Functions and Variables for discrete distributions.
                                                             (line  434)
* quantile_exp:                          Functions and Variables for continuous distributions.
                                                             (line  621)
* quantile_f:                            Functions and Variables for continuous distributions.
                                                             (line  521)
* quantile_gamma:                        Functions and Variables for continuous distributions.
                                                             (line  842)
* quantile_general_finite_discrete:      Functions and Variables for discrete distributions.
                                                             (line   47)
* quantile_geometric:                    Functions and Variables for discrete distributions.
                                                             (line  376)
* quantile_gumbel:                       Functions and Variables for continuous distributions.
                                                             (line 1484)
* quantile_hypergeometric:               Functions and Variables for discrete distributions.
                                                             (line  505)
* quantile_laplace:                      Functions and Variables for continuous distributions.
                                                             (line 1396)
* quantile_logistic:                     Functions and Variables for continuous distributions.
                                                             (line 1037)
* quantile_lognormal:                    Functions and Variables for continuous distributions.
                                                             (line  769)
* quantile_negative_binomial:            Functions and Variables for discrete distributions.
                                                             (line  582)
* quantile_noncentral_chi2:              Functions and Variables for continuous distributions.
                                                             (line  453)
* quantile_noncentral_student_t:         Functions and Variables for continuous distributions.
                                                             (line  207)
* quantile_normal:                       Functions and Variables for continuous distributions.
                                                             (line   29)
* quantile_pareto:                       Functions and Variables for continuous distributions.
                                                             (line 1095)
* quantile_poisson:                      Functions and Variables for discrete distributions.
                                                             (line  192)
* quantile_rayleigh:                     Functions and Variables for continuous distributions.
                                                             (line 1239)
* quantile_student_t:                    Functions and Variables for continuous distributions.
                                                             (line  108)
* quantile_weibull:                      Functions and Variables for continuous distributions.
                                                             (line 1153)
* quartile_skewness:                     Functions and Variables for descriptive statistics.
                                                             (line  476)
* quit:                                  Functions and Variables for Command Line.
                                                             (line  544)
* qunit:                                 Functions and Variables for Number Theory.
                                                             (line  479)
* Quote operator:                        Functions and Variables for Evaluation.
                                                             (line    7)
* Quote-quote operator:                  Functions and Variables for Evaluation.
                                                             (line  102)
* quotient:                              Functions and Variables for Polynomials.
                                                             (line  874)
* radcan:                                Functions and Variables for Simplification.
                                                             (line  536)
* radexpand:                             Functions and Variables for Simplification.
                                                             (line  565)
* radius:                                Functions and Variables for graphs.
                                                             (line 1041)
* radsubstflag:                          Functions and Variables for Polynomials.
                                                             (line 1245)
* random:                                Random Numbers.     (line   33)
* random_bernoulli:                      Functions and Variables for discrete distributions.
                                                             (line  352)
* random_beta:                           Functions and Variables for continuous distributions.
                                                             (line  950)
* random_binomial:                       Functions and Variables for discrete distributions.
                                                             (line  162)
* random_bipartite_graph:                Functions and Variables for graphs.
                                                             (line  267)
* random_cauchy:                         Functions and Variables for continuous distributions.
                                                             (line 1461)
* random_chi2:                           Functions and Variables for continuous distributions.
                                                             (line  427)
* random_continuous_uniform:             Functions and Variables for continuous distributions.
                                                             (line 1013)
* random_digraph:                        Functions and Variables for graphs.
                                                             (line  272)
* random_discrete_uniform:               Functions and Variables for discrete distributions.
                                                             (line  472)
* random_exp:                            Functions and Variables for continuous distributions.
                                                             (line  737)
* random_f:                              Functions and Variables for continuous distributions.
                                                             (line  568)
* random_gamma:                          Functions and Variables for continuous distributions.
                                                             (line  878)
* random_general_finite_discrete:        Functions and Variables for discrete distributions.
                                                             (line   89)
* random_geometric:                      Functions and Variables for discrete distributions.
                                                             (line  411)
* random_graph:                          Functions and Variables for graphs.
                                                             (line  283)
* random_graph1:                         Functions and Variables for graphs.
                                                             (line  288)
* random_gumbel:                         Functions and Variables for continuous distributions.
                                                             (line 1533)
* random_hypergeometric:                 Functions and Variables for discrete distributions.
                                                             (line  549)
* random_laplace:                        Functions and Variables for continuous distributions.
                                                             (line 1431)
* random_logistic:                       Functions and Variables for continuous distributions.
                                                             (line 1073)
* random_lognormal:                      Functions and Variables for continuous distributions.
                                                             (line  812)
* random_negative_binomial:              Functions and Variables for discrete distributions.
                                                             (line  621)
* random_network:                        Functions and Variables for graphs.
                                                             (line  292)
* random_noncentral_chi2:                Functions and Variables for continuous distributions.
                                                             (line  493)
* random_noncentral_student_t:           Functions and Variables for continuous distributions.
                                                             (line  261)
* random_normal:                         Functions and Variables for continuous distributions.
                                                             (line   75)
* random_pareto:                         Functions and Variables for continuous distributions.
                                                             (line 1131)
* random_permutation:                    Functions and Variables for Sets.
                                                             (line  792)
* random_poisson:                        Functions and Variables for discrete distributions.
                                                             (line  227)
* random_rayleigh:                       Functions and Variables for continuous distributions.
                                                             (line 1374)
* random_regular_graph:                  Functions and Variables for graphs.
                                                             (line  277)
* random_student_t:                      Functions and Variables for continuous distributions.
                                                             (line  150)
* random_tournament:                     Functions and Variables for graphs.
                                                             (line  306)
* random_tree:                           Functions and Variables for graphs.
                                                             (line  310)
* random_weibull:                        Functions and Variables for continuous distributions.
                                                             (line 1188)
* range:                                 Functions and Variables for descriptive statistics.
                                                             (line  219)
* rank <1>:                              Functions and Variables for linearalgebra.
                                                             (line  586)
* rank:                                  Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1097)
* rassociative:                          Functions and Variables for Simplification.
                                                             (line  587)
* rat:                                   Functions and Variables for Polynomials.
                                                             (line  883)
* ratalgdenom:                           Functions and Variables for Polynomials.
                                                             (line  935)
* ratchristof:                           Functions and Variables for ctensor.
                                                             (line 1148)
* ratcoef:                               Functions and Variables for Polynomials.
                                                             (line  944)
* ratdenom:                              Functions and Variables for Polynomials.
                                                             (line  972)
* ratdenomdivide:                        Functions and Variables for Polynomials.
                                                             (line  986)
* ratdiff:                               Functions and Variables for Polynomials.
                                                             (line 1031)
* ratdisrep:                             Functions and Variables for Polynomials.
                                                             (line 1074)
* rateinstein:                           Functions and Variables for ctensor.
                                                             (line 1152)
* ratepsilon:                            Functions and Variables for Numbers.
                                                             (line  255)
* ratexpand:                             Functions and Variables for Polynomials.
                                                             (line 1086)
* ratfac:                                Functions and Variables for Polynomials.
                                                             (line 1135)
* ratinterpol:                           Functions and Variables for interpol.
                                                             (line  279)
* rational <1>:                          Functions and Variables for Properties.
                                                             (line  540)
* rational:                              Package functs.     (line   34)
* rationalize:                           Functions and Variables for Numbers.
                                                             (line  263)
* ratmx:                                 Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1105)
* ratnumer:                              Functions and Variables for Polynomials.
                                                             (line 1158)
* ratnump:                               Functions and Variables for Numbers.
                                                             (line  329)
* ratp:                                  Functions and Variables for Polynomials.
                                                             (line 1172)
* ratprint:                              Functions and Variables for Polynomials.
                                                             (line 1180)
* ratriemann:                            Functions and Variables for ctensor.
                                                             (line 1160)
* ratsimp:                               Functions and Variables for Polynomials.
                                                             (line 1188)
* ratsimpexpons:                         Functions and Variables for Polynomials.
                                                             (line 1238)
* ratsubst:                              Functions and Variables for Polynomials.
                                                             (line 1252)
* ratvars:                               Functions and Variables for Polynomials.
                                                             (line 1291)
* ratvarswitch:                          Functions and Variables for Polynomials.
                                                             (line 1311)
* ratweight:                             Functions and Variables for Polynomials.
                                                             (line 1364)
* ratweights:                            Functions and Variables for Polynomials.
                                                             (line 1392)
* ratweyl:                               Functions and Variables for ctensor.
                                                             (line 1169)
* ratwtlvl:                              Functions and Variables for Polynomials.
                                                             (line 1402)
* read:                                  Functions and Variables for Command Line.
                                                             (line  554)
* read_array:                            Functions and Variables for plain-text input and output.
                                                             (line   28)
* read_binary_array:                     Functions and Variables for binary input and output.
                                                             (line   44)
* read_binary_list:                      Functions and Variables for binary input and output.
                                                             (line   57)
* read_binary_matrix:                    Functions and Variables for binary input and output.
                                                             (line   33)
* read_hashed_array:                     Functions and Variables for plain-text input and output.
                                                             (line   42)
* read_list:                             Functions and Variables for plain-text input and output.
                                                             (line   72)
* read_matrix:                           Functions and Variables for plain-text input and output.
                                                             (line    7)
* read_nested_list:                      Functions and Variables for plain-text input and output.
                                                             (line   58)
* read_xpm:                              Functions and Variables for pictures.
                                                             (line   89)
* readline:                              Functions and Variables for input and output.
                                                             (line  128)
* readonly:                              Functions and Variables for Command Line.
                                                             (line  572)
* real:                                  Functions and Variables for Properties.
                                                             (line  548)
* Real infinity:                         Functions and Variables for Constants.
                                                             (line   37)
* real_imagpart_to_conjugate:            Functions and Variables for to_poly_solve.
                                                             (line  651)
* realonly:                              Functions and Variables for Equations.
                                                             (line  638)
* realpart:                              Functions for Complex Numbers.
                                                             (line  139)
* realroots:                             Functions and Variables for Equations.
                                                             (line  648)
* rearray:                               Functions and Variables for Arrays.
                                                             (line  403)
* rectangle:                             Functions and Variables for draw.
                                                             (line 3379)
* rectform:                              Functions for Complex Numbers.
                                                             (line  145)
* rectform_log_if_constant:              Functions and Variables for to_poly_solve.
                                                             (line  670)
* recttopolar:                           Functions and Variables for fast Fourier transform.
                                                             (line   25)
* rediff:                                Functions and Variables for itensor.
                                                             (line  668)
* redraw:                                Functions and Variables for graphs.
                                                             (line 1631)
* reduce_consts:                         Package rducon.     (line    7)
* reduce_order:                          Functions and Variables for solve_rec.
                                                             (line    7)
* refcheck:                              Functions and Variables for Debugging.
                                                             (line   18)
* region:                                Functions and Variables for draw.
                                                             (line 3409)
* region_boundaries:                     Functions and Variables for worldmap.
                                                             (line  122)
* region_boundaries_plus:                Functions and Variables for worldmap.
                                                             (line  136)
* rem:                                   Functions and Variables for Properties.
                                                             (line  558)
* remainder:                             Functions and Variables for Polynomials.
                                                             (line 1410)
* remarray:                              Functions and Variables for Arrays.
                                                             (line  412)
* rembox:                                Functions and Variables for Expressions.
                                                             (line  894)
* remcomps:                              Functions and Variables for itensor.
                                                             (line  289)
* remcon:                                Functions and Variables for itensor.
                                                             (line  176)
* remcoord:                              Functions and Variables for itensor.
                                                             (line  774)
* remfun:                                Functions and Variables for Fourier series.
                                                             (line   12)
* remfunction:                           Functions and Variables for Function Definition.
                                                             (line 1024)
* remlet:                                Functions and Variables for Rules and Patterns.
                                                             (line  544)
* remove:                                Functions and Variables for Properties.
                                                             (line  567)
* remove_constvalue:                     Functions and Variables for ezunits.
                                                             (line  259)
* remove_dimensions:                     Functions and Variables for ezunits.
                                                             (line  492)
* remove_edge:                           Functions and Variables for graphs.
                                                             (line 1333)
* remove_fundamental_dimensions:         Functions and Variables for ezunits.
                                                             (line  522)
* remove_fundamental_units:              Functions and Variables for ezunits.
                                                             (line  554)
* remove_vertex:                         Functions and Variables for graphs.
                                                             (line 1348)
* rempart:                               Package functs.     (line    7)
* remrule:                               Functions and Variables for Rules and Patterns.
                                                             (line  565)
* remsym:                                Functions and Variables for itensor.
                                                             (line  583)
* remvalue:                              Functions and Variables for Miscellaneous Options.
                                                             (line   72)
* rename:                                Functions and Variables for itensor.
                                                             (line   78)
* reset:                                 Functions and Variables for Command Line.
                                                             (line  594)
* residue:                               Functions and Variables for Integration.
                                                             (line  524)
* resolvante:                            Functions and Variables for Symmetries.
                                                             (line  594)
* resolvante_alternee1:                  Functions and Variables for Symmetries.
                                                             (line  779)
* resolvante_bipartite:                  Functions and Variables for Symmetries.
                                                             (line  789)
* resolvante_diedrale:                   Functions and Variables for Symmetries.
                                                             (line  803)
* resolvante_klein:                      Functions and Variables for Symmetries.
                                                             (line  822)
* resolvante_klein3:                     Functions and Variables for Symmetries.
                                                             (line  832)
* resolvante_produit_sym:                Functions and Variables for Symmetries.
                                                             (line  842)
* resolvante_unitaire:                   Functions and Variables for Symmetries.
                                                             (line  869)
* resolvante_vierer:                     Functions and Variables for Symmetries.
                                                             (line  879)
* rest:                                  Functions and Variables for Lists.
                                                             (line  388)
* resultant:                             Functions and Variables for Polynomials.
                                                             (line 1458)
* return:                                Functions and Variables for Program Flow.
                                                             (line  540)
* reveal:                                Functions and Variables for Expressions.
                                                             (line  963)
* reverse:                               Functions and Variables for Lists.
                                                             (line  396)
* revert:                                Functions and Variables for Series.
                                                             (line  318)
* revert2:                               Functions and Variables for Series.
                                                             (line  319)
* rgb2level:                             Functions and Variables for pictures.
                                                             (line   93)
* rhs:                                   Functions and Variables for Equations.
                                                             (line  693)
* ric:                                   Functions and Variables for ctensor.
                                                             (line 1205)
* ricci:                                 Functions and Variables for ctensor.
                                                             (line  212)
* riem:                                  Functions and Variables for ctensor.
                                                             (line 1188)
* riemann:                               Functions and Variables for ctensor.
                                                             (line  256)
* rinvariant:                            Functions and Variables for ctensor.
                                                             (line  300)
* risch:                                 Functions and Variables for Integration.
                                                             (line  541)
* rk:                                    Functions and Variables for dynamics.
                                                             (line  126)
* rmxchar:                               Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1125)
* rncombine:                             Functions and Variables for Miscellaneous Options.
                                                             (line   84)
* romberg:                               Functions and Variables for romberg.
                                                             (line    7)
* rombergabs:                            Functions and Variables for romberg.
                                                             (line  108)
* rombergit:                             Functions and Variables for romberg.
                                                             (line  122)
* rombergmin:                            Functions and Variables for romberg.
                                                             (line  134)
* rombergtol:                            Functions and Variables for romberg.
                                                             (line  144)
* room:                                  Functions and Variables for Runtime Environment.
                                                             (line   37)
* rootsconmode:                          Functions and Variables for Equations.
                                                             (line  735)
* rootscontract:                         Functions and Variables for Equations.
                                                             (line  742)
* rootsepsilon:                          Functions and Variables for Equations.
                                                             (line  804)
* round:                                 Functions for Numbers.
                                                             (line  231)
* row:                                   Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1120)
* rowop:                                 Functions and Variables for linearalgebra.
                                                             (line  580)
* rowswap:                               Functions and Variables for linearalgebra.
                                                             (line  597)
* rreduce:                               Functions and Variables for Sets.
                                                             (line  812)
* run_testsuite:                         Functions and Variables for Bug Detection and Reporting.
                                                             (line    7)
* run_viewer:                            Plotting Options.   (line  219)
* save:                                  Functions and Variables for File Input and Output.
                                                             (line  347)
* savedef:                               Functions and Variables for Function Definition.
                                                             (line 1041)
* savefactors:                           Functions and Variables for Polynomials.
                                                             (line 1480)
* saving:                                Functions and Variables for finance.
                                                             (line  188)
* scalar:                                Functions and Variables for Properties.
                                                             (line  606)
* scalarmatrixp:                         Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1134)
* scalarp:                               Functions and Variables for Properties.
                                                             (line  613)
* scaled_bessel_i:                       Bessel Functions.   (line  156)
* scaled_bessel_i0:                      Bessel Functions.   (line  166)
* scaled_bessel_i1:                      Bessel Functions.   (line  170)
* scalefactors:                          Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1148)
* scanmap:                               Functions and Variables for Program Flow.
                                                             (line  546)
* scatterplot:                           Functions and Variables for statistical graphs.
                                                             (line  337)
* scatterplot_description:               Functions and Variables for statistical graphs.
                                                             (line  341)
* schur2comp:                            Functions and Variables for Symmetries.
                                                             (line  205)
* sconcat:                               Functions and Variables for Strings.
                                                             (line   46)
* scopy:                                 Functions and Variables for strings.
                                                             (line   65)
* scsimp:                                Functions and Variables for Simplification.
                                                             (line  593)
* scurvature:                            Functions and Variables for ctensor.
                                                             (line  230)
* sdowncase:                             Functions and Variables for strings.
                                                             (line   71)
* sec:                                   Functions and Variables for Trigonometric.
                                                             (line  232)
* sech:                                  Functions and Variables for Trigonometric.
                                                             (line  236)
* second:                                Functions and Variables for Lists.
                                                             (line  402)
* sequal:                                Functions and Variables for strings.
                                                             (line   76)
* sequalignore:                          Functions and Variables for strings.
                                                             (line   81)
* set_draw_defaults:                     Functions and Variables for draw.
                                                             (line  170)
* set_edge_weight:                       Functions and Variables for graphs.
                                                             (line 1050)
* set_partitions:                        Functions and Variables for Sets.
                                                             (line  932)
* set_plot_option:                       Functions and Variables for Plotting.
                                                             (line  361)
* set_random_state:                      Random Numbers.     (line   27)
* set_tex_environment:                   Functions and Variables for TeX Output.
                                                             (line  210)
* set_tex_environment_default:           Functions and Variables for TeX Output.
                                                             (line  250)
* set_up_dot_simplifications:            Functions and Variables for Affine.
                                                             (line   43)
* set_vertex_label:                      Functions and Variables for graphs.
                                                             (line 1064)
* setcheck:                              Functions and Variables for Debugging.
                                                             (line   25)
* setcheckbreak:                         Functions and Variables for Debugging.
                                                             (line   55)
* setdifference:                         Functions and Variables for Sets.
                                                             (line  854)
* setelmx:                               Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1166)
* setequalp:                             Functions and Variables for Sets.
                                                             (line  879)
* setify:                                Functions and Variables for Sets.
                                                             (line  895)
* setp:                                  Functions and Variables for Sets.
                                                             (line  912)
* setunits:                              Functions and Variables for Units.
                                                             (line    7)
* setup_autoload:                        Functions and Variables for Miscellaneous Options.
                                                             (line  101)
* setval:                                Functions and Variables for Debugging.
                                                             (line   68)
* seventh:                               Functions and Variables for Lists.
                                                             (line  407)
* sexplode:                              Functions and Variables for strings.
                                                             (line   85)
* sf:                                    Functions and Variables for atensor.
                                                             (line   97)
* shortest_path:                         Functions and Variables for graphs.
                                                             (line 1078)
* shortest_weighted_path:                Functions and Variables for graphs.
                                                             (line 1089)
* show:                                  Functions and Variables for itensor.
                                                             (line  137)
* show_edge_color:                       Functions and Variables for graphs.
                                                             (line 1607)
* show_edge_type:                        Functions and Variables for graphs.
                                                             (line 1615)
* show_edge_width:                       Functions and Variables for graphs.
                                                             (line 1611)
* show_edges:                            Functions and Variables for graphs.
                                                             (line 1602)
* show_id:                               Functions and Variables for graphs.
                                                             (line 1516)
* show_label:                            Functions and Variables for graphs.
                                                             (line 1522)
* show_vertex_color:                     Functions and Variables for graphs.
                                                             (line 1572)
* show_vertex_size:                      Functions and Variables for graphs.
                                                             (line 1568)
* show_vertex_type:                      Functions and Variables for graphs.
                                                             (line 1562)
* show_vertices:                         Functions and Variables for graphs.
                                                             (line 1556)
* show_weight:                           Functions and Variables for graphs.
                                                             (line 1535)
* showcomps:                             Functions and Variables for itensor.
                                                             (line  294)
* showratvars:                           Functions and Variables for Polynomials.
                                                             (line 1489)
* showtime:                              Functions and Variables for Command Line.
                                                             (line  605)
* sierpinskiale:                         Definitions for IFS fractals.
                                                             (line   20)
* sierpinskimap:                         Definitions for Peano maps.
                                                             (line   20)
* sign:                                  Functions and Variables for Facts.
                                                             (line  409)
* signum:                                Functions for Numbers.
                                                             (line  237)
* similaritytransform:                   Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1174)
* simp:                                  Functions and Variables for Simplification.
                                                             (line  603)
* simp_inequality:                       Functions and Variables for to_poly_solve.
                                                             (line  694)
* simple_linear_regression:              Functions and Variables for stats.
                                                             (line  825)
* simplified_output:                     Functions and Variables for zeilberger.
                                                             (line  103)
* simplify_products:                     Functions and Variables for solve_rec.
                                                             (line   55)
* simplify_sum:                          Functions and Variables for solve_rec.
                                                             (line   64)
* simplode:                              Functions and Variables for strings.
                                                             (line   90)
* simpmetderiv:                          Functions and Variables for itensor.
                                                             (line  808)
* simpsum:                               Sums and Products.  (line  107)
* simtran:                               Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1175)
* sin:                                   Functions and Variables for Trigonometric.
                                                             (line  240)
* sinh:                                  Functions and Variables for Trigonometric.
                                                             (line  244)
* sinnpiflag:                            Functions and Variables for Fourier series.
                                                             (line   57)
* sinsert:                               Functions and Variables for strings.
                                                             (line  103)
* sinvertcase:                           Functions and Variables for strings.
                                                             (line  116)
* sixth:                                 Functions and Variables for Lists.
                                                             (line  412)
* skewness:                              Functions and Variables for descriptive statistics.
                                                             (line  427)
* skewness_bernoulli:                    Functions and Variables for discrete distributions.
                                                             (line  315)
* skewness_beta:                         Functions and Variables for continuous distributions.
                                                             (line  938)
* skewness_binomial:                     Functions and Variables for discrete distributions.
                                                             (line  150)
* skewness_chi2:                         Functions and Variables for continuous distributions.
                                                             (line  387)
* skewness_continuous_uniform:           Functions and Variables for continuous distributions.
                                                             (line 1000)
* skewness_discrete_uniform:             Functions and Variables for discrete distributions.
                                                             (line  460)
* skewness_exp:                          Functions and Variables for continuous distributions.
                                                             (line  700)
* skewness_f:                            Functions and Variables for continuous distributions.
                                                             (line  555)
* skewness_gamma:                        Functions and Variables for continuous distributions.
                                                             (line  865)
* skewness_general_finite_discrete:      Functions and Variables for discrete distributions.
                                                             (line   75)
* skewness_geometric:                    Functions and Variables for discrete distributions.
                                                             (line  399)
* skewness_gumbel:                       Functions and Variables for continuous distributions.
                                                             (line 1512)
* skewness_hypergeometric:               Functions and Variables for discrete distributions.
                                                             (line  534)
* skewness_laplace:                      Functions and Variables for continuous distributions.
                                                             (line 1419)
* skewness_logistic:                     Functions and Variables for continuous distributions.
                                                             (line 1060)
* skewness_lognormal:                    Functions and Variables for continuous distributions.
                                                             (line  799)
* skewness_negative_binomial:            Functions and Variables for discrete distributions.
                                                             (line  608)
* skewness_noncentral_chi2:              Functions and Variables for continuous distributions.
                                                             (line  480)
* skewness_noncentral_student_t:         Functions and Variables for continuous distributions.
                                                             (line  246)
* skewness_normal:                       Functions and Variables for continuous distributions.
                                                             (line   62)
* skewness_pareto:                       Functions and Variables for continuous distributions.
                                                             (line 1118)
* skewness_poisson:                      Functions and Variables for discrete distributions.
                                                             (line  215)
* skewness_rayleigh:                     Functions and Variables for continuous distributions.
                                                             (line 1323)
* skewness_student_t:                    Functions and Variables for continuous distributions.
                                                             (line  137)
* skewness_weibull:                      Functions and Variables for continuous distributions.
                                                             (line 1176)
* slength:                               Functions and Variables for strings.
                                                             (line  126)
* smake:                                 Functions and Variables for strings.
                                                             (line  130)
* small_rhombicosidodecahedron_graph:    Functions and Variables for graphs.
                                                             (line  314)
* small_rhombicuboctahedron_graph:       Functions and Variables for graphs.
                                                             (line  318)
* smax:                                  Functions and Variables for descriptive statistics.
                                                             (line  202)
* smin:                                  Functions and Variables for descriptive statistics.
                                                             (line  185)
* smismatch:                             Functions and Variables for strings.
                                                             (line  137)
* snowmap:                               Definitions for Koch snowflakes.
                                                             (line    7)
* snub_cube_graph:                       Functions and Variables for graphs.
                                                             (line  322)
* snub_dodecahedron_graph:               Functions and Variables for graphs.
                                                             (line  326)
* solve:                                 Functions and Variables for Equations.
                                                             (line  812)
* solve_rec:                             Functions and Variables for solve_rec.
                                                             (line   87)
* solve_rec_rat:                         Functions and Variables for solve_rec.
                                                             (line  152)
* solvedecomposes:                       Functions and Variables for Equations.
                                                             (line  970)
* solveexplicit:                         Functions and Variables for Equations.
                                                             (line  977)
* solvefactors:                          Functions and Variables for Equations.
                                                             (line  985)
* solvenullwarn:                         Functions and Variables for Equations.
                                                             (line  993)
* solveradcan:                           Functions and Variables for Equations.
                                                             (line 1002)
* solvetrigwarn:                         Functions and Variables for Equations.
                                                             (line 1011)
* some:                                  Functions and Variables for Sets.
                                                             (line  984)
* somrac:                                Functions and Variables for Symmetries.
                                                             (line  583)
* sort:                                  Functions and Variables for Lists.
                                                             (line  418)
* space:                                 Functions and Variables for characters.
                                                             (line   95)
* sparse:                                Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1200)
* sparse6_decode:                        Functions and Variables for graphs.
                                                             (line 1382)
* sparse6_encode:                        Functions and Variables for graphs.
                                                             (line 1387)
* sparse6_export:                        Functions and Variables for graphs.
                                                             (line 1392)
* sparse6_import:                        Functions and Variables for graphs.
                                                             (line 1397)
* specint:                               Functions and Variables for Special Functions.
                                                             (line    7)
* spherical:                             Functions and Variables for draw.
                                                             (line 3430)
* spherical_bessel_j:                    Functions and Variables for orthogonal polynomials.
                                                             (line  187)
* spherical_bessel_y:                    Functions and Variables for orthogonal polynomials.
                                                             (line  194)
* spherical_hankel1:                     Functions and Variables for orthogonal polynomials.
                                                             (line  201)
* spherical_hankel2:                     Functions and Variables for orthogonal polynomials.
                                                             (line  207)
* spherical_harmonic:                    Functions and Variables for orthogonal polynomials.
                                                             (line  213)
* spherical_to_xyz:                      Functions and Variables for Plotting.
                                                             (line  391)
* splice:                                Macros.             (line  179)
* split:                                 Functions and Variables for strings.
                                                             (line  149)
* sposition:                             Functions and Variables for strings.
                                                             (line  165)
* spring_embedding_depth:                Functions and Variables for graphs.
                                                             (line 1650)
* sprint:                                Functions and Variables for input and output.
                                                             (line  134)
* sqfr:                                  Functions and Variables for Polynomials.
                                                             (line 1496)
* sqrt:                                  Root Exponential and Logarithmic Functions.
                                                             (line  240)
* sqrtdenest:                            Package sqdnst.     (line    7)
* sqrtdispflag:                          Functions and Variables for Display.
                                                             (line  592)
* sremove:                               Functions and Variables for strings.
                                                             (line  173)
* sremovefirst:                          Functions and Variables for strings.
                                                             (line  190)
* sreverse:                              Functions and Variables for strings.
                                                             (line  195)
* ssearch:                               Functions and Variables for strings.
                                                             (line  203)
* ssort:                                 Functions and Variables for strings.
                                                             (line  214)
* sstatus:                               Functions and Variables for Runtime Environment.
                                                             (line   49)
* ssubst:                                Functions and Variables for strings.
                                                             (line  230)
* ssubstfirst:                           Functions and Variables for strings.
                                                             (line  250)
* staircase:                             Functions and Variables for dynamics.
                                                             (line  170)
* standardize_inverse_trig:              Functions and Variables for to_poly_solve.
                                                             (line  718)
* stardisp:                              Functions and Variables for Display.
                                                             (line  599)
* starplot:                              Functions and Variables for statistical graphs.
                                                             (line  398)
* starplot_description:                  Functions and Variables for statistical graphs.
                                                             (line  399)
* stats_numer:                           Functions and Variables for stats.
                                                             (line    7)
* status:                                Functions and Variables for Runtime Environment.
                                                             (line   60)
* std:                                   Functions and Variables for descriptive statistics.
                                                             (line   79)
* std1:                                  Functions and Variables for descriptive statistics.
                                                             (line   98)
* std_bernoulli:                         Functions and Variables for discrete distributions.
                                                             (line  299)
* std_beta:                              Functions and Variables for continuous distributions.
                                                             (line  932)
* std_binomial:                          Functions and Variables for discrete distributions.
                                                             (line  144)
* std_chi2:                              Functions and Variables for continuous distributions.
                                                             (line  369)
* std_continuous_uniform:                Functions and Variables for continuous distributions.
                                                             (line  994)
* std_discrete_uniform:                  Functions and Variables for discrete distributions.
                                                             (line  454)
* std_exp:                               Functions and Variables for continuous distributions.
                                                             (line  680)
* std_f:                                 Functions and Variables for continuous distributions.
                                                             (line  549)
* std_gamma:                             Functions and Variables for continuous distributions.
                                                             (line  859)
* std_general_finite_discrete:           Functions and Variables for discrete distributions.
                                                             (line   68)
* std_geometric:                         Functions and Variables for discrete distributions.
                                                             (line  393)
* std_gumbel:                            Functions and Variables for continuous distributions.
                                                             (line 1506)
* std_hypergeometric:                    Functions and Variables for discrete distributions.
                                                             (line  527)
* std_laplace:                           Functions and Variables for continuous distributions.
                                                             (line 1413)
* std_logistic:                          Functions and Variables for continuous distributions.
                                                             (line 1054)
* std_lognormal:                         Functions and Variables for continuous distributions.
                                                             (line  793)
* std_negative_binomial:                 Functions and Variables for discrete distributions.
                                                             (line  602)
* std_noncentral_chi2:                   Functions and Variables for continuous distributions.
                                                             (line  474)
* std_noncentral_student_t:              Functions and Variables for continuous distributions.
                                                             (line  239)
* std_normal:                            Functions and Variables for continuous distributions.
                                                             (line   56)
* std_pareto:                            Functions and Variables for continuous distributions.
                                                             (line 1112)
* std_poisson:                           Functions and Variables for discrete distributions.
                                                             (line  209)
* std_rayleigh:                          Functions and Variables for continuous distributions.
                                                             (line 1301)
* std_student_t:                         Functions and Variables for continuous distributions.
                                                             (line  131)
* std_weibull:                           Functions and Variables for continuous distributions.
                                                             (line 1170)
* stemplot:                              Functions and Variables for statistical graphs.
                                                             (line  462)
* stirling:                              Functions and Variables for stirling.
                                                             (line    8)
* stirling1:                             Functions and Variables for Sets.
                                                             (line 1054)
* stirling2:                             Functions and Variables for Sets.
                                                             (line 1113)
* strim:                                 Functions and Variables for strings.
                                                             (line  255)
* striml:                                Functions and Variables for strings.
                                                             (line  266)
* strimr:                                Functions and Variables for strings.
                                                             (line  270)
* string:                                Functions and Variables for Strings.
                                                             (line   54)
* stringdisp:                            Functions and Variables for Strings.
                                                             (line   62)
* stringout:                             Functions and Variables for File Input and Output.
                                                             (line  403)
* stringp:                               Functions and Variables for strings.
                                                             (line    7)
* strong_components:                     Functions and Variables for graphs.
                                                             (line 1106)
* structures:                            Functions and Variables for Structures.
                                                             (line    7)
* struve_h:                              Struve Functions.   (line   10)
* struve_l:                              Struve Functions.   (line   14)
* style:                                 Plotting Options.   (line  227)
* sublis:                                Functions and Variables for Expressions.
                                                             (line 1026)
* sublis_apply_lambda:                   Functions and Variables for Expressions.
                                                             (line 1042)
* sublist:                               Functions and Variables for Lists.
                                                             (line  550)
* sublist_indices:                       Functions and Variables for Lists.
                                                             (line  562)
* submatrix:                             Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1209)
* subnumsimp:                            Functions and Variables for Expressions.
                                                             (line 1050)
* subsample:                             Functions and Variables for data manipulation.
                                                             (line   65)
* Subscript operator:                    Functions and Variables for Lists.
                                                             (line    8)
* subset:                                Functions and Variables for Sets.
                                                             (line 1183)
* subsetp:                               Functions and Variables for Sets.
                                                             (line 1202)
* subst:                                 Functions and Variables for Expressions.
                                                             (line 1069)
* subst_parallel:                        Functions and Variables for to_poly_solve.
                                                             (line  730)
* substinpart:                           Functions and Variables for Expressions.
                                                             (line 1120)
* substpart:                             Functions and Variables for Expressions.
                                                             (line 1177)
* substring:                             Functions and Variables for strings.
                                                             (line  275)
* Subtraction:                           Arithmetic operators.
                                                             (line    8)
* subvar:                                Functions and Variables for Arrays.
                                                             (line  428)
* subvarp:                               Functions and Variables for Arrays.
                                                             (line  453)
* sum:                                   Sums and Products.  (line  117)
* sumcontract:                           Sums and Products.  (line  218)
* sumexpand:                             Sums and Products.  (line  231)
* summand_to_rec:                        Functions and Variables for solve_rec.
                                                             (line  185)
* sumsplitfact:                          Combinatorial Functions.
                                                             (line  181)
* supcase:                               Functions and Variables for strings.
                                                             (line  290)
* supcontext:                            Functions and Variables for Facts.
                                                             (line  418)
* surface_hide:                          Functions and Variables for draw.
                                                             (line 1625)
* symbolp:                               Functions and Variables for Expressions.
                                                             (line 1206)
* symmdifference:                        Functions and Variables for Sets.
                                                             (line 1215)
* symmetric:                             Functions and Variables for Simplification.
                                                             (line  642)
* symmetricp:                            Functions and Variables for ctensor.
                                                             (line  839)
* system:                                Functions and Variables for Runtime Environment.
                                                             (line   84)
* t:                                     Plotting Options.   (line  265)
* tab:                                   Functions and Variables for characters.
                                                             (line   99)
* take_channel:                          Functions and Variables for pictures.
                                                             (line   98)
* take_inference:                        Functions and Variables for inference_result.
                                                             (line   74)
* tan:                                   Functions and Variables for Trigonometric.
                                                             (line  248)
* tanh:                                  Functions and Variables for Trigonometric.
                                                             (line  252)
* taylor:                                Functions and Variables for Series.
                                                             (line  366)
* taylor_logexpand:                      Functions and Variables for Series.
                                                             (line  555)
* taylor_order_coefficients:             Functions and Variables for Series.
                                                             (line  572)
* taylor_simplifier:                     Functions and Variables for Series.
                                                             (line  582)
* taylor_truncate_polynomials:           Functions and Variables for Series.
                                                             (line  587)
* taylordepth:                           Functions and Variables for Series.
                                                             (line  518)
* taylorinfo:                            Functions and Variables for Series.
                                                             (line  526)
* taylorp:                               Functions and Variables for Series.
                                                             (line  551)
* taytorat:                              Functions and Variables for Series.
                                                             (line  597)
* tcl_output:                            Functions and Variables for Miscellaneous Options.
                                                             (line  134)
* tcontract:                             Functions and Variables for Symmetries.
                                                             (line  279)
* tellrat:                               Functions and Variables for Polynomials.
                                                             (line 1513)
* tellsimp:                              Functions and Variables for Rules and Patterns.
                                                             (line  610)
* tellsimpafter:                         Functions and Variables for Rules and Patterns.
                                                             (line  668)
* tensorkill:                            Functions and Variables for ctensor.
                                                             (line 1271)
* tentex:                                Functions and Variables for itensor.
                                                             (line 1548)
* tenth:                                 Functions and Variables for Lists.
                                                             (line  599)
* terminal <1>:                          Functions and Variables for graphs.
                                                             (line 1657)
* terminal:                              Functions and Variables for draw.
                                                             (line 1643)
* test_mean:                             Functions and Variables for stats.
                                                             (line   16)
* test_means_difference:                 Functions and Variables for stats.
                                                             (line  125)
* test_normality:                        Functions and Variables for stats.
                                                             (line  791)
* test_proportion:                       Functions and Variables for stats.
                                                             (line  387)
* test_proportions_difference:           Functions and Variables for stats.
                                                             (line  489)
* test_rank_sum:                         Functions and Variables for stats.
                                                             (line  719)
* test_sign:                             Functions and Variables for stats.
                                                             (line  581)
* test_signed_rank:                      Functions and Variables for stats.
                                                             (line  636)
* test_variance:                         Functions and Variables for stats.
                                                             (line  242)
* test_variance_ratio:                   Functions and Variables for stats.
                                                             (line  315)
* testsuite_files:                       Functions and Variables for Bug Detection and Reporting.
                                                             (line   49)
* tex:                                   Functions and Variables for TeX Output.
                                                             (line    7)
* tex1:                                  Functions and Variables for TeX Output.
                                                             (line   66)
* texput:                                Functions and Variables for TeX Output.
                                                             (line   78)
* third:                                 Functions and Variables for Lists.
                                                             (line  604)
* throw:                                 Functions and Variables for Program Flow.
                                                             (line  586)
* time:                                  Functions and Variables for Runtime Environment.
                                                             (line  104)
* timedate:                              Functions and Variables for Runtime Environment.
                                                             (line  115)
* timer:                                 Functions and Variables for Debugging.
                                                             (line   78)
* timer_devalue:                         Functions and Variables for Debugging.
                                                             (line  119)
* timer_info:                            Functions and Variables for Debugging.
                                                             (line  131)
* title:                                 Functions and Variables for draw.
                                                             (line 1714)
* tldefint:                              Functions and Variables for Integration.
                                                             (line  564)
* tlimit:                                Functions and Variables for Limits.
                                                             (line   67)
* tlimswitch:                            Functions and Variables for Limits.
                                                             (line   74)
* to_lisp:                               Functions and Variables for Command Line.
                                                             (line  617)
* to_poly:                               Functions and Variables for to_poly_solve.
                                                             (line  785)
* to_poly_solve:                         Functions and Variables for to_poly_solve.
                                                             (line  844)
* todd_coxeter:                          Functions and Variables for Groups.
                                                             (line    8)
* toeplitz:                              Functions and Variables for linearalgebra.
                                                             (line  602)
* tokens:                                Functions and Variables for strings.
                                                             (line  301)
* topological_sort:                      Functions and Variables for graphs.
                                                             (line 1118)
* totaldisrep:                           Functions and Variables for Polynomials.
                                                             (line 1567)
* totalfourier:                          Functions and Variables for Fourier series.
                                                             (line   85)
* totient:                               Functions and Variables for Number Theory.
                                                             (line  491)
* tpartpol:                              Functions and Variables for Symmetries.
                                                             (line  285)
* tr:                                    Functions and Variables for ctensor.
                                                             (line 1253)
* tr_array_as_ref:                       Functions and Variables for Function Definition.
                                                             (line 1184)
* tr_bound_function_applyp:              Functions and Variables for Function Definition.
                                                             (line 1196)
* tr_file_tty_messagesp:                 Functions and Variables for Function Definition.
                                                             (line 1208)
* tr_float_can_branch_complex:           Functions and Variables for Function Definition.
                                                             (line 1218)
* tr_function_call_default:              Functions and Variables for Function Definition.
                                                             (line 1233)
* tr_numer:                              Functions and Variables for Function Definition.
                                                             (line 1248)
* tr_optimize_max_loop:                  Functions and Variables for Function Definition.
                                                             (line 1255)
* tr_semicompile:                        Functions and Variables for Function Definition.
                                                             (line 1264)
* tr_state_vars:                         Functions and Variables for Function Definition.
                                                             (line 1272)
* tr_warn_bad_function_calls:            Functions and Variables for Function Definition.
                                                             (line 1290)
* tr_warn_fexpr:                         Functions and Variables for Function Definition.
                                                             (line 1298)
* tr_warn_meval:                         Functions and Variables for Function Definition.
                                                             (line 1306)
* tr_warn_mode:                          Functions and Variables for Function Definition.
                                                             (line 1313)
* tr_warn_undeclared:                    Functions and Variables for Function Definition.
                                                             (line 1320)
* tr_warn_undefined_variable:            Functions and Variables for Function Definition.
                                                             (line 1327)
* tr_warnings_get:                       Functions and Variables for Function Definition.
                                                             (line 1285)
* trace:                                 Functions and Variables for Debugging.
                                                             (line  152)
* trace_options:                         Functions and Variables for Debugging.
                                                             (line  180)
* tracematrix:                           Package functs.     (line   28)
* transcompile:                          Functions and Variables for Function Definition.
                                                             (line 1053)
* transform:                             Functions and Variables for draw.
                                                             (line 1730)
* transform_xy:                          Plotting Options.   (line  271)
* translate:                             Functions and Variables for Function Definition.
                                                             (line 1064)
* translate_file:                        Functions and Variables for Function Definition.
                                                             (line 1119)
* transparent:                           Functions and Variables for draw.
                                                             (line 1771)
* transpose:                             Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1215)
* transrun:                              Functions and Variables for Function Definition.
                                                             (line 1176)
* tree_reduce:                           Functions and Variables for Sets.
                                                             (line 1244)
* treefale:                              Definitions for IFS fractals.
                                                             (line   32)
* treillis:                              Functions and Variables for Symmetries.
                                                             (line  497)
* treinat:                               Functions and Variables for Symmetries.
                                                             (line  506)
* triangle:                              Functions and Variables for draw.
                                                             (line 3451)
* triangularize:                         Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1228)
* trigexpand:                            Functions and Variables for Trigonometric.
                                                             (line  256)
* trigexpandplus:                        Functions and Variables for Trigonometric.
                                                             (line  293)
* trigexpandtimes:                       Functions and Variables for Trigonometric.
                                                             (line  302)
* triginverses:                          Functions and Variables for Trigonometric.
                                                             (line  311)
* trigrat:                               Functions and Variables for Trigonometric.
                                                             (line  361)
* trigreduce:                            Functions and Variables for Trigonometric.
                                                             (line  328)
* trigsign:                              Functions and Variables for Trigonometric.
                                                             (line  342)
* trigsimp:                              Functions and Variables for Trigonometric.
                                                             (line  350)
* trivial_solutions:                     Functions and Variables for zeilberger.
                                                             (line  132)
* true:                                  Functions and Variables for Constants.
                                                             (line  111)
* trunc:                                 Functions and Variables for Series.
                                                             (line  603)
* truncated_cube_graph:                  Functions and Variables for graphs.
                                                             (line  330)
* truncated_dodecahedron_graph:          Functions and Variables for graphs.
                                                             (line  334)
* truncated_icosahedron_graph:           Functions and Variables for graphs.
                                                             (line  338)
* truncated_tetrahedron_graph:           Functions and Variables for graphs.
                                                             (line  342)
* ttyoff:                                Functions and Variables for Display.
                                                             (line  606)
* tube:                                  Functions and Variables for draw.
                                                             (line 3482)
* tube_extremes:                         Functions and Variables for draw.
                                                             (line 1789)
* tutte_graph:                           Functions and Variables for graphs.
                                                             (line  346)
* ueivects:                              Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1252)
* ufg:                                   Functions and Variables for ctensor.
                                                             (line 1183)
* uforget:                               Functions and Variables for Units.
                                                             (line  115)
* ug:                                    Functions and Variables for ctensor.
                                                             (line 1218)
* ultraspherical:                        Functions and Variables for orthogonal polynomials.
                                                             (line  227)
* und:                                   Functions and Variables for Constants.
                                                             (line  116)
* Undefined:                             Functions and Variables for Constants.
                                                             (line  116)
* underlying_graph:                      Functions and Variables for graphs.
                                                             (line  350)
* undiff:                                Functions and Variables for itensor.
                                                             (line  673)
* union:                                 Functions and Variables for Sets.
                                                             (line 1278)
* unique:                                Functions and Variables for Lists.
                                                             (line  586)
* unit_step:                             Functions and Variables for orthogonal polynomials.
                                                             (line  219)
* unit_vectors:                          Functions and Variables for draw.
                                                             (line 1805)
* uniteigenvectors:                      Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1251)
* unitp:                                 Functions and Variables for ezunits.
                                                             (line  410)
* units:                                 Functions and Variables for ezunits.
                                                             (line  301)
* unitvector:                            Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1280)
* unknown:                               Functions and Variables for Predicates.
                                                             (line  184)
* unless:                                Functions and Variables for Program Flow.
                                                             (line  593)
* unorder:                               Functions and Variables for Expressions.
                                                             (line 1214)
* unsum:                                 Functions and Variables for Series.
                                                             (line  620)
* untellrat:                             Functions and Variables for Polynomials.
                                                             (line 1578)
* untimer:                               Functions and Variables for Debugging.
                                                             (line  104)
* untrace:                               Functions and Variables for Debugging.
                                                             (line  238)
* uppercasep:                            Functions and Variables for characters.
                                                             (line  103)
* uric:                                  Functions and Variables for ctensor.
                                                             (line 1209)
* uricci:                                Functions and Variables for ctensor.
                                                             (line  219)
* uriem:                                 Functions and Variables for ctensor.
                                                             (line 1201)
* uriemann:                              Functions and Variables for ctensor.
                                                             (line  294)
* use_fast_arrays:                       Functions and Variables for Arrays.
                                                             (line  458)
* user_preamble:                         Functions and Variables for draw.
                                                             (line 1826)
* usersetunits:                          Functions and Variables for Units.
                                                             (line  216)
* uvect:                                 Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1281)
* values:                                Functions and Variables for Command Line.
                                                             (line  646)
* vandermonde_matrix:                    Functions and Variables for linearalgebra.
                                                             (line  621)
* var:                                   Functions and Variables for descriptive statistics.
                                                             (line   33)
* var1:                                  Functions and Variables for descriptive statistics.
                                                             (line   54)
* var_bernoulli:                         Functions and Variables for discrete distributions.
                                                             (line  284)
* var_beta:                              Functions and Variables for continuous distributions.
                                                             (line  927)
* var_binomial:                          Functions and Variables for discrete distributions.
                                                             (line  138)
* var_chi2:                              Functions and Variables for continuous distributions.
                                                             (line  352)
* var_continuous_uniform:                Functions and Variables for continuous distributions.
                                                             (line  988)
* var_discrete_uniform:                  Functions and Variables for discrete distributions.
                                                             (line  448)
* var_exp:                               Functions and Variables for continuous distributions.
                                                             (line  659)
* var_f:                                 Functions and Variables for continuous distributions.
                                                             (line  544)
* var_gamma:                             Functions and Variables for continuous distributions.
                                                             (line  854)
* var_general_finite_discrete:           Functions and Variables for discrete distributions.
                                                             (line   61)
* var_geometric:                         Functions and Variables for discrete distributions.
                                                             (line  388)
* var_gumbel:                            Functions and Variables for continuous distributions.
                                                             (line 1501)
* var_hypergeometric:                    Functions and Variables for discrete distributions.
                                                             (line  520)
* var_laplace:                           Functions and Variables for continuous distributions.
                                                             (line 1408)
* var_logistic:                          Functions and Variables for continuous distributions.
                                                             (line 1049)
* var_lognormal:                         Functions and Variables for continuous distributions.
                                                             (line  788)
* var_negative_binomial:                 Functions and Variables for discrete distributions.
                                                             (line  596)
* var_noncentral_chi2:                   Functions and Variables for continuous distributions.
                                                             (line  469)
* var_noncentral_student_t:              Functions and Variables for continuous distributions.
                                                             (line  232)
* var_normal:                            Functions and Variables for continuous distributions.
                                                             (line   50)
* var_pareto:                            Functions and Variables for continuous distributions.
                                                             (line 1107)
* var_poisson:                           Functions and Variables for discrete distributions.
                                                             (line  204)
* var_rayleigh:                          Functions and Variables for continuous distributions.
                                                             (line 1279)
* var_student_t:                         Functions and Variables for continuous distributions.
                                                             (line  121)
* var_weibull:                           Functions and Variables for continuous distributions.
                                                             (line 1165)
* vect_cross:                            Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1335)
* vector:                                Functions and Variables for draw.
                                                             (line 3506)
* vectorpotential:                       Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1290)
* vectorsimp:                            Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1297)
* verbify:                               Functions and Variables for Expressions.
                                                             (line 1252)
* verbose:                               Functions and Variables for Series.
                                                             (line  650)
* vers:                                  Package functs.     (line  174)
* vertex_color:                          Functions and Variables for graphs.
                                                             (line 1552)
* vertex_coloring:                       Functions and Variables for graphs.
                                                             (line 1210)
* vertex_connectivity:                   Functions and Variables for graphs.
                                                             (line 1135)
* vertex_degree:                         Functions and Variables for graphs.
                                                             (line 1141)
* vertex_distance:                       Functions and Variables for graphs.
                                                             (line 1145)
* vertex_eccentricity:                   Functions and Variables for graphs.
                                                             (line 1158)
* vertex_in_degree:                      Functions and Variables for graphs.
                                                             (line 1168)
* vertex_out_degree:                     Functions and Variables for graphs.
                                                             (line 1188)
* vertex_partition:                      Functions and Variables for graphs.
                                                             (line 1576)
* vertex_size:                           Functions and Variables for graphs.
                                                             (line 1548)
* vertex_type:                           Functions and Variables for graphs.
                                                             (line 1541)
* vertices:                              Functions and Variables for graphs.
                                                             (line 1201)
* vertices_to_cycle:                     Functions and Variables for graphs.
                                                             (line 1685)
* vertices_to_path:                      Functions and Variables for graphs.
                                                             (line 1680)
* view:                                  Functions and Variables for draw.
                                                             (line 1849)
* warnings:                              Functions and Variables for zeilberger.
                                                             (line  117)
* Wedge product:                         Functions and Variables for itensor.
                                                             (line 1394)
* weyl:                                  Functions and Variables for ctensor.
                                                             (line 1222)
* wheel_graph:                           Functions and Variables for graphs.
                                                             (line  354)
* while:                                 Functions and Variables for Program Flow.
                                                             (line  592)
* wiener_index:                          Functions and Variables for graphs.
                                                             (line 1224)
* wired_surface:                         Functions and Variables for draw.
                                                             (line 1867)
* with_stdout:                           Functions and Variables for File Input and Output.
                                                             (line  446)
* write_binary_data:                     Functions and Variables for binary input and output.
                                                             (line   70)
* write_data:                            Functions and Variables for plain-text input and output.
                                                             (line   89)
* writefile:                             Functions and Variables for File Input and Output.
                                                             (line  474)
* wronskian:                             Package functs.     (line   16)
* x:                                     Plotting Options.   (line  281)
* x_voxel:                               Functions and Variables for draw.
                                                             (line 1885)
* xaxis:                                 Functions and Variables for draw.
                                                             (line 1893)
* xaxis_color:                           Functions and Variables for draw.
                                                             (line 1911)
* xaxis_secondary:                       Functions and Variables for draw.
                                                             (line 1930)
* xaxis_type:                            Functions and Variables for draw.
                                                             (line 1957)
* xaxis_width:                           Functions and Variables for draw.
                                                             (line 1976)
* xlabel <1>:                            Functions and Variables for draw.
                                                             (line 1995)
* xlabel:                                Plotting Options.   (line  290)
* xrange:                                Functions and Variables for draw.
                                                             (line 2014)
* xrange_secondary:                      Functions and Variables for draw.
                                                             (line 2035)
* xreduce:                               Functions and Variables for Sets.
                                                             (line 1306)
* xthru:                                 Functions and Variables for Simplification.
                                                             (line  650)
* xtics:                                 Functions and Variables for draw.
                                                             (line 2050)
* xtics_axis:                            Functions and Variables for draw.
                                                             (line 2111)
* xtics_rotate:                          Functions and Variables for draw.
                                                             (line 2122)
* xtics_rotate_secondary:                Functions and Variables for draw.
                                                             (line 2132)
* xtics_secondary:                       Functions and Variables for draw.
                                                             (line 2142)
* xtics_secondary_axis:                  Functions and Variables for draw.
                                                             (line 2151)
* xu_grid:                               Functions and Variables for draw.
                                                             (line 2162)
* xy_file:                               Functions and Variables for draw.
                                                             (line 2182)
* xyplane:                               Functions and Variables for draw.
                                                             (line 2193)
* y:                                     Plotting Options.   (line  300)
* y_voxel:                               Functions and Variables for draw.
                                                             (line 2211)
* yaxis:                                 Functions and Variables for draw.
                                                             (line 2219)
* yaxis_color:                           Functions and Variables for draw.
                                                             (line 2237)
* yaxis_secondary:                       Functions and Variables for draw.
                                                             (line 2256)
* yaxis_type:                            Functions and Variables for draw.
                                                             (line 2280)
* yaxis_width:                           Functions and Variables for draw.
                                                             (line 2299)
* ylabel <1>:                            Plotting Options.   (line  307)
* ylabel:                                Functions and Variables for draw.
                                                             (line 2318)
* yrange:                                Functions and Variables for draw.
                                                             (line 2337)
* yrange_secondary:                      Functions and Variables for draw.
                                                             (line 2359)
* ytics:                                 Functions and Variables for draw.
                                                             (line 2386)
* ytics_axis:                            Functions and Variables for draw.
                                                             (line 2395)
* ytics_rotate:                          Functions and Variables for draw.
                                                             (line 2406)
* ytics_rotate_secondary:                Functions and Variables for draw.
                                                             (line 2416)
* ytics_secondary:                       Functions and Variables for draw.
                                                             (line 2426)
* ytics_secondary_axis:                  Functions and Variables for draw.
                                                             (line 2435)
* yv_grid:                               Functions and Variables for draw.
                                                             (line 2446)
* z:                                     Plotting Options.   (line  316)
* z_voxel:                               Functions and Variables for draw.
                                                             (line 2466)
* zaxis:                                 Functions and Variables for draw.
                                                             (line 2474)
* zaxis_color:                           Functions and Variables for draw.
                                                             (line 2494)
* zaxis_type:                            Functions and Variables for draw.
                                                             (line 2515)
* zaxis_width:                           Functions and Variables for draw.
                                                             (line 2535)
* Zeilberger:                            Functions and Variables for zeilberger.
                                                             (line   73)
* zeroa:                                 Functions and Variables for Constants.
                                                             (line  127)
* zerob:                                 Functions and Variables for Constants.
                                                             (line  144)
* zerobern:                              Functions and Variables for Number Theory.
                                                             (line  496)
* zeroequiv:                             Functions and Variables for Predicates.
                                                             (line  189)
* zerofor:                               Functions and Variables for linearalgebra.
                                                             (line  627)
* zeromatrix:                            Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1343)
* zeromatrixp:                           Functions and Variables for linearalgebra.
                                                             (line  640)
* zeta:                                  Functions and Variables for Number Theory.
                                                             (line  504)
* zeta%pi:                               Functions and Variables for Number Theory.
                                                             (line  537)
* zlabel <1>:                            Functions and Variables for draw.
                                                             (line 2555)
* zlabel:                                Plotting Options.   (line  321)
* zlange:                                Functions and Variables for lapack.
                                                             (line  278)
* zn_log:                                Functions and Variables for Number Theory.
                                                             (line  558)
* zn_order:                              Functions and Variables for Number Theory.
                                                             (line  615)
* zn_primroot:                           Functions and Variables for Number Theory.
                                                             (line  664)
* zn_primroot_limit:                     Functions and Variables for Number Theory.
                                                             (line  721)
* zn_primroot_p:                         Functions and Variables for Number Theory.
                                                             (line  732)
* zn_primroot_pretest:                   Functions and Variables for Number Theory.
                                                             (line  772)
* zn_primroot_verbose:                   Functions and Variables for Number Theory.
                                                             (line  785)
* zrange:                                Functions and Variables for draw.
                                                             (line 2575)
* ztics:                                 Functions and Variables for draw.
                                                             (line 2598)
* ztics_axis:                            Functions and Variables for draw.
                                                             (line 2607)
* ztics_rotate:                          Functions and Variables for draw.
                                                             (line 2618)
* |:                                     Functions and Variables for itensor.
                                                             (line 1428)
* ~:                                     Functions and Variables for itensor.
                                                             (line 1394)


